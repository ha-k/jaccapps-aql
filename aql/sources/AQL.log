*** This is Jacc: Just another compiler compiler... 
*** Run of Mon Mar 26 09:27:06 CEST 2018
*** Reading grammar in file ./sources/AQL.grm ... 
*** Including file ./sources\declarations.grm ...
*** Including file ./sources\ancillary.grm ...
*** Including file ./sources\nodeclasses.grm ...
*** Including file ./sources\rules.grm ...
***	... in 65 ms

RULES:

[0]	$START$ --> $ROOTS$
	precedence = 1
[1]	$ROOTS$ --> Statements_opt
	precedence = 1
[2]	$ROOTS$ --> '$Statements_opt_switch$' Statements_opt
	precedence = 1
[3]	Operator --> 'OPERATOR_'
	precedence = 1
[4]	Operator --> '_OPERATOR_'
	precedence = 1
[5]	Operator --> '_OPERATOR'
	precedence = 1
[6]	Statements_opt -->
	precedence = 1
[7]	Statements_opt --> Statements_opt Statement
	precedence = 1
[8]	$ACTION0$ -->
	precedence = 1
[9]	Statement --> '#' Pragma PragmaArgument_opt $ACTION0$ EOS
	precedence = 1
[10]	Statement --> DefinitionStatement
	precedence = 1
[11]	$ACTION1$ -->
	precedence = 1
[12]	Statement --> '?' Expression $ACTION1$ EOS
	precedence = 1
[13]	$ACTION2$ -->
	precedence = 1
[14]	Statement --> Expression $ACTION2$ EOS
	precedence = 1
[15]	$ACTION3$ -->
	precedence = 1
[16]	Statement --> 'error' $ACTION3$ EOS
	precedence = 1
[17]	Statement --> ';'
	precedence = 1
[18]	DefinitionStatement --> 'define' DefinitionKind EOS
	precedence = 1
[19]	DefinitionStatement --> StructureOrClassDeclaration
	precedence = 1
[20]	DefinitionKind --> 'operator' Operator 'SPECIFIER' 'INT'
	precedence = 1174
[21]	DefinitionKind --> 'signature' Operator Typing
	precedence = 1
[22]	$ACTION4$ -->
	precedence = 1
[23]	$ACTION5$ -->
	precedence = 1
[24]	DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' Type
	precedence = 1
[25]	$ACTION6$ -->
	precedence = 1
[26]	$ACTION7$ -->
	precedence = 1
[27]	DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt '=' Type
	precedence = 1
[28]	DefinitionKind --> 'value' Definition
	precedence = 1
[29]	DefinitionKind --> Definition
	precedence = 1
[30]	$ACTION8$ -->
	precedence = 1
[31]	$ACTION9$ -->
	precedence = 1
[32]	StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	precedence = 1
[33]	$ACTION10$ -->
	precedence = 1
[34]	StructureOrClassDeclaration --> 'class' 'ID' $ACTION10$ TypeParameters_opt Interface Implementation_opt
	precedence = 1174
[35]	Pragma --> 'ID'
	precedence = 1174
[36]	PragmaArgument_opt -->
	precedence = 1
[37]	PragmaArgument_opt --> 'STRING'
	precedence = 1174
[38]	$ACTION11$ -->
	precedence = 1
[39]	EOS --> $ACTION11$ ';'
	precedence = 1
[40]	Operator --> 'ID'
	precedence = 1174
[41]	Typing_opt -->
	precedence = 1
[42]	Typing_opt --> Typing
	precedence = 1
[43]	Typing --> ':' Type
	precedence = 1
[44]	Type_opt -->
	precedence = 1
[45]	Type_opt --> Type
	precedence = 1
[46]	Type --> TypeConstant
	precedence = 1
[47]	Type --> FunctionType
	precedence = 1
[48]	Type --> TupleType
	precedence = 1
[49]	Type --> ArrayType
	precedence = 1
[50]	Type --> CollectionType
	precedence = 1
[51]	Type --> IntRangeType
	precedence = 1
[52]	Type --> RealRangeType
	precedence = 1
[53]	Type --> TypeTerm
	precedence = 1
[54]	Type --> '(' Type_opt ')'
	precedence = 1179
[55]	Type --> '[' PrimitiveType ']'
	precedence = 1178
[56]	$ACTION12$ -->
	precedence = 1
[57]	Type --> 'forall' $ACTION12$ TypeParameters '.' Type
	precedence = 1176
[58]	TypeConstant --> PrimitiveType
	precedence = 1
[59]	TypeConstant --> 'string'
	precedence = 1
[60]	PrimitiveType --> 'void'
	precedence = 1
[61]	PrimitiveType --> 'int'
	precedence = 1
[62]	PrimitiveType --> 'boolean'
	precedence = 1
[63]	PrimitiveType --> 'char'
	precedence = 1
[64]	PrimitiveType --> 'real'
	precedence = 1
[65]	FunctionType --> Type '->' Type
	precedence = 1175
[66]	FunctionType --> '(' Types_opt ')' '->' Type
	precedence = 1175
[67]	TupleType --> '<' TupleTypeComponents '>'
	precedence = 1174
[68]	TupleTypeComponents --> Types_opt
	precedence = 1
[69]	TupleTypeComponents --> NamedTupleTypeComponents
	precedence = 1
[70]	NamedTupleTypeComponents --> NamedTupleTypeComponent
	precedence = 1
[71]	NamedTupleTypeComponents --> NamedTupleTypeComponents ',' NamedTupleTypeComponent
	precedence = 1
[72]	NamedTupleTypeComponent --> 'ID' Typing
	precedence = 1174
[73]	ArrayType --> Type '[' IndexType ']'
	precedence = 1178
[74]	IndexType --> IntType_opt
	precedence = 1
[75]	IndexType --> MapIndexType
	precedence = 1
[76]	IntType_opt -->
	precedence = 1
[77]	IntType_opt --> 'int'
	precedence = 1
[78]	MapIndexType --> SetType
	precedence = 1
[79]	MapIndexType --> IntRangeType
	precedence = 1
[80]	CollectionType --> SetType
	precedence = 1
[81]	CollectionType --> NonSetKind '{' Type_opt '}'
	precedence = 1
[82]	CollectionKind --> SetKind
	precedence = 1
[83]	CollectionKind --> NonSetKind
	precedence = 1
[84]	SetKind --> 'set'
	precedence = 1
[85]	NonSetKind --> 'bag'
	precedence = 1
[86]	NonSetKind --> 'list'
	precedence = 1
[87]	SetKind_opt -->
	precedence = 1
[88]	SetKind_opt --> SetKind
	precedence = 1
[89]	SetType --> SetKind_opt '{' Type_opt '}'
	precedence = 1
[90]	IntRangeType --> 'int' '..' 'int'
	precedence = 1
[91]	RealRangeType --> 'real' '..' 'real'
	precedence = 1
[92]	TypeTerm --> 'ID'
	precedence = 1174
[93]	TypeTerm --> 'ID' '(' Types ')'
	precedence = 1179
[94]	Types_opt -->
	precedence = 1
[95]	Types_opt --> Types
	precedence = 1
[96]	Types --> Type
	precedence = 1
[97]	Types --> Types ',' Type
	precedence = 1
[98]	TypeParameters_opt -->
	precedence = 1
[99]	TypeParameters_opt --> '(' TypeParameters ')'
	precedence = 1179
[100]	TypeParameters --> 'ID'
	precedence = 1174
[101]	TypeParameters --> TypeParameters ',' 'ID'
	precedence = 1174
[102]	Interface --> '{' MemberDeclarations_opt '}'
	precedence = 1
[103]	MemberDeclarations_opt -->
	precedence = 1
[104]	MemberDeclarations_opt --> MemberDeclarations_opt MemberDeclaration
	precedence = 1
[105]	MemberDeclaration --> 'ID' Typing Initialization_opt ';'
	precedence = 1
[106]	MemberDeclaration --> 'method' Operator Typing ';'
	precedence = 1
[107]	Initialization_opt -->
	precedence = 1
[108]	Initialization_opt --> '=' Expression
	precedence = 1
[109]	Implementation_opt -->
	precedence = 1
[110]	Implementation_opt --> '{' Definitions_opt '}'
	precedence = 1
[111]	Definitions_opt -->
	precedence = 1
[112]	Definitions_opt --> Definitions_opt Definition ';'
	precedence = 1
[113]	Definition --> Operator FunctionParameters_opt Typing_opt '=' Expression
	precedence = 1
[114]	FunctionParameters_opt -->
	precedence = 1
[115]	FunctionParameters_opt --> FunctionParameters
	precedence = 1
[116]	FunctionParameters --> '(' Parameters_opt ')'
	precedence = 1179
[117]	Parameters_opt -->
	precedence = 1
[118]	Parameters_opt --> Parameters
	precedence = 1
[119]	Parameters --> Parameter
	precedence = 1
[120]	Parameters --> Parameters ',' Parameter
	precedence = 1
[121]	Parameter --> 'ID' Typing_opt
	precedence = 1174
[122]	Expression_opt -->
	precedence = 1
[123]	Expression_opt --> Expression
	precedence = 1
[124]	Expression --> UntypedExpression Typing_opt
	precedence = 1
[125]	Expression --> Allocation
	precedence = 1
[126]	Expression --> Expression 'as' Type
	precedence = 1173
[127]	Expression --> '$' Expression
	precedence = 1177
[128]	Expression --> '(' Expression_opt ')'
	precedence = 1179
[129]	Allocation --> 'new' Type Dimensions_opt
	precedence = 1
[130]	Allocation --> 'new' Type Dimensions '=' Expression
	precedence = 1
[131]	Dimensions_opt -->
	precedence = 1
[132]	Dimensions_opt --> Dimensions
	precedence = 1
[133]	Dimensions --> Dimension
	precedence = 1
[134]	Dimensions --> Dimensions Dimension
	precedence = 1
[135]	Dimension --> '[' UntypedExpression ']'
	precedence = 1178
[136]	UntypedExpression --> Literal
	precedence = 1
[137]	UntypedExpression --> CollectionKind '{' Expressions_opt '}'
	precedence = 1
[138]	UntypedExpression --> TupleExpression
	precedence = 1
[139]	UntypedExpression --> Expression '!' Expression
	precedence = 1
[140]	UntypedExpression --> '#[' ArrayExtension ']#'
	precedence = 1
[141]	UntypedExpression --> ArraySlotExpression
	precedence = 1
[142]	UntypedExpression --> OperatorExpression
	precedence = 1
[143]	UntypedExpression --> 'function' FunctionParameters Expression
	precedence = 1
[144]	UntypedExpression --> Expression Arguments
	precedence = 1
[145]	UntypedExpression --> 'return' Expression_opt
	precedence = 1
[146]	UntypedExpression --> 'if' UntypedExpression 'then' Expression 'else' Expression
	precedence = 1
[147]	UntypedExpression --> 'while' UntypedExpression 'do' Expression
	precedence = 1
[148]	UntypedExpression --> 'let' Locals 'in' Expression
	precedence = 1
[149]	UntypedExpression --> Location '=' Expression
	precedence = 1
[150]	UntypedExpression --> Expression '.' Member
	precedence = 1176
[151]	UntypedExpression --> Sequence
	precedence = 1
[152]	UntypedExpression --> '(' UntypedExpression ')'
	precedence = 1179
[153]	UntypedExpression --> Comprehension
	precedence = 1
[154]	UntypedExpression --> 'foreach' '(' Qualifiers_opt ')' Expression_opt
	precedence = 1179
[155]	UntypedExpression --> 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	precedence = 1179
[156]	Literal --> 'INT'
	precedence = 1174
[157]	Literal --> 'CHAR'
	precedence = 1174
[158]	Literal --> 'REAL'
	precedence = 1174
[159]	Literal --> 'STRING'
	precedence = 1174
[160]	Literal --> 'true'
	precedence = 1
[161]	Literal --> 'false'
	precedence = 1
[162]	Literal --> 'null'
	precedence = 1
[163]	TupleExpression --> '<' TupleComponents '>'
	precedence = 1174
[164]	TupleExpression --> TupleProjection
	precedence = 1
[165]	TupleComponents --> Expressions_opt
	precedence = 1
[166]	TupleComponents --> NamedTupleComponents
	precedence = 1
[167]	NamedTupleComponents --> NamedTupleComponent
	precedence = 1
[168]	NamedTupleComponents --> NamedTupleComponents ',' NamedTupleComponent
	precedence = 1
[169]	NamedTupleComponent --> 'ID' ':=' Expression
	precedence = 1
[170]	TupleProjection --> UntypedExpression '@' TupleSelector
	precedence = 1172
[171]	TupleSelector --> 'INT'
	precedence = 1174
[172]	TupleSelector --> 'ID'
	precedence = 1174
[173]	ArrayExtension --> Expressions
	precedence = 1
[174]	ArrayExtension --> IndexedExpressions
	precedence = 1
[175]	IndexedExpressions --> IndexedExpression
	precedence = 1
[176]	IndexedExpressions --> IndexedExpressions ',' IndexedExpression
	precedence = 1
[177]	IndexedExpression --> UntypedExpression ':' Expression
	precedence = 1
[178]	ArraySlotExpression --> Expression '[' Expression ']'
	precedence = 1178
[179]	OperatorExpression --> Operator
	precedence = 1
[180]	OperatorExpression --> 'OPERATOR_' Expression
	precedence = 1
[181]	OperatorExpression --> Expression '_OPERATOR'
	precedence = 1
[182]	OperatorExpression --> Expression '_OPERATOR_' Expression
	precedence = 1
[183]	Arguments --> '(' Expressions_opt ')'
	precedence = 1179
[184]	Expressions_opt -->
	precedence = 1
[185]	Expressions_opt --> Expressions
	precedence = 1
[186]	Expressions --> Expression
	precedence = 1
[187]	Expressions --> Expressions ',' Expression
	precedence = 1
[188]	Locals --> Local ';'
	precedence = 1
[189]	Locals --> Locals Local ';'
	precedence = 1
[190]	Local --> Parameter Initialization_opt
	precedence = 1
[191]	Location --> 'ID'
	precedence = 1174
[192]	Location --> TupleProjection
	precedence = 1
[193]	Location --> ArraySlotExpression
	precedence = 1
[194]	Location --> Expression '.' 'ID'
	precedence = 1174
[195]	Member --> 'ID'
	precedence = 1174
[196]	Member --> Operator Arguments
	precedence = 1
[197]	Sequence --> '{' ExpressionSequence_opt '}'
	precedence = 1
[198]	ExpressionSequence_opt -->
	precedence = 1
[199]	ExpressionSequence_opt --> Expression ';'
	precedence = 1
[200]	ExpressionSequence_opt --> ExpressionSequence_opt Expression ';'
	precedence = 1
[201]	Comprehension --> Monoid '{' Expression '|' Qualifiers_opt '}'
	precedence = 1
[202]	Monoid --> '[' Expression ',' Expression ']' InPlace_opt
	precedence = 1178
[203]	InPlace_opt -->
	precedence = 1
[204]	InPlace_opt --> '<'
	precedence = 1174
[205]	InPlace_opt --> '>'
	precedence = 1174
[206]	Qualifiers_opt -->
	precedence = 1
[207]	Qualifiers_opt --> Qualifiers
	precedence = 1
[208]	Qualifiers --> Qualifier
	precedence = 1
[209]	Qualifiers --> Qualifiers ',' Qualifier
	precedence = 1
[210]	Qualifier --> Expression
	precedence = 1
[211]	Qualifier --> Expression '<-' Expression
	precedence = 1

*** Starting grammar analysis ... 
***	Preprocessing the grammar ... 
***	... in 28 ms

TERMINALS:

	----------	-------------	--------
	PRECEDENCE	ASSOCIATIVITY	TERMINAL
	----------	-------------	--------
[0]	1		none		'$EMPTY$'
[1]	1		none		'$E_O_I$'
[2]	1		none		'error'
[3]	1		none		'operator'
[4]	1		none		'$Statements_opt_switch$'
[5]	1		dynamic		'OPERATOR_'
[6]	1		dynamic		'_OPERATOR_'
[7]	1		dynamic		'_OPERATOR'
[8]	1172		left		'@'
[9]	1173		left		'as'
[10]	1174		none		'INT'
[11]	1174		none		'REAL'
[12]	1174		none		'CHAR'
[13]	1174		none		'STRING'
[14]	1174		none		'ID'
[15]	1174		none		'SPECIFIER'
[16]	1174		none		'<'
[17]	1174		none		'>'
[18]	1175		right		'->'
[19]	1176		left		'.'
[20]	1177		right		'$'
[21]	1178		none		'['
[22]	1178		none		']'
[23]	1179		none		'('
[24]	1179		none		')'
[25]	1		none		'#'
[26]	1		none		'?'
[27]	1		none		';'
[28]	1		none		'define'
[29]	1		none		'signature'
[30]	1		none		'type'
[31]	1		none		'alias'
[32]	1		none		'='
[33]	1		none		'name'
[34]	1		none		'value'
[35]	1		none		'structure'
[36]	1		none		'{'
[37]	1		none		'}'
[38]	1		none		'class'
[39]	1		none		':'
[40]	1		none		'forall'
[41]	1		none		'string'
[42]	1		none		'void'
[43]	1		none		'int'
[44]	1		none		'boolean'
[45]	1		none		'char'
[46]	1		none		'real'
[47]	1		none		','
[48]	1		none		'set'
[49]	1		none		'bag'
[50]	1		none		'list'
[51]	1		none		'..'
[52]	1		none		'method'
[53]	1		none		'new'
[54]	1		none		'!'
[55]	1		none		'#['
[56]	1		none		']#'
[57]	1		none		'function'
[58]	1		none		'return'
[59]	1		none		'if'
[60]	1		none		'then'
[61]	1		none		'else'
[62]	1		none		'while'
[63]	1		none		'do'
[64]	1		none		'let'
[65]	1		none		'in'
[66]	1		none		'foreach'
[67]	1		none		'hom'
[68]	1		none		'true'
[69]	1		none		'false'
[70]	1		none		'null'
[71]	1		none		':='
[72]	1		none		'|'
[73]	1		none		'<-'
	----------------------------------------

DYNAMIC OPERATORS:

	----------	---------	--------	--------
	PRECEDENCE	SPECIFIER	OPERATOR	CATEGORY
	----------	---------	--------	--------
[0]	401		xfy		||		Operator
[1]	501		xfy		&&		Operator
[2]	601		xfy		==		Operator
[3]	601		xfy		!=		Operator
[4]	611		xfx		in		Operator
[5]	611		yfx		C=		Operator
[6]	621		xfy		U=		Operator
[7]	621		xfy		=U		Operator
[8]	621		xfy		-=		Operator
[9]	626		xfy		^=		Operator
[10]	626		xfy		=^		Operator
[11]	631		xfy		I=		Operator
[12]	631		xfy		=I		Operator
[13]	641		yfx		U		Operator
[14]	646		yfx		^		Operator
[15]	651		yfx		I		Operator
[16]	701		xfx		<		Operator
[17]	701		xfx		<=		Operator
[18]	701		xfx		>		Operator
[19]	701		xfx		>=		Operator
[20]	751		xfx		..		Operator
[21]	761		yfx		max		Operator
[22]	771		yfx		min		Operator
[23]	801		xfy		+		Operator
[24]	801		yfx		-		Operator
[25]	901		yfx		*		Operator
[26]	901		yfx		/		Operator
[27]	901		yfx		%		Operator
[28]	1001		yfx		**		Operator
[29]	1101		fy		!		Operator
[30]	1101		fy		-		Operator
[31]	1101		fy		+		Operator
[32]	1101		fx		set		Operator
[33]	1101		fx		bag		Operator
[34]	1101		fx		list		Operator
[35]	1151		fy		strip		Operator
	---------------------------------------------------------

NON TERMINALS:

  [0]	$START$	(nullable)
	FIRST:	 {'error', '$Statements_opt_switch$', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {$START$, $ROOTS$, Statements_opt}

  [1]	$ROOTS$	(nullable)
	FIRST:	 {'error', '$Statements_opt_switch$', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {$ROOTS$, Statements_opt}

  [2]	Statements_opt	(nullable)
	FIRST:	 {'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Statements_opt}

  [3]	Operator
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID'}
	LSet:	 {Operator}

  [4]	Typing_opt	(nullable)
	FIRST:	 {':'}
	LSet:	 {Typing_opt, Typing}

  [5]	Typing
	FIRST:	 {':'}
	LSet:	 {Typing}

  [6]	Type
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm}

  [7]	Type_opt	(nullable)
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, Type_opt, TypeConstant, PrimitiveType, FunctionType, TupleType, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm}

  [8]	TypeConstant
	FIRST:	 {'string', 'void', 'int', 'boolean', 'char', 'real'}
	LSet:	 {TypeConstant, PrimitiveType}

  [9]	PrimitiveType
	FIRST:	 {'void', 'int', 'boolean', 'char', 'real'}
	LSet:	 {PrimitiveType}

  [10]	FunctionType
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm}

  [11]	TupleType
	FIRST:	 {'<'}
	LSet:	 {TupleType}

  [12]	TupleTypeComponents	(nullable)
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, TupleTypeComponents, NamedTupleTypeComponents, Types, NamedTupleTypeComponent, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm, Types_opt}

  [13]	NamedTupleTypeComponents
	FIRST:	 {'ID'}
	LSet:	 {NamedTupleTypeComponents, NamedTupleTypeComponent}

  [14]	Types
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, Types, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm}

  [15]	NamedTupleTypeComponent
	FIRST:	 {'ID'}
	LSet:	 {NamedTupleTypeComponent}

  [16]	ArrayType
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm}

  [17]	IndexType	(nullable)
	FIRST:	 {'{', 'int', 'set'}
	LSet:	 {IndexType, MapIndexType, SetType, SetKind_opt, SetKind, IntRangeType, IntType_opt}

  [18]	MapIndexType
	FIRST:	 {'{', 'int', 'set'}
	LSet:	 {MapIndexType, SetType, SetKind_opt, SetKind, IntRangeType}

  [19]	CollectionType
	FIRST:	 {'{', 'set', 'bag', 'list'}
	LSet:	 {CollectionType, SetType, SetKind_opt, SetKind, NonSetKind}

  [20]	SetType
	FIRST:	 {'{', 'set'}
	LSet:	 {SetType, SetKind_opt, SetKind}

  [21]	SetKind_opt	(nullable)
	FIRST:	 {'set'}
	LSet:	 {SetKind_opt, SetKind}

  [22]	CollectionKind
	FIRST:	 {'set', 'bag', 'list'}
	LSet:	 {CollectionKind, SetKind, NonSetKind}

  [23]	SetKind
	FIRST:	 {'set'}
	LSet:	 {SetKind}

  [24]	NonSetKind
	FIRST:	 {'bag', 'list'}
	LSet:	 {NonSetKind}

  [25]	IntRangeType
	FIRST:	 {'int'}
	LSet:	 {IntRangeType}

  [26]	RealRangeType
	FIRST:	 {'real'}
	LSet:	 {RealRangeType}

  [27]	TypeTerm
	FIRST:	 {'ID'}
	LSet:	 {TypeTerm}

  [28]	Types_opt	(nullable)
	FIRST:	 {'ID', '<', '[', '(', '{', 'forall', 'string', 'void', 'int', 'boolean', 'char', 'real', 'set', 'bag', 'list'}
	LSet:	 {Type, TypeConstant, PrimitiveType, FunctionType, TupleType, Types, ArrayType, CollectionType, SetType, SetKind_opt, SetKind, NonSetKind, IntRangeType, RealRangeType, TypeTerm, Types_opt}

  [29]	Interface
	FIRST:	 {'{'}
	LSet:	 {Interface}

  [30]	MemberDeclarations_opt	(nullable)
	FIRST:	 {'ID', 'method'}
	LSet:	 {MemberDeclarations_opt}

  [31]	MemberDeclaration
	FIRST:	 {'ID', 'method'}
	LSet:	 {MemberDeclaration}

  [32]	Initialization_opt	(nullable)
	FIRST:	 {'='}
	LSet:	 {Initialization_opt}

  [33]	Expression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [34]	Implementation_opt	(nullable)
	FIRST:	 {'{'}
	LSet:	 {Implementation_opt}

  [35]	Definitions_opt	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID'}
	LSet:	 {Definitions_opt}

  [36]	Definition
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID'}
	LSet:	 {Operator, Definition}

  [37]	FunctionParameters_opt	(nullable)
	FIRST:	 {'('}
	LSet:	 {FunctionParameters_opt, FunctionParameters}

  [38]	FunctionParameters
	FIRST:	 {'('}
	LSet:	 {FunctionParameters}

  [39]	Parameters_opt	(nullable)
	FIRST:	 {'ID'}
	LSet:	 {Parameters_opt, Parameters, Parameter}

  [40]	Parameters
	FIRST:	 {'ID'}
	LSet:	 {Parameters, Parameter}

  [41]	Parameter
	FIRST:	 {'ID'}
	LSet:	 {Parameter}

  [42]	Expression_opt	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Expression_opt, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [43]	Allocation
	FIRST:	 {'new'}
	LSet:	 {Allocation}

  [44]	UntypedExpression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [45]	Literal
	FIRST:	 {'INT', 'REAL', 'CHAR', 'STRING', 'true', 'false', 'null'}
	LSet:	 {Literal}

  [46]	TupleExpression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [47]	TupleComponents	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleComponents, NamedTupleComponents, Expressions, NamedTupleComponent, TupleProjection, ArraySlotExpression, OperatorExpression, Expressions_opt, Location, Sequence, Comprehension, Monoid}

  [48]	NamedTupleComponents
	FIRST:	 {'ID'}
	LSet:	 {NamedTupleComponents, NamedTupleComponent}

  [49]	Expressions
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, Expressions, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [50]	NamedTupleComponent
	FIRST:	 {'ID'}
	LSet:	 {NamedTupleComponent}

  [51]	TupleProjection
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [52]	TupleSelector
	FIRST:	 {'INT', 'ID'}
	LSet:	 {TupleSelector}

  [53]	ArrayExtension
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, Expressions, TupleProjection, ArrayExtension, IndexedExpressions, IndexedExpression, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [54]	IndexedExpressions
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, IndexedExpressions, IndexedExpression, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [55]	IndexedExpression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, IndexedExpression, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [56]	ArraySlotExpression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [57]	OperatorExpression
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [58]	Arguments
	FIRST:	 {'('}
	LSet:	 {Arguments}

  [59]	Expressions_opt	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, Expressions, TupleProjection, ArraySlotExpression, OperatorExpression, Expressions_opt, Location, Sequence, Comprehension, Monoid}

  [60]	Dimensions
	FIRST:	 {'['}
	LSet:	 {Dimensions, Dimension}

  [61]	Dimensions_opt	(nullable)
	FIRST:	 {'['}
	LSet:	 {Dimensions, Dimensions_opt, Dimension}

  [62]	Dimension
	FIRST:	 {'['}
	LSet:	 {Dimension}

  [63]	Locals
	FIRST:	 {'ID'}
	LSet:	 {Parameter, Locals, Local}

  [64]	Local
	FIRST:	 {'ID'}
	LSet:	 {Parameter, Local}

  [65]	Location
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid}

  [66]	Member
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID'}
	LSet:	 {Operator, Member}

  [67]	Sequence
	FIRST:	 {'{'}
	LSet:	 {Sequence}

  [68]	ExpressionSequence_opt	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, ExpressionSequence_opt, Comprehension, Monoid}

  [69]	Comprehension
	FIRST:	 {'['}
	LSet:	 {Comprehension, Monoid}

  [70]	Monoid
	FIRST:	 {'['}
	LSet:	 {Monoid}

  [71]	Qualifiers_opt	(nullable)
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid, Qualifiers_opt, Qualifiers, Qualifier}

  [72]	Qualifiers
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid, Qualifiers, Qualifier}

  [73]	Qualifier
	FIRST:	 {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid, Qualifier}

  [74]	Statement
	FIRST:	 {'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
	LSet:	 {Operator, CollectionKind, SetKind, NonSetKind, Expression, Allocation, UntypedExpression, Literal, TupleExpression, TupleProjection, ArraySlotExpression, OperatorExpression, Location, Sequence, Comprehension, Monoid, Statement, DefinitionStatement, StructureOrClassDeclaration}

  [75]	Pragma
	FIRST:	 {'ID'}
	LSet:	 {Pragma}

  [76]	PragmaArgument_opt	(nullable)
	FIRST:	 {'STRING'}
	LSet:	 {PragmaArgument_opt}

  [77]	EOS
	FIRST:	 {';'}
	LSet:	 {EOS, $ACTION11$}

  [78]	$ACTION0$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION0$}

  [79]	DefinitionStatement
	FIRST:	 {'define', 'structure', 'class'}
	LSet:	 {DefinitionStatement, StructureOrClassDeclaration}

  [80]	$ACTION1$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION1$}

  [81]	$ACTION2$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION2$}

  [82]	$ACTION3$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION3$}

  [83]	DefinitionKind
	FIRST:	 {'operator', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID', 'signature', 'type', 'value'}
	LSet:	 {Operator, Definition, DefinitionKind}

  [84]	StructureOrClassDeclaration
	FIRST:	 {'structure', 'class'}
	LSet:	 {StructureOrClassDeclaration}

  [85]	$ACTION4$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION4$}

  [86]	TypeParameters_opt	(nullable)
	FIRST:	 {'('}
	LSet:	 {TypeParameters_opt}

  [87]	$ACTION5$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION5$}

  [88]	$ACTION6$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION6$}

  [89]	$ACTION7$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION7$}

  [90]	$ACTION8$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION8$}

  [91]	$ACTION9$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION9$}

  [92]	$ACTION10$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION10$}

  [93]	$ACTION11$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION11$}

  [94]	TypeParameters
	FIRST:	 {'ID'}
	LSet:	 {TypeParameters}

  [95]	$ACTION12$	(nullable)
	FIRST:	 {}
	LSet:	 {$ACTION12$}

  [96]	IntType_opt	(nullable)
	FIRST:	 {'int'}
	LSet:	 {IntType_opt}

  [97]	InPlace_opt	(nullable)
	FIRST:	 {'<', '>'}
	LSet:	 {InPlace_opt}


***	Building canonical LR states ... 
***	 ... in 71 ms
***	Propagating lookahead symbols ... 
***	 ... in 10 ms
*** Grammar analysis completed in 117 ms.
*** Building parsing tables ... 
*** Unresolved S/R conflict: choosing S79	over R41,	in state 15, 	on input ':'
*** Unresolved S/R conflict: choosing S47	over R198,	in state 47, 	on input '{'
*** Unresolved S/R conflict: choosing S12	over R198,	in state 47, 	on input 'set'
*** Unresolved S/R conflict: choosing S13	over R198,	in state 47, 	on input 'bag'
*** Unresolved S/R conflict: choosing S14	over R198,	in state 47, 	on input 'list'
*** Unresolved S/R conflict: choosing S20	over R198,	in state 47, 	on input 'new'
*** Unresolved S/R conflict: choosing S24	over R198,	in state 47, 	on input '#['
*** Unresolved S/R conflict: choosing S27	over R198,	in state 47, 	on input 'function'
*** Unresolved S/R conflict: choosing S28	over R198,	in state 47, 	on input 'return'
*** Unresolved S/R conflict: choosing S29	over R198,	in state 47, 	on input 'if'
*** Unresolved S/R conflict: choosing S30	over R198,	in state 47, 	on input 'while'
*** Unresolved S/R conflict: choosing S31	over R198,	in state 47, 	on input 'let'
*** Unresolved S/R conflict: choosing S35	over R198,	in state 47, 	on input 'foreach'
*** Unresolved S/R conflict: choosing S36	over R198,	in state 47, 	on input 'hom'
*** Unresolved S/R conflict: choosing S41	over R198,	in state 47, 	on input 'true'
*** Unresolved S/R conflict: choosing S42	over R198,	in state 47, 	on input 'false'
*** Unresolved S/R conflict: choosing S43	over R198,	in state 47, 	on input 'null'
*** Unresolved S/R conflict: choosing S188	over R109,	in state 68, 	on input '{'
*** Unresolved R/R conflict: choosing R44	over R94,	in state 89, 	on input ')'
*** Unresolved R/R conflict: choosing R45	over R96,	in state 153, 	on input ')'
*** Unresolved R/R conflict: choosing R40	over R195,	in state 181, 	on input '('
!!! WARNING: Rule 139 may compose the non-associative symbol: '!'
*** Unresolved S/R conflict: choosing S164	over R123,	in state 305, 	on input '!'
*** Unresolved S/R conflict: choosing S164	over R149,	in state 307, 	on input '!'
*** Unresolved S/R conflict: choosing S164	over R148,	in state 316, 	on input '!'
*** Unresolved S/R conflict: choosing S164	over R147,	in state 325, 	on input '!'
*** Unresolved S/R conflict: choosing S164	over R146,	in state 330, 	on input '!'
*** Unresolved S/R conflict: choosing S164	over R143,	in state 333, 	on input '!'
*** Unresolved S/R conflict: choosing S47	over R87,	in state 341, 	on input '{'
*** Unresolved R/R conflict: choosing R44	over R94,	in state 343, 	on input ')'
*** Unresolved R/R conflict: choosing R44	over R122,	in state 343, 	on input ')'
*** Unresolved S/R conflict: choosing S47	over R87,	in state 343, 	on input '{'
*** Unresolved R/R conflict: choosing R94	over R184,	in state 345, 	on input '>'
*** Unresolved S/R conflict: choosing S47	over R87,	in state 345, 	on input '{'
*** Unresolved S/R conflict: choosing S127	over R83,	in state 346, 	on input '{'
*** Unresolved R/R conflict: choosing R82	over R88,	in state 347, 	on input '{'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input 'as'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input '.'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input '['
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input '('
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input ')'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input ','
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input '!'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 348, 	on input ']#'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 349, 	on input '>'
*** Unresolved R/R conflict: choosing R40	over R92,	in state 349, 	on input '['
*** Unresolved R/R conflict: choosing R40	over R92,	in state 349, 	on input ','
*** Unresolved S/R conflict: choosing S47	over R87,	in state 359, 	on input '{'
*** Unresolved S/R conflict: choosing S164	over R130,	in state 368, 	on input '!'
***	... in 9 ms



=============================
STATE NUMBER: 0
=============================
[0] $START$ --> . $ROOTS$
	Preceding states: {0}
	Follow set: {'$E_O_I$'}
	Preceding states: {0}
[1] $ROOTS$ --> . Statements_opt
	Preceding states: {0}
[2] $ROOTS$ --> . '$Statements_opt_switch$' Statements_opt
	Preceding states: {0}
[6] Statements_opt --> .
	Preceding states: {0}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[7] Statements_opt --> . Statements_opt Statement
	Preceding states: {0}
-----------------------------
With $ROOTS$, go to state 1
With Statements_opt, go to state 2
With '$Statements_opt_switch$', go to state 3

=============================
STATE NUMBER: 1
=============================
[0] $START$ --> $ROOTS$ .
	Preceding states: {0}
	Lookahead set: {}
-----------------------------

=============================
STATE NUMBER: 2
=============================
[1] $ROOTS$ --> Statements_opt .
	Preceding states: {0}
	Lookahead set: {'$E_O_I$'}
[3] Operator --> . 'OPERATOR_'
	Preceding states: {2}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {2}
[5] Operator --> . '_OPERATOR'
	Preceding states: {2}
[7] Statements_opt --> Statements_opt . Statement
	Preceding states: {0}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[9] Statement --> . '#' Pragma PragmaArgument_opt $ACTION0$ EOS
	Preceding states: {2}
[10] Statement --> . DefinitionStatement
	Preceding states: {2}
[12] Statement --> . '?' Expression $ACTION1$ EOS
	Preceding states: {2}
[14] Statement --> . Expression $ACTION2$ EOS
	Preceding states: {2}
[16] Statement --> . 'error' $ACTION3$ EOS
	Preceding states: {2}
[17] Statement --> . ';'
	Preceding states: {2}
[18] DefinitionStatement --> . 'define' DefinitionKind EOS
	Preceding states: {2}
[19] DefinitionStatement --> . StructureOrClassDeclaration
	Preceding states: {2}
[32] StructureOrClassDeclaration --> . 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {2}
[34] StructureOrClassDeclaration --> . 'class' 'ID' $ACTION10$ TypeParameters_opt Interface Implementation_opt
	Preceding states: {2}
[40] Operator --> . 'ID'
	Preceding states: {2}
[82] CollectionKind --> . SetKind
	Preceding states: {2}
[83] CollectionKind --> . NonSetKind
	Preceding states: {2}
[84] SetKind --> . 'set'
	Preceding states: {2}
[85] NonSetKind --> . 'bag'
	Preceding states: {2}
[86] NonSetKind --> . 'list'
	Preceding states: {2}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {2}
[125] Expression --> . Allocation
	Preceding states: {2}
[126] Expression --> . Expression 'as' Type
	Preceding states: {2}
[127] Expression --> . '$' Expression
	Preceding states: {2}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {2}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {2}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {2}
[136] UntypedExpression --> . Literal
	Preceding states: {2}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {2}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {2}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {2}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {2}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {2}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {2}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {2}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {2}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {2}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {2}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {2}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {2}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {2}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {2}
[151] UntypedExpression --> . Sequence
	Preceding states: {2}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {2}
[153] UntypedExpression --> . Comprehension
	Preceding states: {2}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {2}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {2}
[156] Literal --> . 'INT'
	Preceding states: {2}
[157] Literal --> . 'CHAR'
	Preceding states: {2}
[158] Literal --> . 'REAL'
	Preceding states: {2}
[159] Literal --> . 'STRING'
	Preceding states: {2}
[160] Literal --> . 'true'
	Preceding states: {2}
[161] Literal --> . 'false'
	Preceding states: {2}
[162] Literal --> . 'null'
	Preceding states: {2}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {2}
[164] TupleExpression --> . TupleProjection
	Preceding states: {2}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {2}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {2}
[179] OperatorExpression --> . Operator
	Preceding states: {2}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {2}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {2}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {2}
[191] Location --> . 'ID'
	Preceding states: {2}
[192] Location --> . TupleProjection
	Preceding states: {2}
[193] Location --> . ArraySlotExpression
	Preceding states: {2}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {2}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {2}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {2}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {2}
-----------------------------
With Statement, go to state 5
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 17
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49
With '#', go to state 50
With DefinitionStatement, go to state 51
With '?', go to state 52
With 'error', go to state 53
With ';', go to state 54
With 'define', go to state 55
With StructureOrClassDeclaration, go to state 56
With 'structure', go to state 57
With 'class', go to state 58

=============================
STATE NUMBER: 3
=============================
[2] $ROOTS$ --> '$Statements_opt_switch$' . Statements_opt
	Preceding states: {0}
	Follow set: {'$E_O_I$'}
[6] Statements_opt --> .
	Preceding states: {3}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[7] Statements_opt --> . Statements_opt Statement
	Preceding states: {3}
-----------------------------
With Statements_opt, go to state 4

=============================
STATE NUMBER: 4
=============================
[2] $ROOTS$ --> '$Statements_opt_switch$' Statements_opt .
	Preceding states: {0}
	Lookahead set: {'$E_O_I$'}
[3] Operator --> . 'OPERATOR_'
	Preceding states: {4}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {4}
[5] Operator --> . '_OPERATOR'
	Preceding states: {4}
[7] Statements_opt --> Statements_opt . Statement
	Preceding states: {3}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[9] Statement --> . '#' Pragma PragmaArgument_opt $ACTION0$ EOS
	Preceding states: {4}
[10] Statement --> . DefinitionStatement
	Preceding states: {4}
[12] Statement --> . '?' Expression $ACTION1$ EOS
	Preceding states: {4}
[14] Statement --> . Expression $ACTION2$ EOS
	Preceding states: {4}
[16] Statement --> . 'error' $ACTION3$ EOS
	Preceding states: {4}
[17] Statement --> . ';'
	Preceding states: {4}
[18] DefinitionStatement --> . 'define' DefinitionKind EOS
	Preceding states: {4}
[19] DefinitionStatement --> . StructureOrClassDeclaration
	Preceding states: {4}
[32] StructureOrClassDeclaration --> . 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {4}
[34] StructureOrClassDeclaration --> . 'class' 'ID' $ACTION10$ TypeParameters_opt Interface Implementation_opt
	Preceding states: {4}
[40] Operator --> . 'ID'
	Preceding states: {4}
[82] CollectionKind --> . SetKind
	Preceding states: {4}
[83] CollectionKind --> . NonSetKind
	Preceding states: {4}
[84] SetKind --> . 'set'
	Preceding states: {4}
[85] NonSetKind --> . 'bag'
	Preceding states: {4}
[86] NonSetKind --> . 'list'
	Preceding states: {4}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {4}
[125] Expression --> . Allocation
	Preceding states: {4}
[126] Expression --> . Expression 'as' Type
	Preceding states: {4}
[127] Expression --> . '$' Expression
	Preceding states: {4}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {4}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {4}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {4}
[136] UntypedExpression --> . Literal
	Preceding states: {4}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {4}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {4}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {4}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {4}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {4}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {4}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {4}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {4}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {4}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {4}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {4}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {4}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {4}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {4}
[151] UntypedExpression --> . Sequence
	Preceding states: {4}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {4}
[153] UntypedExpression --> . Comprehension
	Preceding states: {4}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {4}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {4}
[156] Literal --> . 'INT'
	Preceding states: {4}
[157] Literal --> . 'CHAR'
	Preceding states: {4}
[158] Literal --> . 'REAL'
	Preceding states: {4}
[159] Literal --> . 'STRING'
	Preceding states: {4}
[160] Literal --> . 'true'
	Preceding states: {4}
[161] Literal --> . 'false'
	Preceding states: {4}
[162] Literal --> . 'null'
	Preceding states: {4}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {4}
[164] TupleExpression --> . TupleProjection
	Preceding states: {4}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {4}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {4}
[179] OperatorExpression --> . Operator
	Preceding states: {4}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {4}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {4}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {4}
[191] Location --> . 'ID'
	Preceding states: {4}
[192] Location --> . TupleProjection
	Preceding states: {4}
[193] Location --> . ArraySlotExpression
	Preceding states: {4}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {4}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {4}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {4}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {4}
-----------------------------
With Statement, go to state 5
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 17
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49
With '#', go to state 50
With DefinitionStatement, go to state 51
With '?', go to state 52
With 'error', go to state 53
With ';', go to state 54
With 'define', go to state 55
With StructureOrClassDeclaration, go to state 56
With 'structure', go to state 57
With 'class', go to state 58

=============================
STATE NUMBER: 5
=============================
[7] Statements_opt --> Statements_opt Statement .
	Preceding states: {0, 3}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 6
=============================
This state has dynamic actions:
	
{0:[R3, S7],1:[R3, S8],2:[R3, S19],3:[R3, S49]}
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {6}
[3] Operator --> 'OPERATOR_' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {6}
[5] Operator --> . '_OPERATOR'
	Preceding states: {6}
[40] Operator --> . 'ID'
	Preceding states: {6}
[82] CollectionKind --> . SetKind
	Preceding states: {6}
[83] CollectionKind --> . NonSetKind
	Preceding states: {6}
[84] SetKind --> . 'set'
	Preceding states: {6}
[85] NonSetKind --> . 'bag'
	Preceding states: {6}
[86] NonSetKind --> . 'list'
	Preceding states: {6}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {6}
[125] Expression --> . Allocation
	Preceding states: {6}
[126] Expression --> . Expression 'as' Type
	Preceding states: {6}
[127] Expression --> . '$' Expression
	Preceding states: {6}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {6}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {6}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {6}
[136] UntypedExpression --> . Literal
	Preceding states: {6}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {6}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {6}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {6}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {6}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {6}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {6}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {6}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {6}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {6}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {6}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {6}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {6}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {6}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {6}
[151] UntypedExpression --> . Sequence
	Preceding states: {6}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {6}
[153] UntypedExpression --> . Comprehension
	Preceding states: {6}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {6}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {6}
[156] Literal --> . 'INT'
	Preceding states: {6}
[157] Literal --> . 'CHAR'
	Preceding states: {6}
[158] Literal --> . 'REAL'
	Preceding states: {6}
[159] Literal --> . 'STRING'
	Preceding states: {6}
[160] Literal --> . 'true'
	Preceding states: {6}
[161] Literal --> . 'false'
	Preceding states: {6}
[162] Literal --> . 'null'
	Preceding states: {6}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {6}
[164] TupleExpression --> . TupleProjection
	Preceding states: {6}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {6}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {6}
[179] OperatorExpression --> . Operator
	Preceding states: {6}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {6}
[180] OperatorExpression --> 'OPERATOR_' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {6}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {6}
[191] Location --> . 'ID'
	Preceding states: {6}
[192] Location --> . TupleProjection
	Preceding states: {6}
[193] Location --> . ArraySlotExpression
	Preceding states: {6}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {6}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {6}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {6}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {6}
-----------------------------
With Expression, go to state 372
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 7
=============================
[4] Operator --> '_OPERATOR_' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 55, 74, 161, 164, 166, 167, 169, 170, 174, 189, 206, 217, 218, 220, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', 'SPECIFIER', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 8
=============================
[5] Operator --> '_OPERATOR' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 55, 74, 161, 164, 166, 167, 169, 170, 174, 189, 206, 217, 218, 220, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', 'SPECIFIER', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 9
=============================
[40] Operator --> 'ID' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[191] Location --> 'ID' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Lookahead set: {'='}
-----------------------------

=============================
STATE NUMBER: 10
=============================
[82] CollectionKind --> SetKind .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 11
=============================
[83] CollectionKind --> NonSetKind .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 12
=============================
[84] SetKind --> 'set' .
	Preceding states: {2, 4, 6, 18, 19, 20, 24, 28, 29, 30, 44, 47, 49, 52, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 161, 163, 164, 167, 169, 170, 174, 206, 229, 235, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 13
=============================
[85] NonSetKind --> 'bag' .
	Preceding states: {2, 4, 6, 18, 19, 20, 24, 28, 29, 30, 44, 47, 49, 52, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 161, 163, 164, 167, 169, 170, 174, 206, 229, 235, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 14
=============================
[86] NonSetKind --> 'list' .
	Preceding states: {2, 4, 6, 18, 19, 20, 24, 28, 29, 30, 44, 47, 49, 52, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 161, 163, 164, 167, 169, 170, 174, 206, 229, 235, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 15
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S321	over R41, 	on input '@'
Unresolved S/R conflict: choosing S79	over R41, 	on input ':'
-----------------------------
[41] Typing_opt --> .
	Preceding states: {15}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[42] Typing_opt --> . Typing
	Preceding states: {15}
[43] Typing --> . ':' Type
	Preceding states: {15}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {2, 4, 6, 18, 28, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 341, 344, 345, 355, 363}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {2, 4, 6, 18, 28, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 341, 344, 345, 355, 363}
-----------------------------
With Typing_opt, go to state 319
With '@', go to state 321
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 16
=============================
[125] Expression --> Allocation .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 17
=============================
[13] $ACTION2$ --> .
	Preceding states: {17}
	Lookahead set: {';'}
[14] Statement --> Expression . $ACTION2$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
[126] Expression --> Expression . 'as' Type
	Preceding states: {2, 4}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {2, 4}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {2, 4}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {2, 4}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {2, 4}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {2, 4}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {2, 4}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {17}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {2, 4}
-----------------------------
With $ACTION2$, go to state 370
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 18
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {18}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {18}
[5] Operator --> . '_OPERATOR'
	Preceding states: {18}
[40] Operator --> . 'ID'
	Preceding states: {18}
[82] CollectionKind --> . SetKind
	Preceding states: {18}
[83] CollectionKind --> . NonSetKind
	Preceding states: {18}
[84] SetKind --> . 'set'
	Preceding states: {18}
[85] NonSetKind --> . 'bag'
	Preceding states: {18}
[86] NonSetKind --> . 'list'
	Preceding states: {18}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {18}
[125] Expression --> . Allocation
	Preceding states: {18}
[126] Expression --> . Expression 'as' Type
	Preceding states: {18}
[127] Expression --> . '$' Expression
	Preceding states: {18}
[127] Expression --> '$' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {18}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {18}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {18}
[136] UntypedExpression --> . Literal
	Preceding states: {18}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {18}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {18}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {18}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {18}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {18}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {18}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {18}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {18}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {18}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {18}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {18}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {18}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {18}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {18}
[151] UntypedExpression --> . Sequence
	Preceding states: {18}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {18}
[153] UntypedExpression --> . Comprehension
	Preceding states: {18}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {18}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {18}
[156] Literal --> . 'INT'
	Preceding states: {18}
[157] Literal --> . 'CHAR'
	Preceding states: {18}
[158] Literal --> . 'REAL'
	Preceding states: {18}
[159] Literal --> . 'STRING'
	Preceding states: {18}
[160] Literal --> . 'true'
	Preceding states: {18}
[161] Literal --> . 'false'
	Preceding states: {18}
[162] Literal --> . 'null'
	Preceding states: {18}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {18}
[164] TupleExpression --> . TupleProjection
	Preceding states: {18}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {18}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {18}
[179] OperatorExpression --> . Operator
	Preceding states: {18}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {18}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {18}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {18}
[191] Location --> . 'ID'
	Preceding states: {18}
[192] Location --> . TupleProjection
	Preceding states: {18}
[193] Location --> . ArraySlotExpression
	Preceding states: {18}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {18}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {18}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {18}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {18}
-----------------------------
With Expression, go to state 369
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 19
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {19}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {19}
[5] Operator --> . '_OPERATOR'
	Preceding states: {19}
[40] Operator --> . 'ID'
	Preceding states: {19}
[82] CollectionKind --> . SetKind
	Preceding states: {19}
[83] CollectionKind --> . NonSetKind
	Preceding states: {19}
[84] SetKind --> . 'set'
	Preceding states: {19}
[85] NonSetKind --> . 'bag'
	Preceding states: {19}
[86] NonSetKind --> . 'list'
	Preceding states: {19}
[122] Expression_opt --> .
	Preceding states: {19}
	Lookahead set: {')'}
[123] Expression_opt --> . Expression
	Preceding states: {19}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {19}
[125] Expression --> . Allocation
	Preceding states: {19}
[126] Expression --> . Expression 'as' Type
	Preceding states: {19}
[127] Expression --> . '$' Expression
	Preceding states: {19}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {19}
[128] Expression --> '(' . Expression_opt ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Follow set: {')'}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {19}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {19}
[136] UntypedExpression --> . Literal
	Preceding states: {19}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {19}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {19}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {19}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {19}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {19}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {19}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {19}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {19}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {19}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {19}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {19}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {19}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {19}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {19}
[151] UntypedExpression --> . Sequence
	Preceding states: {19}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {19}
[152] UntypedExpression --> '(' . UntypedExpression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Follow set: {')'}
[153] UntypedExpression --> . Comprehension
	Preceding states: {19}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {19}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {19}
[156] Literal --> . 'INT'
	Preceding states: {19}
[157] Literal --> . 'CHAR'
	Preceding states: {19}
[158] Literal --> . 'REAL'
	Preceding states: {19}
[159] Literal --> . 'STRING'
	Preceding states: {19}
[160] Literal --> . 'true'
	Preceding states: {19}
[161] Literal --> . 'false'
	Preceding states: {19}
[162] Literal --> . 'null'
	Preceding states: {19}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {19}
[164] TupleExpression --> . TupleProjection
	Preceding states: {19}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {19}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {19}
[179] OperatorExpression --> . Operator
	Preceding states: {19}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {19}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {19}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {19}
[191] Location --> . 'ID'
	Preceding states: {19}
[192] Location --> . TupleProjection
	Preceding states: {19}
[193] Location --> . ArraySlotExpression
	Preceding states: {19}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {19}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {19}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {19}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {19}
-----------------------------
With Expression_opt, go to state 350
With UntypedExpression, go to state 351
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With Allocation, go to state 16
With Expression, go to state 305
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 20
=============================
[46] Type --> . TypeConstant
	Preceding states: {20}
[47] Type --> . FunctionType
	Preceding states: {20}
[48] Type --> . TupleType
	Preceding states: {20}
[49] Type --> . ArrayType
	Preceding states: {20}
[50] Type --> . CollectionType
	Preceding states: {20}
[51] Type --> . IntRangeType
	Preceding states: {20}
[52] Type --> . RealRangeType
	Preceding states: {20}
[53] Type --> . TypeTerm
	Preceding states: {20}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {20}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {20}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {20}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {20}
[59] TypeConstant --> . 'string'
	Preceding states: {20}
[60] PrimitiveType --> . 'void'
	Preceding states: {20}
[61] PrimitiveType --> . 'int'
	Preceding states: {20}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {20}
[63] PrimitiveType --> . 'char'
	Preceding states: {20}
[64] PrimitiveType --> . 'real'
	Preceding states: {20}
[65] FunctionType --> . Type '->' Type
	Preceding states: {20}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {20}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {20}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {20}
[80] CollectionType --> . SetType
	Preceding states: {20}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {20}
[84] SetKind --> . 'set'
	Preceding states: {20}
[85] NonSetKind --> . 'bag'
	Preceding states: {20}
[86] NonSetKind --> . 'list'
	Preceding states: {20}
[87] SetKind_opt --> .
	Preceding states: {20}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {20}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {20}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {20}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {20}
[92] TypeTerm --> . 'ID'
	Preceding states: {20}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {20}
[129] Allocation --> 'new' . Type Dimensions_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[130] Allocation --> 'new' . Type Dimensions '=' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------
With Type, go to state 358
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 21
=============================
[136] UntypedExpression --> Literal .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 22
=============================
[137] UntypedExpression --> CollectionKind . '{' Expressions_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '{', go to state 355

=============================
STATE NUMBER: 23
=============================
[138] UntypedExpression --> TupleExpression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 24
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {24}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {24}
[5] Operator --> . '_OPERATOR'
	Preceding states: {24}
[40] Operator --> . 'ID'
	Preceding states: {24}
[82] CollectionKind --> . SetKind
	Preceding states: {24}
[83] CollectionKind --> . NonSetKind
	Preceding states: {24}
[84] SetKind --> . 'set'
	Preceding states: {24}
[85] NonSetKind --> . 'bag'
	Preceding states: {24}
[86] NonSetKind --> . 'list'
	Preceding states: {24}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {24}
[125] Expression --> . Allocation
	Preceding states: {24}
[126] Expression --> . Expression 'as' Type
	Preceding states: {24}
[127] Expression --> . '$' Expression
	Preceding states: {24}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {24}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {24}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {24}
[136] UntypedExpression --> . Literal
	Preceding states: {24}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {24}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {24}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {24}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {24}
[140] UntypedExpression --> '#[' . ArrayExtension ']#'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {']#'}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {24}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {24}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {24}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {24}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {24}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {24}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {24}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {24}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {24}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {24}
[151] UntypedExpression --> . Sequence
	Preceding states: {24}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {24}
[153] UntypedExpression --> . Comprehension
	Preceding states: {24}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {24}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {24}
[156] Literal --> . 'INT'
	Preceding states: {24}
[157] Literal --> . 'CHAR'
	Preceding states: {24}
[158] Literal --> . 'REAL'
	Preceding states: {24}
[159] Literal --> . 'STRING'
	Preceding states: {24}
[160] Literal --> . 'true'
	Preceding states: {24}
[161] Literal --> . 'false'
	Preceding states: {24}
[162] Literal --> . 'null'
	Preceding states: {24}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {24}
[164] TupleExpression --> . TupleProjection
	Preceding states: {24}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {24}
[173] ArrayExtension --> . Expressions
	Preceding states: {24}
[174] ArrayExtension --> . IndexedExpressions
	Preceding states: {24}
[175] IndexedExpressions --> . IndexedExpression
	Preceding states: {24}
[176] IndexedExpressions --> . IndexedExpressions ',' IndexedExpression
	Preceding states: {24}
[177] IndexedExpression --> . UntypedExpression ':' Expression
	Preceding states: {24}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {24}
[179] OperatorExpression --> . Operator
	Preceding states: {24}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {24}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {24}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {24}
[186] Expressions --> . Expression
	Preceding states: {24}
[187] Expressions --> . Expressions ',' Expression
	Preceding states: {24}
[191] Location --> . 'ID'
	Preceding states: {24}
[192] Location --> . TupleProjection
	Preceding states: {24}
[193] Location --> . ArraySlotExpression
	Preceding states: {24}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {24}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {24}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {24}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {24}
-----------------------------
With ArrayExtension, go to state 334
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 335
With Allocation, go to state 16
With Expression, go to state 172
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Expressions, go to state 336
With IndexedExpressions, go to state 337
With IndexedExpression, go to state 338
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 25
=============================
[141] UntypedExpression --> ArraySlotExpression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[193] Location --> ArraySlotExpression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'='}
-----------------------------

=============================
STATE NUMBER: 26
=============================
[142] UntypedExpression --> OperatorExpression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 27
=============================
[116] FunctionParameters --> . '(' Parameters_opt ')'
	Preceding states: {27}
[143] UntypedExpression --> 'function' . FunctionParameters Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------
With FunctionParameters, go to state 332
With '(', go to state 195

=============================
STATE NUMBER: 28
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S19	over R122, 	on input '('
Resolved   S/R conflict: choosing S49	over R122, 	on input '['
-----------------------------
This state has dynamic actions:
	
{0:[S7, R122],1:[S8, R122]}
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {28}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {28}
[5] Operator --> . '_OPERATOR'
	Preceding states: {28}
[40] Operator --> . 'ID'
	Preceding states: {28}
[82] CollectionKind --> . SetKind
	Preceding states: {28}
[83] CollectionKind --> . NonSetKind
	Preceding states: {28}
[84] SetKind --> . 'set'
	Preceding states: {28}
[85] NonSetKind --> . 'bag'
	Preceding states: {28}
[86] NonSetKind --> . 'list'
	Preceding states: {28}
[122] Expression_opt --> .
	Preceding states: {28}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[123] Expression_opt --> . Expression
	Preceding states: {28}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {28}
[125] Expression --> . Allocation
	Preceding states: {28}
[126] Expression --> . Expression 'as' Type
	Preceding states: {28}
[127] Expression --> . '$' Expression
	Preceding states: {28}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {28}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {28}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {28}
[136] UntypedExpression --> . Literal
	Preceding states: {28}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {28}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {28}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {28}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {28}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {28}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {28}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {28}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {28}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {28}
[145] UntypedExpression --> 'return' . Expression_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {28}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {28}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {28}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {28}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {28}
[151] UntypedExpression --> . Sequence
	Preceding states: {28}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {28}
[153] UntypedExpression --> . Comprehension
	Preceding states: {28}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {28}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {28}
[156] Literal --> . 'INT'
	Preceding states: {28}
[157] Literal --> . 'CHAR'
	Preceding states: {28}
[158] Literal --> . 'REAL'
	Preceding states: {28}
[159] Literal --> . 'STRING'
	Preceding states: {28}
[160] Literal --> . 'true'
	Preceding states: {28}
[161] Literal --> . 'false'
	Preceding states: {28}
[162] Literal --> . 'null'
	Preceding states: {28}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {28}
[164] TupleExpression --> . TupleProjection
	Preceding states: {28}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {28}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {28}
[179] OperatorExpression --> . Operator
	Preceding states: {28}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {28}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {28}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {28}
[191] Location --> . 'ID'
	Preceding states: {28}
[192] Location --> . TupleProjection
	Preceding states: {28}
[193] Location --> . ArraySlotExpression
	Preceding states: {28}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {28}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {28}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {28}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {28}
-----------------------------
With Expression_opt, go to state 331
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 305
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 29
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {29}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {29}
[5] Operator --> . '_OPERATOR'
	Preceding states: {29}
[40] Operator --> . 'ID'
	Preceding states: {29}
[82] CollectionKind --> . SetKind
	Preceding states: {29}
[83] CollectionKind --> . NonSetKind
	Preceding states: {29}
[84] SetKind --> . 'set'
	Preceding states: {29}
[85] NonSetKind --> . 'bag'
	Preceding states: {29}
[86] NonSetKind --> . 'list'
	Preceding states: {29}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {29}
[125] Expression --> . Allocation
	Preceding states: {29}
[126] Expression --> . Expression 'as' Type
	Preceding states: {29}
[127] Expression --> . '$' Expression
	Preceding states: {29}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {29}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {29}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {29}
[136] UntypedExpression --> . Literal
	Preceding states: {29}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {29}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {29}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {29}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {29}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {29}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {29}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {29}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {29}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {29}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {29}
[146] UntypedExpression --> 'if' . UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'then'}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {29}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {29}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {29}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {29}
[151] UntypedExpression --> . Sequence
	Preceding states: {29}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {29}
[153] UntypedExpression --> . Comprehension
	Preceding states: {29}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {29}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {29}
[156] Literal --> . 'INT'
	Preceding states: {29}
[157] Literal --> . 'CHAR'
	Preceding states: {29}
[158] Literal --> . 'REAL'
	Preceding states: {29}
[159] Literal --> . 'STRING'
	Preceding states: {29}
[160] Literal --> . 'true'
	Preceding states: {29}
[161] Literal --> . 'false'
	Preceding states: {29}
[162] Literal --> . 'null'
	Preceding states: {29}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {29}
[164] TupleExpression --> . TupleProjection
	Preceding states: {29}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {29}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {29}
[179] OperatorExpression --> . Operator
	Preceding states: {29}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {29}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {29}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {29}
[191] Location --> . 'ID'
	Preceding states: {29}
[192] Location --> . TupleProjection
	Preceding states: {29}
[193] Location --> . ArraySlotExpression
	Preceding states: {29}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {29}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {29}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {29}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {29}
-----------------------------
With UntypedExpression, go to state 326
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With Allocation, go to state 16
With Expression, go to state 318
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 30
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {30}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {30}
[5] Operator --> . '_OPERATOR'
	Preceding states: {30}
[40] Operator --> . 'ID'
	Preceding states: {30}
[82] CollectionKind --> . SetKind
	Preceding states: {30}
[83] CollectionKind --> . NonSetKind
	Preceding states: {30}
[84] SetKind --> . 'set'
	Preceding states: {30}
[85] NonSetKind --> . 'bag'
	Preceding states: {30}
[86] NonSetKind --> . 'list'
	Preceding states: {30}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {30}
[125] Expression --> . Allocation
	Preceding states: {30}
[126] Expression --> . Expression 'as' Type
	Preceding states: {30}
[127] Expression --> . '$' Expression
	Preceding states: {30}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {30}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {30}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {30}
[136] UntypedExpression --> . Literal
	Preceding states: {30}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {30}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {30}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {30}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {30}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {30}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {30}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {30}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {30}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {30}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {30}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {30}
[147] UntypedExpression --> 'while' . UntypedExpression 'do' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'do'}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {30}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {30}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {30}
[151] UntypedExpression --> . Sequence
	Preceding states: {30}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {30}
[153] UntypedExpression --> . Comprehension
	Preceding states: {30}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {30}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {30}
[156] Literal --> . 'INT'
	Preceding states: {30}
[157] Literal --> . 'CHAR'
	Preceding states: {30}
[158] Literal --> . 'REAL'
	Preceding states: {30}
[159] Literal --> . 'STRING'
	Preceding states: {30}
[160] Literal --> . 'true'
	Preceding states: {30}
[161] Literal --> . 'false'
	Preceding states: {30}
[162] Literal --> . 'null'
	Preceding states: {30}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {30}
[164] TupleExpression --> . TupleProjection
	Preceding states: {30}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {30}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {30}
[179] OperatorExpression --> . Operator
	Preceding states: {30}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {30}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {30}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {30}
[191] Location --> . 'ID'
	Preceding states: {30}
[192] Location --> . TupleProjection
	Preceding states: {30}
[193] Location --> . ArraySlotExpression
	Preceding states: {30}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {30}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {30}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {30}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {30}
-----------------------------
With UntypedExpression, go to state 317
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With Allocation, go to state 16
With Expression, go to state 318
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 31
=============================
[121] Parameter --> . 'ID' Typing_opt
	Preceding states: {31}
[148] UntypedExpression --> 'let' . Locals 'in' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'in'}
[188] Locals --> . Local ';'
	Preceding states: {31}
[189] Locals --> . Locals Local ';'
	Preceding states: {31}
[190] Local --> . Parameter Initialization_opt
	Preceding states: {31}
-----------------------------
With Locals, go to state 308
With 'ID', go to state 199
With Local, go to state 309
With Parameter, go to state 310

=============================
STATE NUMBER: 32
=============================
[149] UntypedExpression --> Location . '=' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '=', go to state 306

=============================
STATE NUMBER: 33
=============================
[151] UntypedExpression --> Sequence .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 34
=============================
[153] UntypedExpression --> Comprehension .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 35
=============================
[154] UntypedExpression --> 'foreach' . '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '(', go to state 301

=============================
STATE NUMBER: 36
=============================
[155] UntypedExpression --> 'hom' . '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '(', go to state 292

=============================
STATE NUMBER: 37
=============================
[156] Literal --> 'INT' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 38
=============================
[157] Literal --> 'CHAR' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 39
=============================
[158] Literal --> 'REAL' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 40
=============================
[159] Literal --> 'STRING' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 41
=============================
[160] Literal --> 'true' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 42
=============================
[161] Literal --> 'false' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 43
=============================
[162] Literal --> 'null' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 44
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {44}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {44}
[5] Operator --> . '_OPERATOR'
	Preceding states: {44}
[40] Operator --> . 'ID'
	Preceding states: {44}
[82] CollectionKind --> . SetKind
	Preceding states: {44}
[83] CollectionKind --> . NonSetKind
	Preceding states: {44}
[84] SetKind --> . 'set'
	Preceding states: {44}
[85] NonSetKind --> . 'bag'
	Preceding states: {44}
[86] NonSetKind --> . 'list'
	Preceding states: {44}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {44}
[125] Expression --> . Allocation
	Preceding states: {44}
[126] Expression --> . Expression 'as' Type
	Preceding states: {44}
[127] Expression --> . '$' Expression
	Preceding states: {44}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {44}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {44}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {44}
[136] UntypedExpression --> . Literal
	Preceding states: {44}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {44}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {44}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {44}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {44}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {44}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {44}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {44}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {44}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {44}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {44}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {44}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {44}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {44}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {44}
[151] UntypedExpression --> . Sequence
	Preceding states: {44}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {44}
[153] UntypedExpression --> . Comprehension
	Preceding states: {44}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {44}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {44}
[156] Literal --> . 'INT'
	Preceding states: {44}
[157] Literal --> . 'CHAR'
	Preceding states: {44}
[158] Literal --> . 'REAL'
	Preceding states: {44}
[159] Literal --> . 'STRING'
	Preceding states: {44}
[160] Literal --> . 'true'
	Preceding states: {44}
[161] Literal --> . 'false'
	Preceding states: {44}
[162] Literal --> . 'null'
	Preceding states: {44}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {44}
[163] TupleExpression --> '<' . TupleComponents '>'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Follow set: {'>'}
[164] TupleExpression --> . TupleProjection
	Preceding states: {44}
[165] TupleComponents --> . Expressions_opt
	Preceding states: {44}
[166] TupleComponents --> . NamedTupleComponents
	Preceding states: {44}
[167] NamedTupleComponents --> . NamedTupleComponent
	Preceding states: {44}
[168] NamedTupleComponents --> . NamedTupleComponents ',' NamedTupleComponent
	Preceding states: {44}
[169] NamedTupleComponent --> . 'ID' ':=' Expression
	Preceding states: {44}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {44}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {44}
[179] OperatorExpression --> . Operator
	Preceding states: {44}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {44}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {44}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {44}
[184] Expressions_opt --> .
	Preceding states: {44}
	Lookahead set: {'>'}
[185] Expressions_opt --> . Expressions
	Preceding states: {44}
[186] Expressions --> . Expression
	Preceding states: {44}
[187] Expressions --> . Expressions ',' Expression
	Preceding states: {44}
[191] Location --> . 'ID'
	Preceding states: {44}
[192] Location --> . TupleProjection
	Preceding states: {44}
[193] Location --> . ArraySlotExpression
	Preceding states: {44}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {44}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {44}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {44}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {44}
-----------------------------
With TupleComponents, go to state 281
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 282
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 172
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Expressions_opt, go to state 283
With NamedTupleComponents, go to state 284
With NamedTupleComponent, go to state 285
With Expressions, go to state 173
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 45
=============================
[164] TupleExpression --> TupleProjection .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[192] Location --> TupleProjection .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'='}
-----------------------------

=============================
STATE NUMBER: 46
=============================
[179] OperatorExpression --> Operator .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 47
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S37	over R198, 	on input 'INT'
Resolved   S/R conflict: choosing S39	over R198, 	on input 'REAL'
Resolved   S/R conflict: choosing S38	over R198, 	on input 'CHAR'
Resolved   S/R conflict: choosing S40	over R198, 	on input 'STRING'
Resolved   S/R conflict: choosing S9	over R198, 	on input 'ID'
Resolved   S/R conflict: choosing S44	over R198, 	on input '<'
Resolved   S/R conflict: choosing S18	over R198, 	on input '$'
Resolved   S/R conflict: choosing S19	over R198, 	on input '('
Unresolved S/R conflict: choosing S47	over R198, 	on input '{'
Unresolved S/R conflict: choosing S12	over R198, 	on input 'set'
Unresolved S/R conflict: choosing S13	over R198, 	on input 'bag'
Unresolved S/R conflict: choosing S14	over R198, 	on input 'list'
Unresolved S/R conflict: choosing S20	over R198, 	on input 'new'
Unresolved S/R conflict: choosing S24	over R198, 	on input '#['
Unresolved S/R conflict: choosing S27	over R198, 	on input 'function'
Unresolved S/R conflict: choosing S28	over R198, 	on input 'return'
Unresolved S/R conflict: choosing S29	over R198, 	on input 'if'
Unresolved S/R conflict: choosing S30	over R198, 	on input 'while'
Unresolved S/R conflict: choosing S31	over R198, 	on input 'let'
Unresolved S/R conflict: choosing S35	over R198, 	on input 'foreach'
Unresolved S/R conflict: choosing S36	over R198, 	on input 'hom'
Unresolved S/R conflict: choosing S41	over R198, 	on input 'true'
Unresolved S/R conflict: choosing S42	over R198, 	on input 'false'
Unresolved S/R conflict: choosing S43	over R198, 	on input 'null'
Resolved   S/R conflict: choosing S49	over R198, 	on input '['
-----------------------------
This state has dynamic actions:
	
{0:[S6, R198],1:[S7, R198],2:[S8, R198]}
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {47}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {47}
[5] Operator --> . '_OPERATOR'
	Preceding states: {47}
[40] Operator --> . 'ID'
	Preceding states: {47}
[82] CollectionKind --> . SetKind
	Preceding states: {47}
[83] CollectionKind --> . NonSetKind
	Preceding states: {47}
[84] SetKind --> . 'set'
	Preceding states: {47}
[85] NonSetKind --> . 'bag'
	Preceding states: {47}
[86] NonSetKind --> . 'list'
	Preceding states: {47}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {47}
[125] Expression --> . Allocation
	Preceding states: {47}
[126] Expression --> . Expression 'as' Type
	Preceding states: {47}
[127] Expression --> . '$' Expression
	Preceding states: {47}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {47}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {47}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {47}
[136] UntypedExpression --> . Literal
	Preceding states: {47}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {47}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {47}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {47}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {47}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {47}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {47}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {47}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {47}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {47}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {47}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {47}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {47}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {47}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {47}
[151] UntypedExpression --> . Sequence
	Preceding states: {47}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {47}
[153] UntypedExpression --> . Comprehension
	Preceding states: {47}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {47}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {47}
[156] Literal --> . 'INT'
	Preceding states: {47}
[157] Literal --> . 'CHAR'
	Preceding states: {47}
[158] Literal --> . 'REAL'
	Preceding states: {47}
[159] Literal --> . 'STRING'
	Preceding states: {47}
[160] Literal --> . 'true'
	Preceding states: {47}
[161] Literal --> . 'false'
	Preceding states: {47}
[162] Literal --> . 'null'
	Preceding states: {47}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {47}
[164] TupleExpression --> . TupleProjection
	Preceding states: {47}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {47}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {47}
[179] OperatorExpression --> . Operator
	Preceding states: {47}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {47}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {47}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {47}
[191] Location --> . 'ID'
	Preceding states: {47}
[192] Location --> . TupleProjection
	Preceding states: {47}
[193] Location --> . ArraySlotExpression
	Preceding states: {47}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {47}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {47}
[197] Sequence --> '{' . ExpressionSequence_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'}'}
[198] ExpressionSequence_opt --> .
	Preceding states: {47}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', '}', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[199] ExpressionSequence_opt --> . Expression ';'
	Preceding states: {47}
[200] ExpressionSequence_opt --> . ExpressionSequence_opt Expression ';'
	Preceding states: {47}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {47}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {47}
-----------------------------
With ExpressionSequence_opt, go to state 275
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 276
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 48
=============================
[201] Comprehension --> Monoid . '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '{', go to state 263

=============================
STATE NUMBER: 49
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {49}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {49}
[5] Operator --> . '_OPERATOR'
	Preceding states: {49}
[40] Operator --> . 'ID'
	Preceding states: {49}
[82] CollectionKind --> . SetKind
	Preceding states: {49}
[83] CollectionKind --> . NonSetKind
	Preceding states: {49}
[84] SetKind --> . 'set'
	Preceding states: {49}
[85] NonSetKind --> . 'bag'
	Preceding states: {49}
[86] NonSetKind --> . 'list'
	Preceding states: {49}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {49}
[125] Expression --> . Allocation
	Preceding states: {49}
[126] Expression --> . Expression 'as' Type
	Preceding states: {49}
[127] Expression --> . '$' Expression
	Preceding states: {49}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {49}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {49}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {49}
[136] UntypedExpression --> . Literal
	Preceding states: {49}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {49}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {49}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {49}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {49}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {49}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {49}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {49}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {49}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {49}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {49}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {49}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {49}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {49}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {49}
[151] UntypedExpression --> . Sequence
	Preceding states: {49}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {49}
[153] UntypedExpression --> . Comprehension
	Preceding states: {49}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {49}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {49}
[156] Literal --> . 'INT'
	Preceding states: {49}
[157] Literal --> . 'CHAR'
	Preceding states: {49}
[158] Literal --> . 'REAL'
	Preceding states: {49}
[159] Literal --> . 'STRING'
	Preceding states: {49}
[160] Literal --> . 'true'
	Preceding states: {49}
[161] Literal --> . 'false'
	Preceding states: {49}
[162] Literal --> . 'null'
	Preceding states: {49}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {49}
[164] TupleExpression --> . TupleProjection
	Preceding states: {49}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {49}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {49}
[179] OperatorExpression --> . Operator
	Preceding states: {49}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {49}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {49}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {49}
[191] Location --> . 'ID'
	Preceding states: {49}
[192] Location --> . TupleProjection
	Preceding states: {49}
[193] Location --> . ArraySlotExpression
	Preceding states: {49}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {49}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {49}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {49}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {49}
[202] Monoid --> '[' . Expression ',' Expression ']' InPlace_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 344, 355, 359, 363, 365}
	Follow set: {','}
-----------------------------
With Expression, go to state 256
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 50
=============================
[9] Statement --> '#' . Pragma PragmaArgument_opt $ACTION0$ EOS
	Preceding states: {2, 4}
	Follow set: {'STRING', ';'}
[35] Pragma --> . 'ID'
	Preceding states: {50}
-----------------------------
With Pragma, go to state 250
With 'ID', go to state 251

=============================
STATE NUMBER: 51
=============================
[10] Statement --> DefinitionStatement .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 52
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {52}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {52}
[5] Operator --> . '_OPERATOR'
	Preceding states: {52}
[12] Statement --> '?' . Expression $ACTION1$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
[40] Operator --> . 'ID'
	Preceding states: {52}
[82] CollectionKind --> . SetKind
	Preceding states: {52}
[83] CollectionKind --> . NonSetKind
	Preceding states: {52}
[84] SetKind --> . 'set'
	Preceding states: {52}
[85] NonSetKind --> . 'bag'
	Preceding states: {52}
[86] NonSetKind --> . 'list'
	Preceding states: {52}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {52}
[125] Expression --> . Allocation
	Preceding states: {52}
[126] Expression --> . Expression 'as' Type
	Preceding states: {52}
[127] Expression --> . '$' Expression
	Preceding states: {52}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {52}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {52}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {52}
[136] UntypedExpression --> . Literal
	Preceding states: {52}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {52}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {52}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {52}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {52}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {52}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {52}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {52}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {52}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {52}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {52}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {52}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {52}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {52}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {52}
[151] UntypedExpression --> . Sequence
	Preceding states: {52}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {52}
[153] UntypedExpression --> . Comprehension
	Preceding states: {52}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {52}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {52}
[156] Literal --> . 'INT'
	Preceding states: {52}
[157] Literal --> . 'CHAR'
	Preceding states: {52}
[158] Literal --> . 'REAL'
	Preceding states: {52}
[159] Literal --> . 'STRING'
	Preceding states: {52}
[160] Literal --> . 'true'
	Preceding states: {52}
[161] Literal --> . 'false'
	Preceding states: {52}
[162] Literal --> . 'null'
	Preceding states: {52}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {52}
[164] TupleExpression --> . TupleProjection
	Preceding states: {52}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {52}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {52}
[179] OperatorExpression --> . Operator
	Preceding states: {52}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {52}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {52}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {52}
[191] Location --> . 'ID'
	Preceding states: {52}
[192] Location --> . TupleProjection
	Preceding states: {52}
[193] Location --> . ArraySlotExpression
	Preceding states: {52}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {52}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {52}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {52}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {52}
-----------------------------
With Expression, go to state 247
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 53
=============================
[15] $ACTION3$ --> .
	Preceding states: {53}
	Lookahead set: {';'}
[16] Statement --> 'error' . $ACTION3$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
-----------------------------
With $ACTION3$, go to state 245

=============================
STATE NUMBER: 54
=============================
[17] Statement --> ';' .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 55
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {55}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {55}
[5] Operator --> . '_OPERATOR'
	Preceding states: {55}
[18] DefinitionStatement --> 'define' . DefinitionKind EOS
	Preceding states: {2, 4}
	Follow set: {';'}
[20] DefinitionKind --> . 'operator' Operator 'SPECIFIER' 'INT'
	Preceding states: {55}
[21] DefinitionKind --> . 'signature' Operator Typing
	Preceding states: {55}
[24] DefinitionKind --> . 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' Type
	Preceding states: {55}
[27] DefinitionKind --> . 'type' $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt '=' Type
	Preceding states: {55}
[28] DefinitionKind --> . 'value' Definition
	Preceding states: {55}
[29] DefinitionKind --> . Definition
	Preceding states: {55}
[40] Operator --> . 'ID'
	Preceding states: {55}
[113] Definition --> . Operator FunctionParameters_opt Typing_opt '=' Expression
	Preceding states: {55}
-----------------------------
With DefinitionKind, go to state 216
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77
With Operator, go to state 192
With 'operator', go to state 217
With 'signature', go to state 218
With 'type', go to state 219
With 'value', go to state 220
With Definition, go to state 221

=============================
STATE NUMBER: 56
=============================
[19] DefinitionStatement --> StructureOrClassDeclaration .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 57
=============================
[30] $ACTION8$ --> .
	Preceding states: {57}
	Lookahead set: {'ID'}
[32] StructureOrClassDeclaration --> 'structure' . $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
	Follow set: {'ID'}
-----------------------------
With $ACTION8$, go to state 209

=============================
STATE NUMBER: 58
=============================
[34] StructureOrClassDeclaration --> 'class' . 'ID' $ACTION10$ TypeParameters_opt Interface Implementation_opt
	Preceding states: {2, 4}
-----------------------------
With 'ID', go to state 59

=============================
STATE NUMBER: 59
=============================
[33] $ACTION10$ --> .
	Preceding states: {59}
	Lookahead set: {'(', '{'}
[34] StructureOrClassDeclaration --> 'class' 'ID' . $ACTION10$ TypeParameters_opt Interface Implementation_opt
	Preceding states: {2, 4}
	Follow set: {'(', '{'}
-----------------------------
With $ACTION10$, go to state 60

=============================
STATE NUMBER: 60
=============================
[34] StructureOrClassDeclaration --> 'class' 'ID' $ACTION10$ . TypeParameters_opt Interface Implementation_opt
	Preceding states: {2, 4}
	Follow set: {'{'}
[98] TypeParameters_opt --> .
	Preceding states: {60}
	Lookahead set: {'{'}
[99] TypeParameters_opt --> . '(' TypeParameters ')'
	Preceding states: {60}
-----------------------------
With TypeParameters_opt, go to state 61
With '(', go to state 62

=============================
STATE NUMBER: 61
=============================
[34] StructureOrClassDeclaration --> 'class' 'ID' $ACTION10$ TypeParameters_opt . Interface Implementation_opt
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[102] Interface --> . '{' MemberDeclarations_opt '}'
	Preceding states: {61}
-----------------------------
With Interface, go to state 68
With '{', go to state 69

=============================
STATE NUMBER: 62
=============================
[99] TypeParameters_opt --> '(' . TypeParameters ')'
	Preceding states: {60, 211, 227, 233}
	Follow set: {')'}
[100] TypeParameters --> . 'ID'
	Preceding states: {62}
[101] TypeParameters --> . TypeParameters ',' 'ID'
	Preceding states: {62}
-----------------------------
With TypeParameters, go to state 63
With 'ID', go to state 64

=============================
STATE NUMBER: 63
=============================
[99] TypeParameters_opt --> '(' TypeParameters . ')'
	Preceding states: {60, 211, 227, 233}
[101] TypeParameters --> TypeParameters . ',' 'ID'
	Preceding states: {62}
-----------------------------
With ')', go to state 65
With ',', go to state 66

=============================
STATE NUMBER: 64
=============================
[100] TypeParameters --> 'ID' .
	Preceding states: {62, 143}
	Lookahead set: {'.', ')', ','}
-----------------------------

=============================
STATE NUMBER: 65
=============================
[99] TypeParameters_opt --> '(' TypeParameters ')' .
	Preceding states: {60, 211, 227, 233}
	Lookahead set: {'=', '{'}
-----------------------------

=============================
STATE NUMBER: 66
=============================
[101] TypeParameters --> TypeParameters ',' . 'ID'
	Preceding states: {62, 143}
-----------------------------
With 'ID', go to state 67

=============================
STATE NUMBER: 67
=============================
[101] TypeParameters --> TypeParameters ',' 'ID' .
	Preceding states: {62, 143}
	Lookahead set: {'.', ')', ','}
-----------------------------

=============================
STATE NUMBER: 68
=============================
This state has conflicts:

Unresolved S/R conflict: choosing S188	over R109, 	on input '{'
-----------------------------
[34] StructureOrClassDeclaration --> 'class' 'ID' $ACTION10$ TypeParameters_opt Interface . Implementation_opt
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[109] Implementation_opt --> .
	Preceding states: {68}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[110] Implementation_opt --> . '{' Definitions_opt '}'
	Preceding states: {68}
-----------------------------
With Implementation_opt, go to state 187
With '{', go to state 188

=============================
STATE NUMBER: 69
=============================
[102] Interface --> '{' . MemberDeclarations_opt '}'
	Preceding states: {61}
	Follow set: {'}'}
[103] MemberDeclarations_opt --> .
	Preceding states: {69}
	Lookahead set: {'ID', '}', 'method'}
[104] MemberDeclarations_opt --> . MemberDeclarations_opt MemberDeclaration
	Preceding states: {69}
-----------------------------
With MemberDeclarations_opt, go to state 70

=============================
STATE NUMBER: 70
=============================
[102] Interface --> '{' MemberDeclarations_opt . '}'
	Preceding states: {61}
[104] MemberDeclarations_opt --> MemberDeclarations_opt . MemberDeclaration
	Preceding states: {69}
	Follow set: {'ID', '}', 'method'}
[105] MemberDeclaration --> . 'ID' Typing Initialization_opt ';'
	Preceding states: {70}
[106] MemberDeclaration --> . 'method' Operator Typing ';'
	Preceding states: {70}
-----------------------------
With '}', go to state 71
With MemberDeclaration, go to state 72
With 'ID', go to state 73
With 'method', go to state 74

=============================
STATE NUMBER: 71
=============================
[102] Interface --> '{' MemberDeclarations_opt '}' .
	Preceding states: {61}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 72
=============================
[104] MemberDeclarations_opt --> MemberDeclarations_opt MemberDeclaration .
	Preceding states: {69}
	Lookahead set: {'ID', '}', 'method'}
-----------------------------

=============================
STATE NUMBER: 73
=============================
[43] Typing --> . ':' Type
	Preceding states: {73}
[105] MemberDeclaration --> 'ID' . Typing Initialization_opt ';'
	Preceding states: {70}
	Follow set: {';', '='}
-----------------------------
With Typing, go to state 159
With ':', go to state 79

=============================
STATE NUMBER: 74
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {74}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {74}
[5] Operator --> . '_OPERATOR'
	Preceding states: {74}
[40] Operator --> . 'ID'
	Preceding states: {74}
[106] MemberDeclaration --> 'method' . Operator Typing ';'
	Preceding states: {70}
	Follow set: {':'}
-----------------------------
With Operator, go to state 75
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77

=============================
STATE NUMBER: 75
=============================
[43] Typing --> . ':' Type
	Preceding states: {75}
[106] MemberDeclaration --> 'method' Operator . Typing ';'
	Preceding states: {70}
	Follow set: {';'}
-----------------------------
With Typing, go to state 78
With ':', go to state 79

=============================
STATE NUMBER: 76
=============================
[3] Operator --> 'OPERATOR_' .
	Preceding states: {55, 74, 166, 189, 217, 218, 220}
	Lookahead set: {'SPECIFIER', '(', '=', ':'}
-----------------------------

=============================
STATE NUMBER: 77
=============================
[40] Operator --> 'ID' .
	Preceding states: {55, 74, 189, 217, 218, 220}
	Lookahead set: {'SPECIFIER', '(', '=', ':'}
-----------------------------

=============================
STATE NUMBER: 78
=============================
[106] MemberDeclaration --> 'method' Operator Typing . ';'
	Preceding states: {70}
-----------------------------
With ';', go to state 158

=============================
STATE NUMBER: 79
=============================
[43] Typing --> ':' . Type
	Preceding states: {15, 73, 75, 135, 139, 193, 199, 237, 317, 326, 349, 351, 366}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[46] Type --> . TypeConstant
	Preceding states: {79}
[47] Type --> . FunctionType
	Preceding states: {79}
[48] Type --> . TupleType
	Preceding states: {79}
[49] Type --> . ArrayType
	Preceding states: {79}
[50] Type --> . CollectionType
	Preceding states: {79}
[51] Type --> . IntRangeType
	Preceding states: {79}
[52] Type --> . RealRangeType
	Preceding states: {79}
[53] Type --> . TypeTerm
	Preceding states: {79}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {79}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {79}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {79}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {79}
[59] TypeConstant --> . 'string'
	Preceding states: {79}
[60] PrimitiveType --> . 'void'
	Preceding states: {79}
[61] PrimitiveType --> . 'int'
	Preceding states: {79}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {79}
[63] PrimitiveType --> . 'char'
	Preceding states: {79}
[64] PrimitiveType --> . 'real'
	Preceding states: {79}
[65] FunctionType --> . Type '->' Type
	Preceding states: {79}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {79}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {79}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {79}
[80] CollectionType --> . SetType
	Preceding states: {79}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {79}
[84] SetKind --> . 'set'
	Preceding states: {79}
[85] NonSetKind --> . 'bag'
	Preceding states: {79}
[86] NonSetKind --> . 'list'
	Preceding states: {79}
[87] SetKind_opt --> .
	Preceding states: {79}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {79}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {79}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {79}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {79}
[92] TypeTerm --> . 'ID'
	Preceding states: {79}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {79}
-----------------------------
With Type, go to state 80
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 80
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S109	over R43, 	on input '['
-----------------------------
[43] Typing --> ':' Type .
	Preceding states: {15, 73, 75, 135, 139, 193, 199, 237, 317, 326, 335, 349, 351, 366}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {79, 341}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {79, 341}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 81
=============================
[46] Type --> TypeConstant .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 82
=============================
[47] Type --> FunctionType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 83
=============================
[48] Type --> TupleType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 84
=============================
[49] Type --> ArrayType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 85
=============================
[50] Type --> CollectionType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 86
=============================
[51] Type --> IntRangeType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 87
=============================
[52] Type --> RealRangeType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 88
=============================
[53] Type --> TypeTerm .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 89
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R44	over R94, 	on input ')'
-----------------------------
[44] Type_opt --> .
	Preceding states: {89}
	Lookahead set: {')'}
[45] Type_opt --> . Type
	Preceding states: {89}
[46] Type --> . TypeConstant
	Preceding states: {89}
[47] Type --> . FunctionType
	Preceding states: {89}
[48] Type --> . TupleType
	Preceding states: {89}
[49] Type --> . ArrayType
	Preceding states: {89}
[50] Type --> . CollectionType
	Preceding states: {89}
[51] Type --> . IntRangeType
	Preceding states: {89}
[52] Type --> . RealRangeType
	Preceding states: {89}
[53] Type --> . TypeTerm
	Preceding states: {89}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {89}
[54] Type --> '(' . Type_opt ')'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
	Follow set: {')'}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {89}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {89}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {89}
[59] TypeConstant --> . 'string'
	Preceding states: {89}
[60] PrimitiveType --> . 'void'
	Preceding states: {89}
[61] PrimitiveType --> . 'int'
	Preceding states: {89}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {89}
[63] PrimitiveType --> . 'char'
	Preceding states: {89}
[64] PrimitiveType --> . 'real'
	Preceding states: {89}
[65] FunctionType --> . Type '->' Type
	Preceding states: {89}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {89}
[66] FunctionType --> '(' . Types_opt ')' '->' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
	Follow set: {')'}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {89}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {89}
[80] CollectionType --> . SetType
	Preceding states: {89}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {89}
[84] SetKind --> . 'set'
	Preceding states: {89}
[85] NonSetKind --> . 'bag'
	Preceding states: {89}
[86] NonSetKind --> . 'list'
	Preceding states: {89}
[87] SetKind_opt --> .
	Preceding states: {89}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {89}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {89}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {89}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {89}
[92] TypeTerm --> . 'ID'
	Preceding states: {89}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {89}
[94] Types_opt --> .
	Preceding states: {89}
	Lookahead set: {')'}
[95] Types_opt --> . Types
	Preceding states: {89}
[96] Types --> . Type
	Preceding states: {89}
[97] Types --> . Types ',' Type
	Preceding states: {89}
-----------------------------
With Type_opt, go to state 151
With Types_opt, go to state 152
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With Type, go to state 153
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104
With Types, go to state 134

=============================
STATE NUMBER: 90
=============================
[55] Type --> '[' . PrimitiveType ']'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
	Follow set: {']'}
[60] PrimitiveType --> . 'void'
	Preceding states: {90}
[61] PrimitiveType --> . 'int'
	Preceding states: {90}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {90}
[63] PrimitiveType --> . 'char'
	Preceding states: {90}
[64] PrimitiveType --> . 'real'
	Preceding states: {90}
-----------------------------
With PrimitiveType, go to state 147
With 'void', go to state 94
With 'int', go to state 148
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 149

=============================
STATE NUMBER: 91
=============================
[56] $ACTION12$ --> .
	Preceding states: {91}
	Lookahead set: {'ID'}
[57] Type --> 'forall' . $ACTION12$ TypeParameters '.' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'ID'}
-----------------------------
With $ACTION12$, go to state 143

=============================
STATE NUMBER: 92
=============================
[58] TypeConstant --> PrimitiveType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 93
=============================
[59] TypeConstant --> 'string' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 94
=============================
[60] PrimitiveType --> 'void' .
	Preceding states: {20, 79, 89, 90, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 344, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 95
=============================
[61] PrimitiveType --> 'int' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[90] IntRangeType --> 'int' . '..' 'int'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With '..', go to state 116

=============================
STATE NUMBER: 96
=============================
[62] PrimitiveType --> 'boolean' .
	Preceding states: {20, 79, 89, 90, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 344, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 97
=============================
[63] PrimitiveType --> 'char' .
	Preceding states: {20, 79, 89, 90, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 344, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 98
=============================
[64] PrimitiveType --> 'real' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[91] RealRangeType --> 'real' . '..' 'real'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With '..', go to state 141

=============================
STATE NUMBER: 99
=============================
[46] Type --> . TypeConstant
	Preceding states: {99}
[47] Type --> . FunctionType
	Preceding states: {99}
[48] Type --> . TupleType
	Preceding states: {99}
[49] Type --> . ArrayType
	Preceding states: {99}
[50] Type --> . CollectionType
	Preceding states: {99}
[51] Type --> . IntRangeType
	Preceding states: {99}
[52] Type --> . RealRangeType
	Preceding states: {99}
[53] Type --> . TypeTerm
	Preceding states: {99}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {99}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {99}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {99}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {99}
[59] TypeConstant --> . 'string'
	Preceding states: {99}
[60] PrimitiveType --> . 'void'
	Preceding states: {99}
[61] PrimitiveType --> . 'int'
	Preceding states: {99}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {99}
[63] PrimitiveType --> . 'char'
	Preceding states: {99}
[64] PrimitiveType --> . 'real'
	Preceding states: {99}
[65] FunctionType --> . Type '->' Type
	Preceding states: {99}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {99}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {99}
[67] TupleType --> '<' . TupleTypeComponents '>'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
	Follow set: {'>'}
[68] TupleTypeComponents --> . Types_opt
	Preceding states: {99}
[69] TupleTypeComponents --> . NamedTupleTypeComponents
	Preceding states: {99}
[70] NamedTupleTypeComponents --> . NamedTupleTypeComponent
	Preceding states: {99}
[71] NamedTupleTypeComponents --> . NamedTupleTypeComponents ',' NamedTupleTypeComponent
	Preceding states: {99}
[72] NamedTupleTypeComponent --> . 'ID' Typing
	Preceding states: {99}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {99}
[80] CollectionType --> . SetType
	Preceding states: {99}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {99}
[84] SetKind --> . 'set'
	Preceding states: {99}
[85] NonSetKind --> . 'bag'
	Preceding states: {99}
[86] NonSetKind --> . 'list'
	Preceding states: {99}
[87] SetKind_opt --> .
	Preceding states: {99}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {99}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {99}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {99}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {99}
[92] TypeTerm --> . 'ID'
	Preceding states: {99}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {99}
[94] Types_opt --> .
	Preceding states: {99}
	Lookahead set: {'>'}
[95] Types_opt --> . Types
	Preceding states: {99}
[96] Types --> . Type
	Preceding states: {99}
[97] Types --> . Types ',' Type
	Preceding states: {99}
-----------------------------
With TupleTypeComponents, go to state 130
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With Type, go to state 107
With '<', go to state 99
With Types_opt, go to state 131
With NamedTupleTypeComponents, go to state 132
With NamedTupleTypeComponent, go to state 133
With Types, go to state 134
With 'ID', go to state 135
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14

=============================
STATE NUMBER: 100
=============================
[80] CollectionType --> SetType .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 101
=============================
[81] CollectionType --> NonSetKind . '{' Type_opt '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
-----------------------------
With '{', go to state 127

=============================
STATE NUMBER: 102
=============================
[89] SetType --> SetKind_opt . '{' Type_opt '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
-----------------------------
With '{', go to state 123

=============================
STATE NUMBER: 103
=============================
[88] SetKind_opt --> SetKind .
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 104
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S105	over R92, 	on input '('
-----------------------------
[92] TypeTerm --> 'ID' .
	Preceding states: {20, 79, 89, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[93] TypeTerm --> 'ID' . '(' Types ')'
	Preceding states: {20, 79, 89, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235}
-----------------------------
With '(', go to state 105

=============================
STATE NUMBER: 105
=============================
[46] Type --> . TypeConstant
	Preceding states: {105}
[47] Type --> . FunctionType
	Preceding states: {105}
[48] Type --> . TupleType
	Preceding states: {105}
[49] Type --> . ArrayType
	Preceding states: {105}
[50] Type --> . CollectionType
	Preceding states: {105}
[51] Type --> . IntRangeType
	Preceding states: {105}
[52] Type --> . RealRangeType
	Preceding states: {105}
[53] Type --> . TypeTerm
	Preceding states: {105}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {105}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {105}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {105}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {105}
[59] TypeConstant --> . 'string'
	Preceding states: {105}
[60] PrimitiveType --> . 'void'
	Preceding states: {105}
[61] PrimitiveType --> . 'int'
	Preceding states: {105}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {105}
[63] PrimitiveType --> . 'char'
	Preceding states: {105}
[64] PrimitiveType --> . 'real'
	Preceding states: {105}
[65] FunctionType --> . Type '->' Type
	Preceding states: {105}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {105}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {105}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {105}
[80] CollectionType --> . SetType
	Preceding states: {105}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {105}
[84] SetKind --> . 'set'
	Preceding states: {105}
[85] NonSetKind --> . 'bag'
	Preceding states: {105}
[86] NonSetKind --> . 'list'
	Preceding states: {105}
[87] SetKind_opt --> .
	Preceding states: {105}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {105}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {105}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {105}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {105}
[92] TypeTerm --> . 'ID'
	Preceding states: {105}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {105}
[93] TypeTerm --> 'ID' '(' . Types ')'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {')'}
[96] Types --> . Type
	Preceding states: {105}
[97] Types --> . Types ',' Type
	Preceding states: {105}
-----------------------------
With Types, go to state 106
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With Type, go to state 107
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 106
=============================
[93] TypeTerm --> 'ID' '(' Types . ')'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
[97] Types --> Types . ',' Type
	Preceding states: {105}
-----------------------------
With ')', go to state 120
With ',', go to state 121

=============================
STATE NUMBER: 107
=============================
[65] FunctionType --> Type . '->' Type
	Preceding states: {99, 105, 345}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {99, 105, 345}
[96] Types --> Type .
	Preceding states: {99, 105, 345}
	Lookahead set: {'>', ')', ','}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 108
=============================
[46] Type --> . TypeConstant
	Preceding states: {108}
[47] Type --> . FunctionType
	Preceding states: {108}
[48] Type --> . TupleType
	Preceding states: {108}
[49] Type --> . ArrayType
	Preceding states: {108}
[50] Type --> . CollectionType
	Preceding states: {108}
[51] Type --> . IntRangeType
	Preceding states: {108}
[52] Type --> . RealRangeType
	Preceding states: {108}
[53] Type --> . TypeTerm
	Preceding states: {108}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {108}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {108}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {108}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {108}
[59] TypeConstant --> . 'string'
	Preceding states: {108}
[60] PrimitiveType --> . 'void'
	Preceding states: {108}
[61] PrimitiveType --> . 'int'
	Preceding states: {108}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {108}
[63] PrimitiveType --> . 'char'
	Preceding states: {108}
[64] PrimitiveType --> . 'real'
	Preceding states: {108}
[65] FunctionType --> . Type '->' Type
	Preceding states: {108}
[65] FunctionType --> Type '->' . Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {108}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {108}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {108}
[80] CollectionType --> . SetType
	Preceding states: {108}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {108}
[84] SetKind --> . 'set'
	Preceding states: {108}
[85] NonSetKind --> . 'bag'
	Preceding states: {108}
[86] NonSetKind --> . 'list'
	Preceding states: {108}
[87] SetKind_opt --> .
	Preceding states: {108}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {108}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {108}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {108}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {108}
[92] TypeTerm --> . 'ID'
	Preceding states: {108}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {108}
-----------------------------
With Type, go to state 119
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 109
=============================
[73] ArrayType --> Type '[' . IndexType ']'
	Preceding states: {79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {']'}
[74] IndexType --> . IntType_opt
	Preceding states: {109}
[75] IndexType --> . MapIndexType
	Preceding states: {109}
[76] IntType_opt --> .
	Preceding states: {109}
	Lookahead set: {']'}
[77] IntType_opt --> . 'int'
	Preceding states: {109}
[78] MapIndexType --> . SetType
	Preceding states: {109}
[79] MapIndexType --> . IntRangeType
	Preceding states: {109}
[84] SetKind --> . 'set'
	Preceding states: {109}
[87] SetKind_opt --> .
	Preceding states: {109}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {109}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {109}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {109}
-----------------------------
With IndexType, go to state 110
With IntType_opt, go to state 111
With MapIndexType, go to state 112
With SetType, go to state 113
With IntRangeType, go to state 114
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'int', go to state 115

=============================
STATE NUMBER: 110
=============================
[73] ArrayType --> Type '[' IndexType . ']'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With ']', go to state 118

=============================
STATE NUMBER: 111
=============================
[74] IndexType --> IntType_opt .
	Preceding states: {109, 359}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 112
=============================
[75] IndexType --> MapIndexType .
	Preceding states: {109, 359}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 113
=============================
[78] MapIndexType --> SetType .
	Preceding states: {109, 359}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 114
=============================
[79] MapIndexType --> IntRangeType .
	Preceding states: {109, 359}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 115
=============================
[77] IntType_opt --> 'int' .
	Preceding states: {109, 359}
	Lookahead set: {']'}
[90] IntRangeType --> 'int' . '..' 'int'
	Preceding states: {109, 359}
-----------------------------
With '..', go to state 116

=============================
STATE NUMBER: 116
=============================
[90] IntRangeType --> 'int' '..' . 'int'
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
-----------------------------
With 'int', go to state 117

=============================
STATE NUMBER: 117
=============================
[90] IntRangeType --> 'int' '..' 'int' .
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 118
=============================
[73] ArrayType --> Type '[' IndexType ']' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 119
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S108	over R65, 	on input '->'
Resolved   S/R conflict: choosing S109	over R65, 	on input '['
-----------------------------
[65] FunctionType --> Type . '->' Type
	Preceding states: {108}
[65] FunctionType --> Type '->' Type .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {108}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 120
=============================
[93] TypeTerm --> 'ID' '(' Types ')' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 121
=============================
[46] Type --> . TypeConstant
	Preceding states: {121}
[47] Type --> . FunctionType
	Preceding states: {121}
[48] Type --> . TupleType
	Preceding states: {121}
[49] Type --> . ArrayType
	Preceding states: {121}
[50] Type --> . CollectionType
	Preceding states: {121}
[51] Type --> . IntRangeType
	Preceding states: {121}
[52] Type --> . RealRangeType
	Preceding states: {121}
[53] Type --> . TypeTerm
	Preceding states: {121}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {121}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {121}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {121}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {121}
[59] TypeConstant --> . 'string'
	Preceding states: {121}
[60] PrimitiveType --> . 'void'
	Preceding states: {121}
[61] PrimitiveType --> . 'int'
	Preceding states: {121}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {121}
[63] PrimitiveType --> . 'char'
	Preceding states: {121}
[64] PrimitiveType --> . 'real'
	Preceding states: {121}
[65] FunctionType --> . Type '->' Type
	Preceding states: {121}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {121}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {121}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {121}
[80] CollectionType --> . SetType
	Preceding states: {121}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {121}
[84] SetKind --> . 'set'
	Preceding states: {121}
[85] NonSetKind --> . 'bag'
	Preceding states: {121}
[86] NonSetKind --> . 'list'
	Preceding states: {121}
[87] SetKind_opt --> .
	Preceding states: {121}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {121}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {121}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {121}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {121}
[92] TypeTerm --> . 'ID'
	Preceding states: {121}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {121}
[97] Types --> Types ',' . Type
	Preceding states: {89, 99, 105, 343, 345}
	Follow set: {'>', ')', ','}
-----------------------------
With Type, go to state 122
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 122
=============================
[65] FunctionType --> Type . '->' Type
	Preceding states: {121}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {121}
[97] Types --> Types ',' Type .
	Preceding states: {89, 99, 105, 343, 345}
	Lookahead set: {'>', ')', ','}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 123
=============================
[44] Type_opt --> .
	Preceding states: {123}
	Lookahead set: {'}'}
[45] Type_opt --> . Type
	Preceding states: {123}
[46] Type --> . TypeConstant
	Preceding states: {123}
[47] Type --> . FunctionType
	Preceding states: {123}
[48] Type --> . TupleType
	Preceding states: {123}
[49] Type --> . ArrayType
	Preceding states: {123}
[50] Type --> . CollectionType
	Preceding states: {123}
[51] Type --> . IntRangeType
	Preceding states: {123}
[52] Type --> . RealRangeType
	Preceding states: {123}
[53] Type --> . TypeTerm
	Preceding states: {123}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {123}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {123}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {123}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {123}
[59] TypeConstant --> . 'string'
	Preceding states: {123}
[60] PrimitiveType --> . 'void'
	Preceding states: {123}
[61] PrimitiveType --> . 'int'
	Preceding states: {123}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {123}
[63] PrimitiveType --> . 'char'
	Preceding states: {123}
[64] PrimitiveType --> . 'real'
	Preceding states: {123}
[65] FunctionType --> . Type '->' Type
	Preceding states: {123}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {123}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {123}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {123}
[80] CollectionType --> . SetType
	Preceding states: {123}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {123}
[84] SetKind --> . 'set'
	Preceding states: {123}
[85] NonSetKind --> . 'bag'
	Preceding states: {123}
[86] NonSetKind --> . 'list'
	Preceding states: {123}
[87] SetKind_opt --> .
	Preceding states: {123}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {123}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {123}
[89] SetType --> SetKind_opt '{' . Type_opt '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
	Follow set: {'}'}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {123}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {123}
[92] TypeTerm --> . 'ID'
	Preceding states: {123}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {123}
-----------------------------
With Type_opt, go to state 124
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With Type, go to state 125
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 124
=============================
[89] SetType --> SetKind_opt '{' Type_opt . '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
-----------------------------
With '}', go to state 126

=============================
STATE NUMBER: 125
=============================
[45] Type_opt --> Type .
	Preceding states: {123, 127}
	Lookahead set: {'}'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {123, 127}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {123, 127}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 126
=============================
[89] SetType --> SetKind_opt '{' Type_opt '}' .
	Preceding states: {20, 79, 89, 99, 105, 108, 109, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345, 359}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 127
=============================
[44] Type_opt --> .
	Preceding states: {127}
	Lookahead set: {'}'}
[45] Type_opt --> . Type
	Preceding states: {127}
[46] Type --> . TypeConstant
	Preceding states: {127}
[47] Type --> . FunctionType
	Preceding states: {127}
[48] Type --> . TupleType
	Preceding states: {127}
[49] Type --> . ArrayType
	Preceding states: {127}
[50] Type --> . CollectionType
	Preceding states: {127}
[51] Type --> . IntRangeType
	Preceding states: {127}
[52] Type --> . RealRangeType
	Preceding states: {127}
[53] Type --> . TypeTerm
	Preceding states: {127}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {127}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {127}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {127}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {127}
[59] TypeConstant --> . 'string'
	Preceding states: {127}
[60] PrimitiveType --> . 'void'
	Preceding states: {127}
[61] PrimitiveType --> . 'int'
	Preceding states: {127}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {127}
[63] PrimitiveType --> . 'char'
	Preceding states: {127}
[64] PrimitiveType --> . 'real'
	Preceding states: {127}
[65] FunctionType --> . Type '->' Type
	Preceding states: {127}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {127}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {127}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {127}
[80] CollectionType --> . SetType
	Preceding states: {127}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {127}
[81] CollectionType --> NonSetKind '{' . Type_opt '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'}'}
[84] SetKind --> . 'set'
	Preceding states: {127}
[85] NonSetKind --> . 'bag'
	Preceding states: {127}
[86] NonSetKind --> . 'list'
	Preceding states: {127}
[87] SetKind_opt --> .
	Preceding states: {127}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {127}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {127}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {127}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {127}
[92] TypeTerm --> . 'ID'
	Preceding states: {127}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {127}
-----------------------------
With Type_opt, go to state 128
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With Type, go to state 125
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 128
=============================
[81] CollectionType --> NonSetKind '{' Type_opt . '}'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With '}', go to state 129

=============================
STATE NUMBER: 129
=============================
[81] CollectionType --> NonSetKind '{' Type_opt '}' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 130
=============================
[67] TupleType --> '<' TupleTypeComponents . '>'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With '>', go to state 140

=============================
STATE NUMBER: 131
=============================
[68] TupleTypeComponents --> Types_opt .
	Preceding states: {99, 345}
	Lookahead set: {'>'}
-----------------------------

=============================
STATE NUMBER: 132
=============================
[69] TupleTypeComponents --> NamedTupleTypeComponents .
	Preceding states: {99, 345}
	Lookahead set: {'>'}
[71] NamedTupleTypeComponents --> NamedTupleTypeComponents . ',' NamedTupleTypeComponent
	Preceding states: {99, 345}
-----------------------------
With ',', go to state 137

=============================
STATE NUMBER: 133
=============================
[70] NamedTupleTypeComponents --> NamedTupleTypeComponent .
	Preceding states: {99, 213, 345}
	Lookahead set: {'>', '}', ','}
-----------------------------

=============================
STATE NUMBER: 134
=============================
[95] Types_opt --> Types .
	Preceding states: {89, 99, 343, 345}
	Lookahead set: {'>', ')'}
[97] Types --> Types . ',' Type
	Preceding states: {89, 99, 343, 345}
-----------------------------
With ',', go to state 121

=============================
STATE NUMBER: 135
=============================
[43] Typing --> . ':' Type
	Preceding states: {135}
[72] NamedTupleTypeComponent --> 'ID' . Typing
	Preceding states: {99}
	Follow set: {'>', ','}
[92] TypeTerm --> 'ID' .
	Preceding states: {99}
	Lookahead set: {'>', '->', '[', ','}
[93] TypeTerm --> 'ID' . '(' Types ')'
	Preceding states: {99}
-----------------------------
With Typing, go to state 136
With '(', go to state 105
With ':', go to state 79

=============================
STATE NUMBER: 136
=============================
[72] NamedTupleTypeComponent --> 'ID' Typing .
	Preceding states: {99, 137, 213, 345}
	Lookahead set: {'>', '}', ','}
-----------------------------

=============================
STATE NUMBER: 137
=============================
[71] NamedTupleTypeComponents --> NamedTupleTypeComponents ',' . NamedTupleTypeComponent
	Preceding states: {99, 213, 345}
	Follow set: {'>', '}', ','}
[72] NamedTupleTypeComponent --> . 'ID' Typing
	Preceding states: {137}
-----------------------------
With NamedTupleTypeComponent, go to state 138
With 'ID', go to state 139

=============================
STATE NUMBER: 138
=============================
[71] NamedTupleTypeComponents --> NamedTupleTypeComponents ',' NamedTupleTypeComponent .
	Preceding states: {99, 213, 345}
	Lookahead set: {'>', '}', ','}
-----------------------------

=============================
STATE NUMBER: 139
=============================
[43] Typing --> . ':' Type
	Preceding states: {139}
[72] NamedTupleTypeComponent --> 'ID' . Typing
	Preceding states: {137, 213}
	Follow set: {'>', '}', ','}
-----------------------------
With Typing, go to state 136
With ':', go to state 79

=============================
STATE NUMBER: 140
=============================
[67] TupleType --> '<' TupleTypeComponents '>' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 141
=============================
[91] RealRangeType --> 'real' '..' . 'real'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With 'real', go to state 142

=============================
STATE NUMBER: 142
=============================
[91] RealRangeType --> 'real' '..' 'real' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 143
=============================
[57] Type --> 'forall' $ACTION12$ . TypeParameters '.' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'.'}
[100] TypeParameters --> . 'ID'
	Preceding states: {143}
[101] TypeParameters --> . TypeParameters ',' 'ID'
	Preceding states: {143}
-----------------------------
With TypeParameters, go to state 144
With 'ID', go to state 64

=============================
STATE NUMBER: 144
=============================
[57] Type --> 'forall' $ACTION12$ TypeParameters . '.' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
[101] TypeParameters --> TypeParameters . ',' 'ID'
	Preceding states: {143}
-----------------------------
With '.', go to state 145
With ',', go to state 66

=============================
STATE NUMBER: 145
=============================
[46] Type --> . TypeConstant
	Preceding states: {145}
[47] Type --> . FunctionType
	Preceding states: {145}
[48] Type --> . TupleType
	Preceding states: {145}
[49] Type --> . ArrayType
	Preceding states: {145}
[50] Type --> . CollectionType
	Preceding states: {145}
[51] Type --> . IntRangeType
	Preceding states: {145}
[52] Type --> . RealRangeType
	Preceding states: {145}
[53] Type --> . TypeTerm
	Preceding states: {145}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {145}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {145}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {145}
[57] Type --> 'forall' $ACTION12$ TypeParameters '.' . Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {145}
[59] TypeConstant --> . 'string'
	Preceding states: {145}
[60] PrimitiveType --> . 'void'
	Preceding states: {145}
[61] PrimitiveType --> . 'int'
	Preceding states: {145}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {145}
[63] PrimitiveType --> . 'char'
	Preceding states: {145}
[64] PrimitiveType --> . 'real'
	Preceding states: {145}
[65] FunctionType --> . Type '->' Type
	Preceding states: {145}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {145}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {145}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {145}
[80] CollectionType --> . SetType
	Preceding states: {145}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {145}
[84] SetKind --> . 'set'
	Preceding states: {145}
[85] NonSetKind --> . 'bag'
	Preceding states: {145}
[86] NonSetKind --> . 'list'
	Preceding states: {145}
[87] SetKind_opt --> .
	Preceding states: {145}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {145}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {145}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {145}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {145}
[92] TypeTerm --> . 'ID'
	Preceding states: {145}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {145}
-----------------------------
With Type, go to state 146
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 146
=============================
This state has conflicts:

Resolved   R/S conflict: choosing R57	over S108, 	on input '->'
Resolved   S/R conflict: choosing S109	over R57, 	on input '['
-----------------------------
[57] Type --> 'forall' $ACTION12$ TypeParameters '.' Type .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {145}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {145}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 147
=============================
[55] Type --> '[' PrimitiveType . ']'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With ']', go to state 150

=============================
STATE NUMBER: 148
=============================
[61] PrimitiveType --> 'int' .
	Preceding states: {90, 344}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 149
=============================
[64] PrimitiveType --> 'real' .
	Preceding states: {90, 344}
	Lookahead set: {']'}
-----------------------------

=============================
STATE NUMBER: 150
=============================
[55] Type --> '[' PrimitiveType ']' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 151
=============================
[54] Type --> '(' Type_opt . ')'
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With ')', go to state 157

=============================
STATE NUMBER: 152
=============================
[66] FunctionType --> '(' Types_opt . ')' '->' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With ')', go to state 154

=============================
STATE NUMBER: 153
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R45	over R96, 	on input ')'
-----------------------------
[45] Type_opt --> Type .
	Preceding states: {89, 343}
	Lookahead set: {')'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {89, 343}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {89, 343}
[96] Types --> Type .
	Preceding states: {89, 343}
	Lookahead set: {')', ','}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 154
=============================
[66] FunctionType --> '(' Types_opt ')' . '->' Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
-----------------------------
With '->', go to state 155

=============================
STATE NUMBER: 155
=============================
[46] Type --> . TypeConstant
	Preceding states: {155}
[47] Type --> . FunctionType
	Preceding states: {155}
[48] Type --> . TupleType
	Preceding states: {155}
[49] Type --> . ArrayType
	Preceding states: {155}
[50] Type --> . CollectionType
	Preceding states: {155}
[51] Type --> . IntRangeType
	Preceding states: {155}
[52] Type --> . RealRangeType
	Preceding states: {155}
[53] Type --> . TypeTerm
	Preceding states: {155}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {155}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {155}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {155}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {155}
[59] TypeConstant --> . 'string'
	Preceding states: {155}
[60] PrimitiveType --> . 'void'
	Preceding states: {155}
[61] PrimitiveType --> . 'int'
	Preceding states: {155}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {155}
[63] PrimitiveType --> . 'char'
	Preceding states: {155}
[64] PrimitiveType --> . 'real'
	Preceding states: {155}
[65] FunctionType --> . Type '->' Type
	Preceding states: {155}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {155}
[66] FunctionType --> '(' Types_opt ')' '->' . Type
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {155}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {155}
[80] CollectionType --> . SetType
	Preceding states: {155}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {155}
[84] SetKind --> . 'set'
	Preceding states: {155}
[85] NonSetKind --> . 'bag'
	Preceding states: {155}
[86] NonSetKind --> . 'list'
	Preceding states: {155}
[87] SetKind_opt --> .
	Preceding states: {155}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {155}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {155}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {155}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {155}
[92] TypeTerm --> . 'ID'
	Preceding states: {155}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {155}
-----------------------------
With Type, go to state 156
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 156
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S108	over R66, 	on input '->'
Resolved   S/R conflict: choosing S109	over R66, 	on input '['
-----------------------------
[65] FunctionType --> Type . '->' Type
	Preceding states: {155}
[66] FunctionType --> '(' Types_opt ')' '->' Type .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {155}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 157
=============================
[54] Type --> '(' Type_opt ')' .
	Preceding states: {20, 79, 89, 99, 105, 108, 121, 123, 127, 145, 155, 163, 229, 235, 341, 343, 345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '->', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 158
=============================
[106] MemberDeclaration --> 'method' Operator Typing ';' .
	Preceding states: {70}
	Lookahead set: {'ID', '}', 'method'}
-----------------------------

=============================
STATE NUMBER: 159
=============================
[105] MemberDeclaration --> 'ID' Typing . Initialization_opt ';'
	Preceding states: {70}
	Follow set: {';'}
[107] Initialization_opt --> .
	Preceding states: {159}
	Lookahead set: {';'}
[108] Initialization_opt --> . '=' Expression
	Preceding states: {159}
-----------------------------
With Initialization_opt, go to state 160
With '=', go to state 161

=============================
STATE NUMBER: 160
=============================
[105] MemberDeclaration --> 'ID' Typing Initialization_opt . ';'
	Preceding states: {70}
-----------------------------
With ';', go to state 186

=============================
STATE NUMBER: 161
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {161}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {161}
[5] Operator --> . '_OPERATOR'
	Preceding states: {161}
[40] Operator --> . 'ID'
	Preceding states: {161}
[82] CollectionKind --> . SetKind
	Preceding states: {161}
[83] CollectionKind --> . NonSetKind
	Preceding states: {161}
[84] SetKind --> . 'set'
	Preceding states: {161}
[85] NonSetKind --> . 'bag'
	Preceding states: {161}
[86] NonSetKind --> . 'list'
	Preceding states: {161}
[108] Initialization_opt --> '=' . Expression
	Preceding states: {159, 310}
	Follow set: {';'}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {161}
[125] Expression --> . Allocation
	Preceding states: {161}
[126] Expression --> . Expression 'as' Type
	Preceding states: {161}
[127] Expression --> . '$' Expression
	Preceding states: {161}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {161}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {161}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {161}
[136] UntypedExpression --> . Literal
	Preceding states: {161}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {161}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {161}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {161}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {161}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {161}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {161}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {161}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {161}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {161}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {161}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {161}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {161}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {161}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {161}
[151] UntypedExpression --> . Sequence
	Preceding states: {161}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {161}
[153] UntypedExpression --> . Comprehension
	Preceding states: {161}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {161}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {161}
[156] Literal --> . 'INT'
	Preceding states: {161}
[157] Literal --> . 'CHAR'
	Preceding states: {161}
[158] Literal --> . 'REAL'
	Preceding states: {161}
[159] Literal --> . 'STRING'
	Preceding states: {161}
[160] Literal --> . 'true'
	Preceding states: {161}
[161] Literal --> . 'false'
	Preceding states: {161}
[162] Literal --> . 'null'
	Preceding states: {161}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {161}
[164] TupleExpression --> . TupleProjection
	Preceding states: {161}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {161}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {161}
[179] OperatorExpression --> . Operator
	Preceding states: {161}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {161}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {161}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {161}
[191] Location --> . 'ID'
	Preceding states: {161}
[192] Location --> . TupleProjection
	Preceding states: {161}
[193] Location --> . ArraySlotExpression
	Preceding states: {161}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {161}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {161}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {161}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {161}
-----------------------------
With Expression, go to state 162
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 162
=============================
[108] Initialization_opt --> '=' Expression .
	Preceding states: {159, 310}
	Lookahead set: {';'}
[126] Expression --> Expression . 'as' Type
	Preceding states: {161}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {161}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {161}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {161}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {161}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {161}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {161}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {162}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {161}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 163
=============================
[46] Type --> . TypeConstant
	Preceding states: {163}
[47] Type --> . FunctionType
	Preceding states: {163}
[48] Type --> . TupleType
	Preceding states: {163}
[49] Type --> . ArrayType
	Preceding states: {163}
[50] Type --> . CollectionType
	Preceding states: {163}
[51] Type --> . IntRangeType
	Preceding states: {163}
[52] Type --> . RealRangeType
	Preceding states: {163}
[53] Type --> . TypeTerm
	Preceding states: {163}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {163}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {163}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {163}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {163}
[59] TypeConstant --> . 'string'
	Preceding states: {163}
[60] PrimitiveType --> . 'void'
	Preceding states: {163}
[61] PrimitiveType --> . 'int'
	Preceding states: {163}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {163}
[63] PrimitiveType --> . 'char'
	Preceding states: {163}
[64] PrimitiveType --> . 'real'
	Preceding states: {163}
[65] FunctionType --> . Type '->' Type
	Preceding states: {163}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {163}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {163}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {163}
[80] CollectionType --> . SetType
	Preceding states: {163}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {163}
[84] SetKind --> . 'set'
	Preceding states: {163}
[85] NonSetKind --> . 'bag'
	Preceding states: {163}
[86] NonSetKind --> . 'list'
	Preceding states: {163}
[87] SetKind_opt --> .
	Preceding states: {163}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {163}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {163}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {163}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {163}
[92] TypeTerm --> . 'ID'
	Preceding states: {163}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {163}
[126] Expression --> Expression 'as' . Type
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------
With Type, go to state 185
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 164
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {164}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {164}
[5] Operator --> . '_OPERATOR'
	Preceding states: {164}
[40] Operator --> . 'ID'
	Preceding states: {164}
[82] CollectionKind --> . SetKind
	Preceding states: {164}
[83] CollectionKind --> . NonSetKind
	Preceding states: {164}
[84] SetKind --> . 'set'
	Preceding states: {164}
[85] NonSetKind --> . 'bag'
	Preceding states: {164}
[86] NonSetKind --> . 'list'
	Preceding states: {164}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {164}
[125] Expression --> . Allocation
	Preceding states: {164}
[126] Expression --> . Expression 'as' Type
	Preceding states: {164}
[127] Expression --> . '$' Expression
	Preceding states: {164}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {164}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {164}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {164}
[136] UntypedExpression --> . Literal
	Preceding states: {164}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {164}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {164}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {164}
[139] UntypedExpression --> Expression '!' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {164}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {164}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {164}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {164}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {164}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {164}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {164}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {164}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {164}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {164}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {164}
[151] UntypedExpression --> . Sequence
	Preceding states: {164}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {164}
[153] UntypedExpression --> . Comprehension
	Preceding states: {164}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {164}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {164}
[156] Literal --> . 'INT'
	Preceding states: {164}
[157] Literal --> . 'CHAR'
	Preceding states: {164}
[158] Literal --> . 'REAL'
	Preceding states: {164}
[159] Literal --> . 'STRING'
	Preceding states: {164}
[160] Literal --> . 'true'
	Preceding states: {164}
[161] Literal --> . 'false'
	Preceding states: {164}
[162] Literal --> . 'null'
	Preceding states: {164}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {164}
[164] TupleExpression --> . TupleProjection
	Preceding states: {164}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {164}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {164}
[179] OperatorExpression --> . Operator
	Preceding states: {164}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {164}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {164}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {164}
[191] Location --> . 'ID'
	Preceding states: {164}
[192] Location --> . TupleProjection
	Preceding states: {164}
[193] Location --> . ArraySlotExpression
	Preceding states: {164}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {164}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {164}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {164}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {164}
-----------------------------
With Expression, go to state 184
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 165
=============================
[144] UntypedExpression --> Expression Arguments .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 166
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {166}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {166}
[5] Operator --> . '_OPERATOR'
	Preceding states: {166}
[40] Operator --> . 'ID'
	Preceding states: {166}
[150] UntypedExpression --> Expression '.' . Member
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[194] Location --> Expression '.' . 'ID'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[195] Member --> . 'ID'
	Preceding states: {166}
[196] Member --> . Operator Arguments
	Preceding states: {166}
-----------------------------
With Member, go to state 180
With 'ID', go to state 181
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With Operator, go to state 182

=============================
STATE NUMBER: 167
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {167}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {167}
[5] Operator --> . '_OPERATOR'
	Preceding states: {167}
[40] Operator --> . 'ID'
	Preceding states: {167}
[82] CollectionKind --> . SetKind
	Preceding states: {167}
[83] CollectionKind --> . NonSetKind
	Preceding states: {167}
[84] SetKind --> . 'set'
	Preceding states: {167}
[85] NonSetKind --> . 'bag'
	Preceding states: {167}
[86] NonSetKind --> . 'list'
	Preceding states: {167}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {167}
[125] Expression --> . Allocation
	Preceding states: {167}
[126] Expression --> . Expression 'as' Type
	Preceding states: {167}
[127] Expression --> . '$' Expression
	Preceding states: {167}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {167}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {167}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {167}
[136] UntypedExpression --> . Literal
	Preceding states: {167}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {167}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {167}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {167}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {167}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {167}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {167}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {167}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {167}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {167}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {167}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {167}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {167}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {167}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {167}
[151] UntypedExpression --> . Sequence
	Preceding states: {167}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {167}
[153] UntypedExpression --> . Comprehension
	Preceding states: {167}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {167}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {167}
[156] Literal --> . 'INT'
	Preceding states: {167}
[157] Literal --> . 'CHAR'
	Preceding states: {167}
[158] Literal --> . 'REAL'
	Preceding states: {167}
[159] Literal --> . 'STRING'
	Preceding states: {167}
[160] Literal --> . 'true'
	Preceding states: {167}
[161] Literal --> . 'false'
	Preceding states: {167}
[162] Literal --> . 'null'
	Preceding states: {167}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {167}
[164] TupleExpression --> . TupleProjection
	Preceding states: {167}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {167}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {167}
[178] ArraySlotExpression --> Expression '[' . Expression ']'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {']'}
[179] OperatorExpression --> . Operator
	Preceding states: {167}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {167}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {167}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {167}
[191] Location --> . 'ID'
	Preceding states: {167}
[192] Location --> . TupleProjection
	Preceding states: {167}
[193] Location --> . ArraySlotExpression
	Preceding states: {167}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {167}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {167}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {167}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {167}
-----------------------------
With Expression, go to state 178
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 168
=============================
[181] OperatorExpression --> Expression '_OPERATOR' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 169
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {169}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {169}
[5] Operator --> . '_OPERATOR'
	Preceding states: {169}
[40] Operator --> . 'ID'
	Preceding states: {169}
[82] CollectionKind --> . SetKind
	Preceding states: {169}
[83] CollectionKind --> . NonSetKind
	Preceding states: {169}
[84] SetKind --> . 'set'
	Preceding states: {169}
[85] NonSetKind --> . 'bag'
	Preceding states: {169}
[86] NonSetKind --> . 'list'
	Preceding states: {169}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {169}
[125] Expression --> . Allocation
	Preceding states: {169}
[126] Expression --> . Expression 'as' Type
	Preceding states: {169}
[127] Expression --> . '$' Expression
	Preceding states: {169}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {169}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {169}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {169}
[136] UntypedExpression --> . Literal
	Preceding states: {169}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {169}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {169}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {169}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {169}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {169}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {169}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {169}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {169}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {169}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {169}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {169}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {169}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {169}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {169}
[151] UntypedExpression --> . Sequence
	Preceding states: {169}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {169}
[153] UntypedExpression --> . Comprehension
	Preceding states: {169}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {169}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {169}
[156] Literal --> . 'INT'
	Preceding states: {169}
[157] Literal --> . 'CHAR'
	Preceding states: {169}
[158] Literal --> . 'REAL'
	Preceding states: {169}
[159] Literal --> . 'STRING'
	Preceding states: {169}
[160] Literal --> . 'true'
	Preceding states: {169}
[161] Literal --> . 'false'
	Preceding states: {169}
[162] Literal --> . 'null'
	Preceding states: {169}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {169}
[164] TupleExpression --> . TupleProjection
	Preceding states: {169}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {169}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {169}
[179] OperatorExpression --> . Operator
	Preceding states: {169}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {169}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {169}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {169}
[182] OperatorExpression --> Expression '_OPERATOR_' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[191] Location --> . 'ID'
	Preceding states: {169}
[192] Location --> . TupleProjection
	Preceding states: {169}
[193] Location --> . ArraySlotExpression
	Preceding states: {169}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {169}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {169}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {169}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {169}
-----------------------------
With Expression, go to state 177
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 170
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {170}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {170}
[5] Operator --> . '_OPERATOR'
	Preceding states: {170}
[40] Operator --> . 'ID'
	Preceding states: {170}
[82] CollectionKind --> . SetKind
	Preceding states: {170}
[83] CollectionKind --> . NonSetKind
	Preceding states: {170}
[84] SetKind --> . 'set'
	Preceding states: {170}
[85] NonSetKind --> . 'bag'
	Preceding states: {170}
[86] NonSetKind --> . 'list'
	Preceding states: {170}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {170}
[125] Expression --> . Allocation
	Preceding states: {170}
[126] Expression --> . Expression 'as' Type
	Preceding states: {170}
[127] Expression --> . '$' Expression
	Preceding states: {170}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {170}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {170}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {170}
[136] UntypedExpression --> . Literal
	Preceding states: {170}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {170}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {170}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {170}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {170}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {170}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {170}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {170}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {170}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {170}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {170}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {170}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {170}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {170}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {170}
[151] UntypedExpression --> . Sequence
	Preceding states: {170}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {170}
[153] UntypedExpression --> . Comprehension
	Preceding states: {170}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {170}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {170}
[156] Literal --> . 'INT'
	Preceding states: {170}
[157] Literal --> . 'CHAR'
	Preceding states: {170}
[158] Literal --> . 'REAL'
	Preceding states: {170}
[159] Literal --> . 'STRING'
	Preceding states: {170}
[160] Literal --> . 'true'
	Preceding states: {170}
[161] Literal --> . 'false'
	Preceding states: {170}
[162] Literal --> . 'null'
	Preceding states: {170}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {170}
[164] TupleExpression --> . TupleProjection
	Preceding states: {170}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {170}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {170}
[179] OperatorExpression --> . Operator
	Preceding states: {170}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {170}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {170}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {170}
[183] Arguments --> '(' . Expressions_opt ')'
	Preceding states: {17, 162, 172, 175, 177, 178, 182, 184, 207, 247, 256, 258, 264, 267, 273, 276, 279, 290, 293, 295, 297, 299, 305, 307, 316, 318, 325, 328, 330, 333, 342, 368, 369, 372}
	Follow set: {')'}
[184] Expressions_opt --> .
	Preceding states: {170}
	Lookahead set: {')'}
[185] Expressions_opt --> . Expressions
	Preceding states: {170}
[186] Expressions --> . Expression
	Preceding states: {170}
[187] Expressions --> . Expressions ',' Expression
	Preceding states: {170}
[191] Location --> . 'ID'
	Preceding states: {170}
[192] Location --> . TupleProjection
	Preceding states: {170}
[193] Location --> . ArraySlotExpression
	Preceding states: {170}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {170}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {170}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {170}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {170}
-----------------------------
With Expressions_opt, go to state 171
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 172
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Expressions, go to state 173
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 171
=============================
[183] Arguments --> '(' Expressions_opt . ')'
	Preceding states: {17, 162, 172, 175, 177, 178, 182, 184, 207, 247, 256, 258, 264, 267, 273, 276, 279, 290, 293, 295, 297, 299, 305, 307, 316, 318, 325, 328, 330, 333, 342, 368, 369, 372}
-----------------------------
With ')', go to state 176

=============================
STATE NUMBER: 172
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {24, 44, 170, 345, 355}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {24, 44, 170, 345, 355}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {24, 44, 170, 345, 355}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', '(', ')', '}', ':', ',', '!', ']#'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {24, 44, 170, 345, 355}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {24, 44, 170, 345, 355}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {24, 44, 170, 345, 355}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {24, 44, 170, 345, 355}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {172}
[186] Expressions --> Expression .
	Preceding states: {24, 44, 170, 345, 355}
	Lookahead set: {'>', ')', '}', ',', ']#'}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {24, 44, 170, 345, 355}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 173
=============================
[185] Expressions_opt --> Expressions .
	Preceding states: {44, 170, 345, 355}
	Lookahead set: {'>', ')', '}'}
[187] Expressions --> Expressions . ',' Expression
	Preceding states: {44, 170, 345, 355}
-----------------------------
With ',', go to state 174

=============================
STATE NUMBER: 174
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {174}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {174}
[5] Operator --> . '_OPERATOR'
	Preceding states: {174}
[40] Operator --> . 'ID'
	Preceding states: {174}
[82] CollectionKind --> . SetKind
	Preceding states: {174}
[83] CollectionKind --> . NonSetKind
	Preceding states: {174}
[84] SetKind --> . 'set'
	Preceding states: {174}
[85] NonSetKind --> . 'bag'
	Preceding states: {174}
[86] NonSetKind --> . 'list'
	Preceding states: {174}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {174}
[125] Expression --> . Allocation
	Preceding states: {174}
[126] Expression --> . Expression 'as' Type
	Preceding states: {174}
[127] Expression --> . '$' Expression
	Preceding states: {174}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {174}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {174}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {174}
[136] UntypedExpression --> . Literal
	Preceding states: {174}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {174}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {174}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {174}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {174}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {174}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {174}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {174}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {174}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {174}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {174}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {174}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {174}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {174}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {174}
[151] UntypedExpression --> . Sequence
	Preceding states: {174}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {174}
[153] UntypedExpression --> . Comprehension
	Preceding states: {174}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {174}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {174}
[156] Literal --> . 'INT'
	Preceding states: {174}
[157] Literal --> . 'CHAR'
	Preceding states: {174}
[158] Literal --> . 'REAL'
	Preceding states: {174}
[159] Literal --> . 'STRING'
	Preceding states: {174}
[160] Literal --> . 'true'
	Preceding states: {174}
[161] Literal --> . 'false'
	Preceding states: {174}
[162] Literal --> . 'null'
	Preceding states: {174}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {174}
[164] TupleExpression --> . TupleProjection
	Preceding states: {174}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {174}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {174}
[179] OperatorExpression --> . Operator
	Preceding states: {174}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {174}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {174}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {174}
[187] Expressions --> Expressions ',' . Expression
	Preceding states: {24, 44, 170, 345, 355}
	Follow set: {'>', ')', '}', ',', ']#'}
[191] Location --> . 'ID'
	Preceding states: {174}
[192] Location --> . TupleProjection
	Preceding states: {174}
[193] Location --> . ArraySlotExpression
	Preceding states: {174}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {174}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {174}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {174}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {174}
-----------------------------
With Expression, go to state 175
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 175
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {174}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {174}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {174}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', '(', ')', '}', ':', ',', '!', ']#'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {174}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {174}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {174}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {174}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {175}
[187] Expressions --> Expressions ',' Expression .
	Preceding states: {24, 44, 170, 345, 355}
	Lookahead set: {'>', ')', '}', ',', ']#'}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {174}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 176
=============================
[183] Arguments --> '(' Expressions_opt ')' .
	Preceding states: {17, 162, 172, 175, 177, 178, 182, 184, 207, 247, 256, 258, 264, 267, 273, 276, 279, 290, 293, 295, 297, 299, 305, 307, 316, 318, 325, 328, 330, 333, 342, 368, 369, 372}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 177
=============================
This state has dynamic actions:
	
{0:[S169, R182],1:[S168, R182],2:[S163, R182],3:[S166, R182],4:[S167, R182],5:[S164, R182],6:[R182, S170]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {169}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {169}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {169}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {169}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {169}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {169}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {169}
[182] OperatorExpression --> Expression '_OPERATOR_' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {177}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {169}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 178
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {167}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {167}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {167}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', ']', '(', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {167}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {167}
[178] ArraySlotExpression --> Expression '[' Expression . ']'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {167}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {167}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {178}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {167}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With ']', go to state 179
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 179
=============================
[178] ArraySlotExpression --> Expression '[' Expression ']' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 180
=============================
[150] UntypedExpression --> Expression '.' Member .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 181
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R40	over R195, 	on input '('
-----------------------------
[40] Operator --> 'ID' .
	Preceding states: {166}
	Lookahead set: {'('}
[194] Location --> Expression '.' 'ID' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'='}
[195] Member --> 'ID' .
	Preceding states: {166}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 182
=============================
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {182}
[196] Member --> Operator . Arguments
	Preceding states: {166}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------
With Arguments, go to state 183
With '(', go to state 170

=============================
STATE NUMBER: 183
=============================
[196] Member --> Operator Arguments .
	Preceding states: {166}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 184
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R139, 	on input 'as'
Resolved   E/R conflict: choosing E	over R139, 	on input '!'
Resolved   S/R conflict: choosing S166	over R139, 	on input '.'
Resolved   S/R conflict: choosing S167	over R139, 	on input '['
Resolved   S/R conflict: choosing S170	over R139, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R139, S168],1:[R139, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {164}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {164}
[139] UntypedExpression --> Expression '!' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {164}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {164}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {164}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {164}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {164}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {184}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {164}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 185
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S109	over R126, 	on input '['
-----------------------------
[65] FunctionType --> Type . '->' Type
	Preceding states: {163}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {163}
[126] Expression --> Expression 'as' Type .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 186
=============================
[105] MemberDeclaration --> 'ID' Typing Initialization_opt ';' .
	Preceding states: {70}
	Lookahead set: {'ID', '}', 'method'}
-----------------------------

=============================
STATE NUMBER: 187
=============================
[34] StructureOrClassDeclaration --> 'class' 'ID' $ACTION10$ TypeParameters_opt Interface Implementation_opt .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 188
=============================
[110] Implementation_opt --> '{' . Definitions_opt '}'
	Preceding states: {68}
	Follow set: {'}'}
[111] Definitions_opt --> .
	Preceding states: {188}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID', '}'}
[112] Definitions_opt --> . Definitions_opt Definition ';'
	Preceding states: {188}
-----------------------------
With Definitions_opt, go to state 189

=============================
STATE NUMBER: 189
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {189}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {189}
[5] Operator --> . '_OPERATOR'
	Preceding states: {189}
[40] Operator --> . 'ID'
	Preceding states: {189}
[110] Implementation_opt --> '{' Definitions_opt . '}'
	Preceding states: {68}
[112] Definitions_opt --> Definitions_opt . Definition ';'
	Preceding states: {188}
	Follow set: {';'}
[113] Definition --> . Operator FunctionParameters_opt Typing_opt '=' Expression
	Preceding states: {189}
-----------------------------
With '}', go to state 190
With Definition, go to state 191
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77
With Operator, go to state 192

=============================
STATE NUMBER: 190
=============================
[110] Implementation_opt --> '{' Definitions_opt '}' .
	Preceding states: {68}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 191
=============================
[112] Definitions_opt --> Definitions_opt Definition . ';'
	Preceding states: {188}
-----------------------------
With ';', go to state 208

=============================
STATE NUMBER: 192
=============================
[113] Definition --> Operator . FunctionParameters_opt Typing_opt '=' Expression
	Preceding states: {55, 189, 220}
	Follow set: {'=', ':'}
[114] FunctionParameters_opt --> .
	Preceding states: {192}
	Lookahead set: {'=', ':'}
[115] FunctionParameters_opt --> . FunctionParameters
	Preceding states: {192}
[116] FunctionParameters --> . '(' Parameters_opt ')'
	Preceding states: {192}
-----------------------------
With FunctionParameters_opt, go to state 193
With FunctionParameters, go to state 194
With '(', go to state 195

=============================
STATE NUMBER: 193
=============================
[41] Typing_opt --> .
	Preceding states: {193}
	Lookahead set: {'='}
[42] Typing_opt --> . Typing
	Preceding states: {193}
[43] Typing --> . ':' Type
	Preceding states: {193}
[113] Definition --> Operator FunctionParameters_opt . Typing_opt '=' Expression
	Preceding states: {55, 189, 220}
	Follow set: {'='}
-----------------------------
With Typing_opt, go to state 205
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 194
=============================
[115] FunctionParameters_opt --> FunctionParameters .
	Preceding states: {192}
	Lookahead set: {'=', ':'}
-----------------------------

=============================
STATE NUMBER: 195
=============================
[116] FunctionParameters --> '(' . Parameters_opt ')'
	Preceding states: {27, 192}
	Follow set: {')'}
[117] Parameters_opt --> .
	Preceding states: {195}
	Lookahead set: {')'}
[118] Parameters_opt --> . Parameters
	Preceding states: {195}
[119] Parameters --> . Parameter
	Preceding states: {195}
[120] Parameters --> . Parameters ',' Parameter
	Preceding states: {195}
[121] Parameter --> . 'ID' Typing_opt
	Preceding states: {195}
-----------------------------
With Parameters_opt, go to state 196
With Parameters, go to state 197
With Parameter, go to state 198
With 'ID', go to state 199

=============================
STATE NUMBER: 196
=============================
[116] FunctionParameters --> '(' Parameters_opt . ')'
	Preceding states: {27, 192}
-----------------------------
With ')', go to state 204

=============================
STATE NUMBER: 197
=============================
[118] Parameters_opt --> Parameters .
	Preceding states: {195}
	Lookahead set: {')'}
[120] Parameters --> Parameters . ',' Parameter
	Preceding states: {195}
-----------------------------
With ',', go to state 202

=============================
STATE NUMBER: 198
=============================
[119] Parameters --> Parameter .
	Preceding states: {195}
	Lookahead set: {')', ','}
-----------------------------

=============================
STATE NUMBER: 199
=============================
[41] Typing_opt --> .
	Preceding states: {199}
	Lookahead set: {')', ';', '=', ','}
[42] Typing_opt --> . Typing
	Preceding states: {199}
[43] Typing --> . ':' Type
	Preceding states: {199}
[121] Parameter --> 'ID' . Typing_opt
	Preceding states: {31, 195, 202, 308}
	Follow set: {')', ';', '=', ','}
-----------------------------
With Typing_opt, go to state 200
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 200
=============================
[121] Parameter --> 'ID' Typing_opt .
	Preceding states: {31, 195, 202, 308}
	Lookahead set: {')', ';', '=', ','}
-----------------------------

=============================
STATE NUMBER: 201
=============================
[42] Typing_opt --> Typing .
	Preceding states: {15, 193, 199, 317, 326, 335, 351, 366}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 202
=============================
[120] Parameters --> Parameters ',' . Parameter
	Preceding states: {195}
	Follow set: {')', ','}
[121] Parameter --> . 'ID' Typing_opt
	Preceding states: {202}
-----------------------------
With Parameter, go to state 203
With 'ID', go to state 199

=============================
STATE NUMBER: 203
=============================
[120] Parameters --> Parameters ',' Parameter .
	Preceding states: {195}
	Lookahead set: {')', ','}
-----------------------------

=============================
STATE NUMBER: 204
=============================
[116] FunctionParameters --> '(' Parameters_opt ')' .
	Preceding states: {27, 192}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '=', '{', ':', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 205
=============================
[113] Definition --> Operator FunctionParameters_opt Typing_opt . '=' Expression
	Preceding states: {55, 189, 220}
-----------------------------
With '=', go to state 206

=============================
STATE NUMBER: 206
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {206}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {206}
[5] Operator --> . '_OPERATOR'
	Preceding states: {206}
[40] Operator --> . 'ID'
	Preceding states: {206}
[82] CollectionKind --> . SetKind
	Preceding states: {206}
[83] CollectionKind --> . NonSetKind
	Preceding states: {206}
[84] SetKind --> . 'set'
	Preceding states: {206}
[85] NonSetKind --> . 'bag'
	Preceding states: {206}
[86] NonSetKind --> . 'list'
	Preceding states: {206}
[113] Definition --> Operator FunctionParameters_opt Typing_opt '=' . Expression
	Preceding states: {55, 189, 220}
	Follow set: {';'}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {206}
[125] Expression --> . Allocation
	Preceding states: {206}
[126] Expression --> . Expression 'as' Type
	Preceding states: {206}
[127] Expression --> . '$' Expression
	Preceding states: {206}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {206}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {206}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {206}
[136] UntypedExpression --> . Literal
	Preceding states: {206}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {206}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {206}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {206}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {206}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {206}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {206}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {206}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {206}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {206}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {206}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {206}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {206}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {206}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {206}
[151] UntypedExpression --> . Sequence
	Preceding states: {206}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {206}
[153] UntypedExpression --> . Comprehension
	Preceding states: {206}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {206}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {206}
[156] Literal --> . 'INT'
	Preceding states: {206}
[157] Literal --> . 'CHAR'
	Preceding states: {206}
[158] Literal --> . 'REAL'
	Preceding states: {206}
[159] Literal --> . 'STRING'
	Preceding states: {206}
[160] Literal --> . 'true'
	Preceding states: {206}
[161] Literal --> . 'false'
	Preceding states: {206}
[162] Literal --> . 'null'
	Preceding states: {206}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {206}
[164] TupleExpression --> . TupleProjection
	Preceding states: {206}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {206}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {206}
[179] OperatorExpression --> . Operator
	Preceding states: {206}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {206}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {206}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {206}
[191] Location --> . 'ID'
	Preceding states: {206}
[192] Location --> . TupleProjection
	Preceding states: {206}
[193] Location --> . ArraySlotExpression
	Preceding states: {206}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {206}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {206}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {206}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {206}
-----------------------------
With Expression, go to state 207
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 207
=============================
[113] Definition --> Operator FunctionParameters_opt Typing_opt '=' Expression .
	Preceding states: {55, 189, 220}
	Lookahead set: {';'}
[126] Expression --> Expression . 'as' Type
	Preceding states: {206}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {206}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {206}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {206}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {206}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {206}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {206}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {207}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {206}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 208
=============================
[112] Definitions_opt --> Definitions_opt Definition ';' .
	Preceding states: {188}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'ID', '}'}
-----------------------------

=============================
STATE NUMBER: 209
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ . 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
-----------------------------
With 'ID', go to state 210

=============================
STATE NUMBER: 210
=============================
[31] $ACTION9$ --> .
	Preceding states: {210}
	Lookahead set: {'(', '{'}
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' . $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
	Follow set: {'(', '{'}
-----------------------------
With $ACTION9$, go to state 211

=============================
STATE NUMBER: 211
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ . TypeParameters_opt '{' NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
	Follow set: {'{'}
[98] TypeParameters_opt --> .
	Preceding states: {211}
	Lookahead set: {'{'}
[99] TypeParameters_opt --> . '(' TypeParameters ')'
	Preceding states: {211}
-----------------------------
With TypeParameters_opt, go to state 212
With '(', go to state 62

=============================
STATE NUMBER: 212
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt . '{' NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
-----------------------------
With '{', go to state 213

=============================
STATE NUMBER: 213
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' . NamedTupleTypeComponents '}'
	Preceding states: {2, 4}
	Follow set: {'}'}
[70] NamedTupleTypeComponents --> . NamedTupleTypeComponent
	Preceding states: {213}
[71] NamedTupleTypeComponents --> . NamedTupleTypeComponents ',' NamedTupleTypeComponent
	Preceding states: {213}
[72] NamedTupleTypeComponent --> . 'ID' Typing
	Preceding states: {213}
-----------------------------
With NamedTupleTypeComponents, go to state 214
With NamedTupleTypeComponent, go to state 133
With 'ID', go to state 139

=============================
STATE NUMBER: 214
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents . '}'
	Preceding states: {2, 4}
[71] NamedTupleTypeComponents --> NamedTupleTypeComponents . ',' NamedTupleTypeComponent
	Preceding states: {213}
-----------------------------
With '}', go to state 215
With ',', go to state 137

=============================
STATE NUMBER: 215
=============================
[32] StructureOrClassDeclaration --> 'structure' $ACTION8$ 'ID' $ACTION9$ TypeParameters_opt '{' NamedTupleTypeComponents '}' .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 216
=============================
[18] DefinitionStatement --> 'define' DefinitionKind . EOS
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[38] $ACTION11$ --> .
	Preceding states: {216}
	Lookahead set: {';'}
[39] EOS --> . $ACTION11$ ';'
	Preceding states: {216}
-----------------------------
With EOS, go to state 242
With $ACTION11$, go to state 243

=============================
STATE NUMBER: 217
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {217}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {217}
[5] Operator --> . '_OPERATOR'
	Preceding states: {217}
[20] DefinitionKind --> 'operator' . Operator 'SPECIFIER' 'INT'
	Preceding states: {55}
	Follow set: {'SPECIFIER'}
[40] Operator --> . 'ID'
	Preceding states: {217}
-----------------------------
With Operator, go to state 239
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77

=============================
STATE NUMBER: 218
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {218}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {218}
[5] Operator --> . '_OPERATOR'
	Preceding states: {218}
[21] DefinitionKind --> 'signature' . Operator Typing
	Preceding states: {55}
	Follow set: {':'}
[40] Operator --> . 'ID'
	Preceding states: {218}
-----------------------------
With Operator, go to state 237
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77

=============================
STATE NUMBER: 219
=============================
[22] $ACTION4$ --> .
	Preceding states: {219}
	Lookahead set: {'alias'}
[24] DefinitionKind --> 'type' . $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'alias'}
[25] $ACTION6$ --> .
	Preceding states: {219}
	Lookahead set: {'name'}
[27] DefinitionKind --> 'type' . $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'name'}
-----------------------------
With $ACTION4$, go to state 223
With $ACTION6$, go to state 224

=============================
STATE NUMBER: 220
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {220}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {220}
[5] Operator --> . '_OPERATOR'
	Preceding states: {220}
[28] DefinitionKind --> 'value' . Definition
	Preceding states: {55}
	Follow set: {';'}
[40] Operator --> . 'ID'
	Preceding states: {220}
[113] Definition --> . Operator FunctionParameters_opt Typing_opt '=' Expression
	Preceding states: {220}
-----------------------------
With Definition, go to state 222
With 'OPERATOR_', go to state 76
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 77
With Operator, go to state 192

=============================
STATE NUMBER: 221
=============================
[29] DefinitionKind --> Definition .
	Preceding states: {55}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 222
=============================
[28] DefinitionKind --> 'value' Definition .
	Preceding states: {55}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 223
=============================
[24] DefinitionKind --> 'type' $ACTION4$ . 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' Type
	Preceding states: {55}
-----------------------------
With 'alias', go to state 231

=============================
STATE NUMBER: 224
=============================
[27] DefinitionKind --> 'type' $ACTION6$ . 'name' 'ID' $ACTION7$ TypeParameters_opt '=' Type
	Preceding states: {55}
-----------------------------
With 'name', go to state 225

=============================
STATE NUMBER: 225
=============================
[27] DefinitionKind --> 'type' $ACTION6$ 'name' . 'ID' $ACTION7$ TypeParameters_opt '=' Type
	Preceding states: {55}
-----------------------------
With 'ID', go to state 226

=============================
STATE NUMBER: 226
=============================
[26] $ACTION7$ --> .
	Preceding states: {226}
	Lookahead set: {'(', '='}
[27] DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' . $ACTION7$ TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'(', '='}
-----------------------------
With $ACTION7$, go to state 227

=============================
STATE NUMBER: 227
=============================
[27] DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' $ACTION7$ . TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'='}
[98] TypeParameters_opt --> .
	Preceding states: {227}
	Lookahead set: {'='}
[99] TypeParameters_opt --> . '(' TypeParameters ')'
	Preceding states: {227}
-----------------------------
With TypeParameters_opt, go to state 228
With '(', go to state 62

=============================
STATE NUMBER: 228
=============================
[27] DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt . '=' Type
	Preceding states: {55}
-----------------------------
With '=', go to state 229

=============================
STATE NUMBER: 229
=============================
[27] DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt '=' . Type
	Preceding states: {55}
	Follow set: {';'}
[46] Type --> . TypeConstant
	Preceding states: {229}
[47] Type --> . FunctionType
	Preceding states: {229}
[48] Type --> . TupleType
	Preceding states: {229}
[49] Type --> . ArrayType
	Preceding states: {229}
[50] Type --> . CollectionType
	Preceding states: {229}
[51] Type --> . IntRangeType
	Preceding states: {229}
[52] Type --> . RealRangeType
	Preceding states: {229}
[53] Type --> . TypeTerm
	Preceding states: {229}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {229}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {229}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {229}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {229}
[59] TypeConstant --> . 'string'
	Preceding states: {229}
[60] PrimitiveType --> . 'void'
	Preceding states: {229}
[61] PrimitiveType --> . 'int'
	Preceding states: {229}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {229}
[63] PrimitiveType --> . 'char'
	Preceding states: {229}
[64] PrimitiveType --> . 'real'
	Preceding states: {229}
[65] FunctionType --> . Type '->' Type
	Preceding states: {229}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {229}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {229}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {229}
[80] CollectionType --> . SetType
	Preceding states: {229}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {229}
[84] SetKind --> . 'set'
	Preceding states: {229}
[85] NonSetKind --> . 'bag'
	Preceding states: {229}
[86] NonSetKind --> . 'list'
	Preceding states: {229}
[87] SetKind_opt --> .
	Preceding states: {229}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {229}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {229}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {229}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {229}
[92] TypeTerm --> . 'ID'
	Preceding states: {229}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {229}
-----------------------------
With Type, go to state 230
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 230
=============================
[27] DefinitionKind --> 'type' $ACTION6$ 'name' 'ID' $ACTION7$ TypeParameters_opt '=' Type .
	Preceding states: {55}
	Lookahead set: {';'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {229}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {229}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 231
=============================
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' . 'ID' $ACTION5$ TypeParameters_opt '=' Type
	Preceding states: {55}
-----------------------------
With 'ID', go to state 232

=============================
STATE NUMBER: 232
=============================
[23] $ACTION5$ --> .
	Preceding states: {232}
	Lookahead set: {'(', '='}
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' . $ACTION5$ TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'(', '='}
-----------------------------
With $ACTION5$, go to state 233

=============================
STATE NUMBER: 233
=============================
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ . TypeParameters_opt '=' Type
	Preceding states: {55}
	Follow set: {'='}
[98] TypeParameters_opt --> .
	Preceding states: {233}
	Lookahead set: {'='}
[99] TypeParameters_opt --> . '(' TypeParameters ')'
	Preceding states: {233}
-----------------------------
With TypeParameters_opt, go to state 234
With '(', go to state 62

=============================
STATE NUMBER: 234
=============================
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt . '=' Type
	Preceding states: {55}
-----------------------------
With '=', go to state 235

=============================
STATE NUMBER: 235
=============================
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' . Type
	Preceding states: {55}
	Follow set: {';'}
[46] Type --> . TypeConstant
	Preceding states: {235}
[47] Type --> . FunctionType
	Preceding states: {235}
[48] Type --> . TupleType
	Preceding states: {235}
[49] Type --> . ArrayType
	Preceding states: {235}
[50] Type --> . CollectionType
	Preceding states: {235}
[51] Type --> . IntRangeType
	Preceding states: {235}
[52] Type --> . RealRangeType
	Preceding states: {235}
[53] Type --> . TypeTerm
	Preceding states: {235}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {235}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {235}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {235}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {235}
[59] TypeConstant --> . 'string'
	Preceding states: {235}
[60] PrimitiveType --> . 'void'
	Preceding states: {235}
[61] PrimitiveType --> . 'int'
	Preceding states: {235}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {235}
[63] PrimitiveType --> . 'char'
	Preceding states: {235}
[64] PrimitiveType --> . 'real'
	Preceding states: {235}
[65] FunctionType --> . Type '->' Type
	Preceding states: {235}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {235}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {235}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {235}
[80] CollectionType --> . SetType
	Preceding states: {235}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {235}
[84] SetKind --> . 'set'
	Preceding states: {235}
[85] NonSetKind --> . 'bag'
	Preceding states: {235}
[86] NonSetKind --> . 'list'
	Preceding states: {235}
[87] SetKind_opt --> .
	Preceding states: {235}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {235}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {235}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {235}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {235}
[92] TypeTerm --> . 'ID'
	Preceding states: {235}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {235}
-----------------------------
With Type, go to state 236
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 89
With '[', go to state 90
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 99
With SetType, go to state 100
With NonSetKind, go to state 101
With SetKind_opt, go to state 102
With SetKind, go to state 103
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 104

=============================
STATE NUMBER: 236
=============================
[24] DefinitionKind --> 'type' $ACTION4$ 'alias' 'ID' $ACTION5$ TypeParameters_opt '=' Type .
	Preceding states: {55}
	Lookahead set: {';'}
[65] FunctionType --> Type . '->' Type
	Preceding states: {235}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {235}
-----------------------------
With '->', go to state 108
With '[', go to state 109

=============================
STATE NUMBER: 237
=============================
[21] DefinitionKind --> 'signature' Operator . Typing
	Preceding states: {55}
	Follow set: {';'}
[43] Typing --> . ':' Type
	Preceding states: {237}
-----------------------------
With Typing, go to state 238
With ':', go to state 79

=============================
STATE NUMBER: 238
=============================
[21] DefinitionKind --> 'signature' Operator Typing .
	Preceding states: {55}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 239
=============================
[20] DefinitionKind --> 'operator' Operator . 'SPECIFIER' 'INT'
	Preceding states: {55}
-----------------------------
With 'SPECIFIER', go to state 240

=============================
STATE NUMBER: 240
=============================
[20] DefinitionKind --> 'operator' Operator 'SPECIFIER' . 'INT'
	Preceding states: {55}
-----------------------------
With 'INT', go to state 241

=============================
STATE NUMBER: 241
=============================
[20] DefinitionKind --> 'operator' Operator 'SPECIFIER' 'INT' .
	Preceding states: {55}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 242
=============================
[18] DefinitionStatement --> 'define' DefinitionKind EOS .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 243
=============================
[39] EOS --> $ACTION11$ . ';'
	Preceding states: {216, 245, 248, 254, 370}
-----------------------------
With ';', go to state 244

=============================
STATE NUMBER: 244
=============================
[39] EOS --> $ACTION11$ ';' .
	Preceding states: {216, 245, 248, 254, 370}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 245
=============================
[16] Statement --> 'error' $ACTION3$ . EOS
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[38] $ACTION11$ --> .
	Preceding states: {245}
	Lookahead set: {';'}
[39] EOS --> . $ACTION11$ ';'
	Preceding states: {245}
-----------------------------
With EOS, go to state 246
With $ACTION11$, go to state 243

=============================
STATE NUMBER: 246
=============================
[16] Statement --> 'error' $ACTION3$ EOS .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 247
=============================
[11] $ACTION1$ --> .
	Preceding states: {247}
	Lookahead set: {';'}
[12] Statement --> '?' Expression . $ACTION1$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
[126] Expression --> Expression . 'as' Type
	Preceding states: {52}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {52}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {52}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {52}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {52}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {52}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {52}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {247}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {52}
-----------------------------
With $ACTION1$, go to state 248
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 248
=============================
[12] Statement --> '?' Expression $ACTION1$ . EOS
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[38] $ACTION11$ --> .
	Preceding states: {248}
	Lookahead set: {';'}
[39] EOS --> . $ACTION11$ ';'
	Preceding states: {248}
-----------------------------
With EOS, go to state 249
With $ACTION11$, go to state 243

=============================
STATE NUMBER: 249
=============================
[12] Statement --> '?' Expression $ACTION1$ EOS .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 250
=============================
[9] Statement --> '#' Pragma . PragmaArgument_opt $ACTION0$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
[36] PragmaArgument_opt --> .
	Preceding states: {250}
	Lookahead set: {';'}
[37] PragmaArgument_opt --> . 'STRING'
	Preceding states: {250}
-----------------------------
With PragmaArgument_opt, go to state 252
With 'STRING', go to state 253

=============================
STATE NUMBER: 251
=============================
[35] Pragma --> 'ID' .
	Preceding states: {50}
	Lookahead set: {'STRING', ';'}
-----------------------------

=============================
STATE NUMBER: 252
=============================
[8] $ACTION0$ --> .
	Preceding states: {252}
	Lookahead set: {';'}
[9] Statement --> '#' Pragma PragmaArgument_opt . $ACTION0$ EOS
	Preceding states: {2, 4}
	Follow set: {';'}
-----------------------------
With $ACTION0$, go to state 254

=============================
STATE NUMBER: 253
=============================
[37] PragmaArgument_opt --> 'STRING' .
	Preceding states: {250}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 254
=============================
[9] Statement --> '#' Pragma PragmaArgument_opt $ACTION0$ . EOS
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[38] $ACTION11$ --> .
	Preceding states: {254}
	Lookahead set: {';'}
[39] EOS --> . $ACTION11$ ';'
	Preceding states: {254}
-----------------------------
With EOS, go to state 255
With $ACTION11$, go to state 243

=============================
STATE NUMBER: 255
=============================
[9] Statement --> '#' Pragma PragmaArgument_opt $ACTION0$ EOS .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 256
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {49, 344}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {49, 344}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {49, 344}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {49, 344}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {49, 344}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {49, 344}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {49, 344}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {256}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {49, 344}
[202] Monoid --> '[' Expression . ',' Expression ']' InPlace_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With ',', go to state 257
With '(', go to state 170

=============================
STATE NUMBER: 257
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {257}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {257}
[5] Operator --> . '_OPERATOR'
	Preceding states: {257}
[40] Operator --> . 'ID'
	Preceding states: {257}
[82] CollectionKind --> . SetKind
	Preceding states: {257}
[83] CollectionKind --> . NonSetKind
	Preceding states: {257}
[84] SetKind --> . 'set'
	Preceding states: {257}
[85] NonSetKind --> . 'bag'
	Preceding states: {257}
[86] NonSetKind --> . 'list'
	Preceding states: {257}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {257}
[125] Expression --> . Allocation
	Preceding states: {257}
[126] Expression --> . Expression 'as' Type
	Preceding states: {257}
[127] Expression --> . '$' Expression
	Preceding states: {257}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {257}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {257}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {257}
[136] UntypedExpression --> . Literal
	Preceding states: {257}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {257}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {257}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {257}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {257}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {257}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {257}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {257}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {257}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {257}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {257}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {257}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {257}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {257}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {257}
[151] UntypedExpression --> . Sequence
	Preceding states: {257}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {257}
[153] UntypedExpression --> . Comprehension
	Preceding states: {257}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {257}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {257}
[156] Literal --> . 'INT'
	Preceding states: {257}
[157] Literal --> . 'CHAR'
	Preceding states: {257}
[158] Literal --> . 'REAL'
	Preceding states: {257}
[159] Literal --> . 'STRING'
	Preceding states: {257}
[160] Literal --> . 'true'
	Preceding states: {257}
[161] Literal --> . 'false'
	Preceding states: {257}
[162] Literal --> . 'null'
	Preceding states: {257}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {257}
[164] TupleExpression --> . TupleProjection
	Preceding states: {257}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {257}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {257}
[179] OperatorExpression --> . Operator
	Preceding states: {257}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {257}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {257}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {257}
[191] Location --> . 'ID'
	Preceding states: {257}
[192] Location --> . TupleProjection
	Preceding states: {257}
[193] Location --> . ArraySlotExpression
	Preceding states: {257}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {257}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {257}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {257}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {257}
[202] Monoid --> '[' Expression ',' . Expression ']' InPlace_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {']'}
-----------------------------
With Expression, go to state 258
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 258
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {257}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {257}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {257}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', ']', '(', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {257}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {257}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {257}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {257}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {258}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {257}
[202] Monoid --> '[' Expression ',' Expression . ']' InPlace_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With ']', go to state 259
With '(', go to state 170

=============================
STATE NUMBER: 259
=============================
[202] Monoid --> '[' Expression ',' Expression ']' . InPlace_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'{'}
[203] InPlace_opt --> .
	Preceding states: {259}
	Lookahead set: {'{'}
[204] InPlace_opt --> . '<'
	Preceding states: {259}
[205] InPlace_opt --> . '>'
	Preceding states: {259}
-----------------------------
With InPlace_opt, go to state 260
With '<', go to state 261
With '>', go to state 262

=============================
STATE NUMBER: 260
=============================
[202] Monoid --> '[' Expression ',' Expression ']' InPlace_opt .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 261
=============================
[204] InPlace_opt --> '<' .
	Preceding states: {259}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 262
=============================
[205] InPlace_opt --> '>' .
	Preceding states: {259}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 263
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {263}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {263}
[5] Operator --> . '_OPERATOR'
	Preceding states: {263}
[40] Operator --> . 'ID'
	Preceding states: {263}
[82] CollectionKind --> . SetKind
	Preceding states: {263}
[83] CollectionKind --> . NonSetKind
	Preceding states: {263}
[84] SetKind --> . 'set'
	Preceding states: {263}
[85] NonSetKind --> . 'bag'
	Preceding states: {263}
[86] NonSetKind --> . 'list'
	Preceding states: {263}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {263}
[125] Expression --> . Allocation
	Preceding states: {263}
[126] Expression --> . Expression 'as' Type
	Preceding states: {263}
[127] Expression --> . '$' Expression
	Preceding states: {263}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {263}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {263}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {263}
[136] UntypedExpression --> . Literal
	Preceding states: {263}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {263}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {263}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {263}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {263}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {263}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {263}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {263}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {263}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {263}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {263}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {263}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {263}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {263}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {263}
[151] UntypedExpression --> . Sequence
	Preceding states: {263}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {263}
[153] UntypedExpression --> . Comprehension
	Preceding states: {263}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {263}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {263}
[156] Literal --> . 'INT'
	Preceding states: {263}
[157] Literal --> . 'CHAR'
	Preceding states: {263}
[158] Literal --> . 'REAL'
	Preceding states: {263}
[159] Literal --> . 'STRING'
	Preceding states: {263}
[160] Literal --> . 'true'
	Preceding states: {263}
[161] Literal --> . 'false'
	Preceding states: {263}
[162] Literal --> . 'null'
	Preceding states: {263}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {263}
[164] TupleExpression --> . TupleProjection
	Preceding states: {263}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {263}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {263}
[179] OperatorExpression --> . Operator
	Preceding states: {263}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {263}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {263}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {263}
[191] Location --> . 'ID'
	Preceding states: {263}
[192] Location --> . TupleProjection
	Preceding states: {263}
[193] Location --> . ArraySlotExpression
	Preceding states: {263}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {263}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {263}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {263}
[201] Comprehension --> Monoid '{' . Expression '|' Qualifiers_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'|'}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {263}
-----------------------------
With Expression, go to state 264
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 264
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {263}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {263}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {263}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', '!', '|'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {263}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {263}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {263}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {263}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {264}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {263}
[201] Comprehension --> Monoid '{' Expression . '|' Qualifiers_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '|', go to state 265
With '(', go to state 170

=============================
STATE NUMBER: 265
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {265}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {265}
[5] Operator --> . '_OPERATOR'
	Preceding states: {265}
[40] Operator --> . 'ID'
	Preceding states: {265}
[82] CollectionKind --> . SetKind
	Preceding states: {265}
[83] CollectionKind --> . NonSetKind
	Preceding states: {265}
[84] SetKind --> . 'set'
	Preceding states: {265}
[85] NonSetKind --> . 'bag'
	Preceding states: {265}
[86] NonSetKind --> . 'list'
	Preceding states: {265}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {265}
[125] Expression --> . Allocation
	Preceding states: {265}
[126] Expression --> . Expression 'as' Type
	Preceding states: {265}
[127] Expression --> . '$' Expression
	Preceding states: {265}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {265}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {265}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {265}
[136] UntypedExpression --> . Literal
	Preceding states: {265}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {265}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {265}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {265}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {265}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {265}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {265}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {265}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {265}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {265}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {265}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {265}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {265}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {265}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {265}
[151] UntypedExpression --> . Sequence
	Preceding states: {265}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {265}
[153] UntypedExpression --> . Comprehension
	Preceding states: {265}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {265}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {265}
[156] Literal --> . 'INT'
	Preceding states: {265}
[157] Literal --> . 'CHAR'
	Preceding states: {265}
[158] Literal --> . 'REAL'
	Preceding states: {265}
[159] Literal --> . 'STRING'
	Preceding states: {265}
[160] Literal --> . 'true'
	Preceding states: {265}
[161] Literal --> . 'false'
	Preceding states: {265}
[162] Literal --> . 'null'
	Preceding states: {265}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {265}
[164] TupleExpression --> . TupleProjection
	Preceding states: {265}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {265}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {265}
[179] OperatorExpression --> . Operator
	Preceding states: {265}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {265}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {265}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {265}
[191] Location --> . 'ID'
	Preceding states: {265}
[192] Location --> . TupleProjection
	Preceding states: {265}
[193] Location --> . ArraySlotExpression
	Preceding states: {265}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {265}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {265}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {265}
[201] Comprehension --> Monoid '{' Expression '|' . Qualifiers_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'}'}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {265}
[206] Qualifiers_opt --> .
	Preceding states: {265}
	Lookahead set: {'}'}
[207] Qualifiers_opt --> . Qualifiers
	Preceding states: {265}
[208] Qualifiers --> . Qualifier
	Preceding states: {265}
[209] Qualifiers --> . Qualifiers ',' Qualifier
	Preceding states: {265}
[210] Qualifier --> . Expression
	Preceding states: {265}
[211] Qualifier --> . Expression '<-' Expression
	Preceding states: {265}
-----------------------------
With Qualifiers_opt, go to state 266
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 267
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49
With Qualifiers, go to state 268
With Qualifier, go to state 269

=============================
STATE NUMBER: 266
=============================
[201] Comprehension --> Monoid '{' Expression '|' Qualifiers_opt . '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '}', go to state 274

=============================
STATE NUMBER: 267
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {265, 270, 301}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {265, 270, 301}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {265, 270, 301}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ')', '}', ':', ',', '!', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {265, 270, 301}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {265, 270, 301}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {265, 270, 301}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {265, 270, 301}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {267}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {265, 270, 301}
[210] Qualifier --> Expression .
	Preceding states: {265, 270, 301}
	Lookahead set: {')', '}', ','}
[211] Qualifier --> Expression . '<-' Expression
	Preceding states: {265, 270, 301}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '<-', go to state 272
With '(', go to state 170

=============================
STATE NUMBER: 268
=============================
[207] Qualifiers_opt --> Qualifiers .
	Preceding states: {265, 301}
	Lookahead set: {')', '}'}
[209] Qualifiers --> Qualifiers . ',' Qualifier
	Preceding states: {265, 301}
-----------------------------
With ',', go to state 270

=============================
STATE NUMBER: 269
=============================
[208] Qualifiers --> Qualifier .
	Preceding states: {265, 301}
	Lookahead set: {')', '}', ','}
-----------------------------

=============================
STATE NUMBER: 270
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {270}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {270}
[5] Operator --> . '_OPERATOR'
	Preceding states: {270}
[40] Operator --> . 'ID'
	Preceding states: {270}
[82] CollectionKind --> . SetKind
	Preceding states: {270}
[83] CollectionKind --> . NonSetKind
	Preceding states: {270}
[84] SetKind --> . 'set'
	Preceding states: {270}
[85] NonSetKind --> . 'bag'
	Preceding states: {270}
[86] NonSetKind --> . 'list'
	Preceding states: {270}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {270}
[125] Expression --> . Allocation
	Preceding states: {270}
[126] Expression --> . Expression 'as' Type
	Preceding states: {270}
[127] Expression --> . '$' Expression
	Preceding states: {270}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {270}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {270}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {270}
[136] UntypedExpression --> . Literal
	Preceding states: {270}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {270}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {270}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {270}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {270}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {270}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {270}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {270}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {270}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {270}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {270}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {270}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {270}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {270}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {270}
[151] UntypedExpression --> . Sequence
	Preceding states: {270}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {270}
[153] UntypedExpression --> . Comprehension
	Preceding states: {270}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {270}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {270}
[156] Literal --> . 'INT'
	Preceding states: {270}
[157] Literal --> . 'CHAR'
	Preceding states: {270}
[158] Literal --> . 'REAL'
	Preceding states: {270}
[159] Literal --> . 'STRING'
	Preceding states: {270}
[160] Literal --> . 'true'
	Preceding states: {270}
[161] Literal --> . 'false'
	Preceding states: {270}
[162] Literal --> . 'null'
	Preceding states: {270}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {270}
[164] TupleExpression --> . TupleProjection
	Preceding states: {270}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {270}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {270}
[179] OperatorExpression --> . Operator
	Preceding states: {270}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {270}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {270}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {270}
[191] Location --> . 'ID'
	Preceding states: {270}
[192] Location --> . TupleProjection
	Preceding states: {270}
[193] Location --> . ArraySlotExpression
	Preceding states: {270}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {270}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {270}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {270}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {270}
[209] Qualifiers --> Qualifiers ',' . Qualifier
	Preceding states: {265, 301}
	Follow set: {')', '}', ','}
[210] Qualifier --> . Expression
	Preceding states: {270}
[211] Qualifier --> . Expression '<-' Expression
	Preceding states: {270}
-----------------------------
With Qualifier, go to state 271
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 267
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 271
=============================
[209] Qualifiers --> Qualifiers ',' Qualifier .
	Preceding states: {265, 301}
	Lookahead set: {')', '}', ','}
-----------------------------

=============================
STATE NUMBER: 272
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {272}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {272}
[5] Operator --> . '_OPERATOR'
	Preceding states: {272}
[40] Operator --> . 'ID'
	Preceding states: {272}
[82] CollectionKind --> . SetKind
	Preceding states: {272}
[83] CollectionKind --> . NonSetKind
	Preceding states: {272}
[84] SetKind --> . 'set'
	Preceding states: {272}
[85] NonSetKind --> . 'bag'
	Preceding states: {272}
[86] NonSetKind --> . 'list'
	Preceding states: {272}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {272}
[125] Expression --> . Allocation
	Preceding states: {272}
[126] Expression --> . Expression 'as' Type
	Preceding states: {272}
[127] Expression --> . '$' Expression
	Preceding states: {272}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {272}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {272}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {272}
[136] UntypedExpression --> . Literal
	Preceding states: {272}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {272}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {272}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {272}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {272}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {272}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {272}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {272}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {272}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {272}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {272}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {272}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {272}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {272}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {272}
[151] UntypedExpression --> . Sequence
	Preceding states: {272}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {272}
[153] UntypedExpression --> . Comprehension
	Preceding states: {272}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {272}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {272}
[156] Literal --> . 'INT'
	Preceding states: {272}
[157] Literal --> . 'CHAR'
	Preceding states: {272}
[158] Literal --> . 'REAL'
	Preceding states: {272}
[159] Literal --> . 'STRING'
	Preceding states: {272}
[160] Literal --> . 'true'
	Preceding states: {272}
[161] Literal --> . 'false'
	Preceding states: {272}
[162] Literal --> . 'null'
	Preceding states: {272}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {272}
[164] TupleExpression --> . TupleProjection
	Preceding states: {272}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {272}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {272}
[179] OperatorExpression --> . Operator
	Preceding states: {272}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {272}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {272}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {272}
[191] Location --> . 'ID'
	Preceding states: {272}
[192] Location --> . TupleProjection
	Preceding states: {272}
[193] Location --> . ArraySlotExpression
	Preceding states: {272}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {272}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {272}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {272}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {272}
[211] Qualifier --> Expression '<-' . Expression
	Preceding states: {265, 270, 301}
	Follow set: {')', '}', ','}
-----------------------------
With Expression, go to state 273
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 273
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {272}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {272}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {272}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ')', '}', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {272}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {272}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {272}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {272}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {273}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {272}
[211] Qualifier --> Expression '<-' Expression .
	Preceding states: {265, 270, 301}
	Lookahead set: {')', '}', ','}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 274
=============================
[201] Comprehension --> Monoid '{' Expression '|' Qualifiers_opt '}' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 275
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {275}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {275}
[5] Operator --> . '_OPERATOR'
	Preceding states: {275}
[40] Operator --> . 'ID'
	Preceding states: {275}
[82] CollectionKind --> . SetKind
	Preceding states: {275}
[83] CollectionKind --> . NonSetKind
	Preceding states: {275}
[84] SetKind --> . 'set'
	Preceding states: {275}
[85] NonSetKind --> . 'bag'
	Preceding states: {275}
[86] NonSetKind --> . 'list'
	Preceding states: {275}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {275}
[125] Expression --> . Allocation
	Preceding states: {275}
[126] Expression --> . Expression 'as' Type
	Preceding states: {275}
[127] Expression --> . '$' Expression
	Preceding states: {275}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {275}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {275}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {275}
[136] UntypedExpression --> . Literal
	Preceding states: {275}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {275}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {275}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {275}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {275}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {275}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {275}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {275}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {275}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {275}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {275}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {275}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {275}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {275}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {275}
[151] UntypedExpression --> . Sequence
	Preceding states: {275}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {275}
[153] UntypedExpression --> . Comprehension
	Preceding states: {275}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {275}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {275}
[156] Literal --> . 'INT'
	Preceding states: {275}
[157] Literal --> . 'CHAR'
	Preceding states: {275}
[158] Literal --> . 'REAL'
	Preceding states: {275}
[159] Literal --> . 'STRING'
	Preceding states: {275}
[160] Literal --> . 'true'
	Preceding states: {275}
[161] Literal --> . 'false'
	Preceding states: {275}
[162] Literal --> . 'null'
	Preceding states: {275}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {275}
[164] TupleExpression --> . TupleProjection
	Preceding states: {275}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {275}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {275}
[179] OperatorExpression --> . Operator
	Preceding states: {275}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {275}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {275}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {275}
[191] Location --> . 'ID'
	Preceding states: {275}
[192] Location --> . TupleProjection
	Preceding states: {275}
[193] Location --> . ArraySlotExpression
	Preceding states: {275}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {275}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {275}
[197] Sequence --> '{' ExpressionSequence_opt . '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[200] ExpressionSequence_opt --> ExpressionSequence_opt . Expression ';'
	Preceding states: {47}
	Follow set: {';'}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {275}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {275}
-----------------------------
With '}', go to state 278
With Expression, go to state 279
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 276
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {47}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {47}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {47}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {47}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {47}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {47}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {47}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {276}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {47}
[199] ExpressionSequence_opt --> Expression . ';'
	Preceding states: {47}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With ';', go to state 277
With '(', go to state 170

=============================
STATE NUMBER: 277
=============================
[199] ExpressionSequence_opt --> Expression ';' .
	Preceding states: {47}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', '}', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 278
=============================
[197] Sequence --> '{' ExpressionSequence_opt '}' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 279
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {275}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {275}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {275}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ';', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {275}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {275}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {275}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {275}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {279}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {275}
[200] ExpressionSequence_opt --> ExpressionSequence_opt Expression . ';'
	Preceding states: {47}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With ';', go to state 280
With '(', go to state 170

=============================
STATE NUMBER: 280
=============================
[200] ExpressionSequence_opt --> ExpressionSequence_opt Expression ';' .
	Preceding states: {47}
	Lookahead set: {'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '{', '}', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 281
=============================
[163] TupleExpression --> '<' TupleComponents . '>'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '>', go to state 291

=============================
STATE NUMBER: 282
=============================
[40] Operator --> 'ID' .
	Preceding states: {44}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', '(', ':', ',', '!'}
[169] NamedTupleComponent --> 'ID' . ':=' Expression
	Preceding states: {44}
[191] Location --> 'ID' .
	Preceding states: {44}
	Lookahead set: {'='}
-----------------------------
With ':=', go to state 289

=============================
STATE NUMBER: 283
=============================
[165] TupleComponents --> Expressions_opt .
	Preceding states: {44, 345}
	Lookahead set: {'>'}
-----------------------------

=============================
STATE NUMBER: 284
=============================
[166] TupleComponents --> NamedTupleComponents .
	Preceding states: {44, 345}
	Lookahead set: {'>'}
[168] NamedTupleComponents --> NamedTupleComponents . ',' NamedTupleComponent
	Preceding states: {44, 345}
-----------------------------
With ',', go to state 286

=============================
STATE NUMBER: 285
=============================
[167] NamedTupleComponents --> NamedTupleComponent .
	Preceding states: {44, 345}
	Lookahead set: {'>', ','}
-----------------------------

=============================
STATE NUMBER: 286
=============================
[168] NamedTupleComponents --> NamedTupleComponents ',' . NamedTupleComponent
	Preceding states: {44, 345}
	Follow set: {'>', ','}
[169] NamedTupleComponent --> . 'ID' ':=' Expression
	Preceding states: {286}
-----------------------------
With NamedTupleComponent, go to state 287
With 'ID', go to state 288

=============================
STATE NUMBER: 287
=============================
[168] NamedTupleComponents --> NamedTupleComponents ',' NamedTupleComponent .
	Preceding states: {44, 345}
	Lookahead set: {'>', ','}
-----------------------------

=============================
STATE NUMBER: 288
=============================
[169] NamedTupleComponent --> 'ID' . ':=' Expression
	Preceding states: {286}
-----------------------------
With ':=', go to state 289

=============================
STATE NUMBER: 289
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {289}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {289}
[5] Operator --> . '_OPERATOR'
	Preceding states: {289}
[40] Operator --> . 'ID'
	Preceding states: {289}
[82] CollectionKind --> . SetKind
	Preceding states: {289}
[83] CollectionKind --> . NonSetKind
	Preceding states: {289}
[84] SetKind --> . 'set'
	Preceding states: {289}
[85] NonSetKind --> . 'bag'
	Preceding states: {289}
[86] NonSetKind --> . 'list'
	Preceding states: {289}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {289}
[125] Expression --> . Allocation
	Preceding states: {289}
[126] Expression --> . Expression 'as' Type
	Preceding states: {289}
[127] Expression --> . '$' Expression
	Preceding states: {289}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {289}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {289}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {289}
[136] UntypedExpression --> . Literal
	Preceding states: {289}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {289}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {289}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {289}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {289}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {289}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {289}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {289}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {289}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {289}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {289}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {289}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {289}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {289}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {289}
[151] UntypedExpression --> . Sequence
	Preceding states: {289}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {289}
[153] UntypedExpression --> . Comprehension
	Preceding states: {289}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {289}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {289}
[156] Literal --> . 'INT'
	Preceding states: {289}
[157] Literal --> . 'CHAR'
	Preceding states: {289}
[158] Literal --> . 'REAL'
	Preceding states: {289}
[159] Literal --> . 'STRING'
	Preceding states: {289}
[160] Literal --> . 'true'
	Preceding states: {289}
[161] Literal --> . 'false'
	Preceding states: {289}
[162] Literal --> . 'null'
	Preceding states: {289}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {289}
[164] TupleExpression --> . TupleProjection
	Preceding states: {289}
[169] NamedTupleComponent --> 'ID' ':=' . Expression
	Preceding states: {44, 286, 345}
	Follow set: {'>', ','}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {289}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {289}
[179] OperatorExpression --> . Operator
	Preceding states: {289}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {289}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {289}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {289}
[191] Location --> . 'ID'
	Preceding states: {289}
[192] Location --> . TupleProjection
	Preceding states: {289}
[193] Location --> . ArraySlotExpression
	Preceding states: {289}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {289}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {289}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {289}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {289}
-----------------------------
With Expression, go to state 290
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 290
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {289}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {289}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {289}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', '(', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {289}
[169] NamedTupleComponent --> 'ID' ':=' Expression .
	Preceding states: {44, 286, 345}
	Lookahead set: {'>', ','}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {289}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {289}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {289}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {290}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {289}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 291
=============================
[163] TupleExpression --> '<' TupleComponents '>' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 292
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {292}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {292}
[5] Operator --> . '_OPERATOR'
	Preceding states: {292}
[40] Operator --> . 'ID'
	Preceding states: {292}
[82] CollectionKind --> . SetKind
	Preceding states: {292}
[83] CollectionKind --> . NonSetKind
	Preceding states: {292}
[84] SetKind --> . 'set'
	Preceding states: {292}
[85] NonSetKind --> . 'bag'
	Preceding states: {292}
[86] NonSetKind --> . 'list'
	Preceding states: {292}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {292}
[125] Expression --> . Allocation
	Preceding states: {292}
[126] Expression --> . Expression 'as' Type
	Preceding states: {292}
[127] Expression --> . '$' Expression
	Preceding states: {292}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {292}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {292}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {292}
[136] UntypedExpression --> . Literal
	Preceding states: {292}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {292}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {292}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {292}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {292}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {292}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {292}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {292}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {292}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {292}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {292}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {292}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {292}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {292}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {292}
[151] UntypedExpression --> . Sequence
	Preceding states: {292}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {292}
[153] UntypedExpression --> . Comprehension
	Preceding states: {292}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {292}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {292}
[155] UntypedExpression --> 'hom' '(' . Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {','}
[156] Literal --> . 'INT'
	Preceding states: {292}
[157] Literal --> . 'CHAR'
	Preceding states: {292}
[158] Literal --> . 'REAL'
	Preceding states: {292}
[159] Literal --> . 'STRING'
	Preceding states: {292}
[160] Literal --> . 'true'
	Preceding states: {292}
[161] Literal --> . 'false'
	Preceding states: {292}
[162] Literal --> . 'null'
	Preceding states: {292}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {292}
[164] TupleExpression --> . TupleProjection
	Preceding states: {292}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {292}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {292}
[179] OperatorExpression --> . Operator
	Preceding states: {292}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {292}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {292}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {292}
[191] Location --> . 'ID'
	Preceding states: {292}
[192] Location --> . TupleProjection
	Preceding states: {292}
[193] Location --> . ArraySlotExpression
	Preceding states: {292}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {292}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {292}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {292}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {292}
-----------------------------
With Expression, go to state 293
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 293
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {292}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {292}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {292}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {292}
[155] UntypedExpression --> 'hom' '(' Expression . ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {292}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {292}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {292}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {293}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {292}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With ',', go to state 294
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 294
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {294}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {294}
[5] Operator --> . '_OPERATOR'
	Preceding states: {294}
[40] Operator --> . 'ID'
	Preceding states: {294}
[82] CollectionKind --> . SetKind
	Preceding states: {294}
[83] CollectionKind --> . NonSetKind
	Preceding states: {294}
[84] SetKind --> . 'set'
	Preceding states: {294}
[85] NonSetKind --> . 'bag'
	Preceding states: {294}
[86] NonSetKind --> . 'list'
	Preceding states: {294}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {294}
[125] Expression --> . Allocation
	Preceding states: {294}
[126] Expression --> . Expression 'as' Type
	Preceding states: {294}
[127] Expression --> . '$' Expression
	Preceding states: {294}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {294}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {294}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {294}
[136] UntypedExpression --> . Literal
	Preceding states: {294}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {294}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {294}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {294}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {294}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {294}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {294}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {294}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {294}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {294}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {294}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {294}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {294}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {294}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {294}
[151] UntypedExpression --> . Sequence
	Preceding states: {294}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {294}
[153] UntypedExpression --> . Comprehension
	Preceding states: {294}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {294}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {294}
[155] UntypedExpression --> 'hom' '(' Expression ',' . Expression ',' Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {','}
[156] Literal --> . 'INT'
	Preceding states: {294}
[157] Literal --> . 'CHAR'
	Preceding states: {294}
[158] Literal --> . 'REAL'
	Preceding states: {294}
[159] Literal --> . 'STRING'
	Preceding states: {294}
[160] Literal --> . 'true'
	Preceding states: {294}
[161] Literal --> . 'false'
	Preceding states: {294}
[162] Literal --> . 'null'
	Preceding states: {294}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {294}
[164] TupleExpression --> . TupleProjection
	Preceding states: {294}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {294}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {294}
[179] OperatorExpression --> . Operator
	Preceding states: {294}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {294}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {294}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {294}
[191] Location --> . 'ID'
	Preceding states: {294}
[192] Location --> . TupleProjection
	Preceding states: {294}
[193] Location --> . ArraySlotExpression
	Preceding states: {294}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {294}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {294}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {294}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {294}
-----------------------------
With Expression, go to state 295
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 295
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {294}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {294}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {294}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {294}
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression . ',' Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {294}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {294}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {294}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {295}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {294}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With ',', go to state 296
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 296
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {296}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {296}
[5] Operator --> . '_OPERATOR'
	Preceding states: {296}
[40] Operator --> . 'ID'
	Preceding states: {296}
[82] CollectionKind --> . SetKind
	Preceding states: {296}
[83] CollectionKind --> . NonSetKind
	Preceding states: {296}
[84] SetKind --> . 'set'
	Preceding states: {296}
[85] NonSetKind --> . 'bag'
	Preceding states: {296}
[86] NonSetKind --> . 'list'
	Preceding states: {296}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {296}
[125] Expression --> . Allocation
	Preceding states: {296}
[126] Expression --> . Expression 'as' Type
	Preceding states: {296}
[127] Expression --> . '$' Expression
	Preceding states: {296}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {296}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {296}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {296}
[136] UntypedExpression --> . Literal
	Preceding states: {296}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {296}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {296}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {296}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {296}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {296}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {296}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {296}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {296}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {296}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {296}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {296}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {296}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {296}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {296}
[151] UntypedExpression --> . Sequence
	Preceding states: {296}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {296}
[153] UntypedExpression --> . Comprehension
	Preceding states: {296}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {296}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {296}
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression ',' . Expression ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {','}
[156] Literal --> . 'INT'
	Preceding states: {296}
[157] Literal --> . 'CHAR'
	Preceding states: {296}
[158] Literal --> . 'REAL'
	Preceding states: {296}
[159] Literal --> . 'STRING'
	Preceding states: {296}
[160] Literal --> . 'true'
	Preceding states: {296}
[161] Literal --> . 'false'
	Preceding states: {296}
[162] Literal --> . 'null'
	Preceding states: {296}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {296}
[164] TupleExpression --> . TupleProjection
	Preceding states: {296}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {296}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {296}
[179] OperatorExpression --> . Operator
	Preceding states: {296}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {296}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {296}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {296}
[191] Location --> . 'ID'
	Preceding states: {296}
[192] Location --> . TupleProjection
	Preceding states: {296}
[193] Location --> . ArraySlotExpression
	Preceding states: {296}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {296}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {296}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {296}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {296}
-----------------------------
With Expression, go to state 297
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 297
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {296}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {296}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {296}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', ',', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {296}
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression ',' Expression . ',' Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {296}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {296}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {296}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {297}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {296}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With ',', go to state 298
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 298
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {298}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {298}
[5] Operator --> . '_OPERATOR'
	Preceding states: {298}
[40] Operator --> . 'ID'
	Preceding states: {298}
[82] CollectionKind --> . SetKind
	Preceding states: {298}
[83] CollectionKind --> . NonSetKind
	Preceding states: {298}
[84] SetKind --> . 'set'
	Preceding states: {298}
[85] NonSetKind --> . 'bag'
	Preceding states: {298}
[86] NonSetKind --> . 'list'
	Preceding states: {298}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {298}
[125] Expression --> . Allocation
	Preceding states: {298}
[126] Expression --> . Expression 'as' Type
	Preceding states: {298}
[127] Expression --> . '$' Expression
	Preceding states: {298}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {298}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {298}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {298}
[136] UntypedExpression --> . Literal
	Preceding states: {298}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {298}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {298}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {298}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {298}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {298}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {298}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {298}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {298}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {298}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {298}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {298}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {298}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {298}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {298}
[151] UntypedExpression --> . Sequence
	Preceding states: {298}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {298}
[153] UntypedExpression --> . Comprehension
	Preceding states: {298}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {298}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {298}
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression ',' Expression ',' . Expression ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {')'}
[156] Literal --> . 'INT'
	Preceding states: {298}
[157] Literal --> . 'CHAR'
	Preceding states: {298}
[158] Literal --> . 'REAL'
	Preceding states: {298}
[159] Literal --> . 'STRING'
	Preceding states: {298}
[160] Literal --> . 'true'
	Preceding states: {298}
[161] Literal --> . 'false'
	Preceding states: {298}
[162] Literal --> . 'null'
	Preceding states: {298}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {298}
[164] TupleExpression --> . TupleProjection
	Preceding states: {298}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {298}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {298}
[179] OperatorExpression --> . Operator
	Preceding states: {298}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {298}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {298}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {298}
[191] Location --> . 'ID'
	Preceding states: {298}
[192] Location --> . TupleProjection
	Preceding states: {298}
[193] Location --> . ArraySlotExpression
	Preceding states: {298}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {298}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {298}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {298}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {298}
-----------------------------
With Expression, go to state 299
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 299
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {298}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {298}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {298}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ')', ':', '!'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {298}
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression ',' Expression ',' Expression . ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {298}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {298}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {298}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {299}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {298}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With ')', go to state 300
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 300
=============================
[155] UntypedExpression --> 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 301
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {301}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {301}
[5] Operator --> . '_OPERATOR'
	Preceding states: {301}
[40] Operator --> . 'ID'
	Preceding states: {301}
[82] CollectionKind --> . SetKind
	Preceding states: {301}
[83] CollectionKind --> . NonSetKind
	Preceding states: {301}
[84] SetKind --> . 'set'
	Preceding states: {301}
[85] NonSetKind --> . 'bag'
	Preceding states: {301}
[86] NonSetKind --> . 'list'
	Preceding states: {301}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {301}
[125] Expression --> . Allocation
	Preceding states: {301}
[126] Expression --> . Expression 'as' Type
	Preceding states: {301}
[127] Expression --> . '$' Expression
	Preceding states: {301}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {301}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {301}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {301}
[136] UntypedExpression --> . Literal
	Preceding states: {301}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {301}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {301}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {301}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {301}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {301}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {301}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {301}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {301}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {301}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {301}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {301}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {301}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {301}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {301}
[151] UntypedExpression --> . Sequence
	Preceding states: {301}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {301}
[153] UntypedExpression --> . Comprehension
	Preceding states: {301}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {301}
[154] UntypedExpression --> 'foreach' '(' . Qualifiers_opt ')' Expression_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {')'}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {301}
[156] Literal --> . 'INT'
	Preceding states: {301}
[157] Literal --> . 'CHAR'
	Preceding states: {301}
[158] Literal --> . 'REAL'
	Preceding states: {301}
[159] Literal --> . 'STRING'
	Preceding states: {301}
[160] Literal --> . 'true'
	Preceding states: {301}
[161] Literal --> . 'false'
	Preceding states: {301}
[162] Literal --> . 'null'
	Preceding states: {301}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {301}
[164] TupleExpression --> . TupleProjection
	Preceding states: {301}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {301}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {301}
[179] OperatorExpression --> . Operator
	Preceding states: {301}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {301}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {301}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {301}
[191] Location --> . 'ID'
	Preceding states: {301}
[192] Location --> . TupleProjection
	Preceding states: {301}
[193] Location --> . ArraySlotExpression
	Preceding states: {301}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {301}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {301}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {301}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {301}
[206] Qualifiers_opt --> .
	Preceding states: {301}
	Lookahead set: {')'}
[207] Qualifiers_opt --> . Qualifiers
	Preceding states: {301}
[208] Qualifiers --> . Qualifier
	Preceding states: {301}
[209] Qualifiers --> . Qualifiers ',' Qualifier
	Preceding states: {301}
[210] Qualifier --> . Expression
	Preceding states: {301}
[211] Qualifier --> . Expression '<-' Expression
	Preceding states: {301}
-----------------------------
With Qualifiers_opt, go to state 302
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 267
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49
With Qualifiers, go to state 268
With Qualifier, go to state 269

=============================
STATE NUMBER: 302
=============================
[154] UntypedExpression --> 'foreach' '(' Qualifiers_opt . ')' Expression_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With ')', go to state 303

=============================
STATE NUMBER: 303
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S19	over R122, 	on input '('
Resolved   S/R conflict: choosing S49	over R122, 	on input '['
-----------------------------
This state has dynamic actions:
	
{0:[S7, R122],1:[S8, R122]}
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {303}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {303}
[5] Operator --> . '_OPERATOR'
	Preceding states: {303}
[40] Operator --> . 'ID'
	Preceding states: {303}
[82] CollectionKind --> . SetKind
	Preceding states: {303}
[83] CollectionKind --> . NonSetKind
	Preceding states: {303}
[84] SetKind --> . 'set'
	Preceding states: {303}
[85] NonSetKind --> . 'bag'
	Preceding states: {303}
[86] NonSetKind --> . 'list'
	Preceding states: {303}
[122] Expression_opt --> .
	Preceding states: {303}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[123] Expression_opt --> . Expression
	Preceding states: {303}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {303}
[125] Expression --> . Allocation
	Preceding states: {303}
[126] Expression --> . Expression 'as' Type
	Preceding states: {303}
[127] Expression --> . '$' Expression
	Preceding states: {303}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {303}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {303}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {303}
[136] UntypedExpression --> . Literal
	Preceding states: {303}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {303}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {303}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {303}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {303}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {303}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {303}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {303}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {303}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {303}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {303}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {303}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {303}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {303}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {303}
[151] UntypedExpression --> . Sequence
	Preceding states: {303}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {303}
[153] UntypedExpression --> . Comprehension
	Preceding states: {303}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {303}
[154] UntypedExpression --> 'foreach' '(' Qualifiers_opt ')' . Expression_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {303}
[156] Literal --> . 'INT'
	Preceding states: {303}
[157] Literal --> . 'CHAR'
	Preceding states: {303}
[158] Literal --> . 'REAL'
	Preceding states: {303}
[159] Literal --> . 'STRING'
	Preceding states: {303}
[160] Literal --> . 'true'
	Preceding states: {303}
[161] Literal --> . 'false'
	Preceding states: {303}
[162] Literal --> . 'null'
	Preceding states: {303}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {303}
[164] TupleExpression --> . TupleProjection
	Preceding states: {303}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {303}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {303}
[179] OperatorExpression --> . Operator
	Preceding states: {303}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {303}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {303}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {303}
[191] Location --> . 'ID'
	Preceding states: {303}
[192] Location --> . TupleProjection
	Preceding states: {303}
[193] Location --> . ArraySlotExpression
	Preceding states: {303}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {303}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {303}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {303}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {303}
-----------------------------
With Expression_opt, go to state 304
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 305
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 304
=============================
[154] UntypedExpression --> 'foreach' '(' Qualifiers_opt ')' Expression_opt .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 305
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R123, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R123, 	on input '!'
Resolved   S/R conflict: choosing S166	over R123, 	on input '.'
Resolved   S/R conflict: choosing S167	over R123, 	on input '['
Resolved   S/R conflict: choosing S170	over R123, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R123, S168],1:[R123, S169]}
-----------------------------
[123] Expression_opt --> Expression .
	Preceding states: {19, 28, 303, 343}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[126] Expression --> Expression . 'as' Type
	Preceding states: {19, 28, 303, 343}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {19, 28, 303, 343}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {19, 28, 303, 343}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {19, 28, 303, 343}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {19, 28, 303, 343}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {19, 28, 303, 343}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {19, 28, 303, 343}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {305}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {19, 28, 303, 343}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 306
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {306}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {306}
[5] Operator --> . '_OPERATOR'
	Preceding states: {306}
[40] Operator --> . 'ID'
	Preceding states: {306}
[82] CollectionKind --> . SetKind
	Preceding states: {306}
[83] CollectionKind --> . NonSetKind
	Preceding states: {306}
[84] SetKind --> . 'set'
	Preceding states: {306}
[85] NonSetKind --> . 'bag'
	Preceding states: {306}
[86] NonSetKind --> . 'list'
	Preceding states: {306}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {306}
[125] Expression --> . Allocation
	Preceding states: {306}
[126] Expression --> . Expression 'as' Type
	Preceding states: {306}
[127] Expression --> . '$' Expression
	Preceding states: {306}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {306}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {306}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {306}
[136] UntypedExpression --> . Literal
	Preceding states: {306}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {306}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {306}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {306}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {306}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {306}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {306}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {306}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {306}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {306}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {306}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {306}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {306}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {306}
[149] UntypedExpression --> Location '=' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {306}
[151] UntypedExpression --> . Sequence
	Preceding states: {306}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {306}
[153] UntypedExpression --> . Comprehension
	Preceding states: {306}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {306}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {306}
[156] Literal --> . 'INT'
	Preceding states: {306}
[157] Literal --> . 'CHAR'
	Preceding states: {306}
[158] Literal --> . 'REAL'
	Preceding states: {306}
[159] Literal --> . 'STRING'
	Preceding states: {306}
[160] Literal --> . 'true'
	Preceding states: {306}
[161] Literal --> . 'false'
	Preceding states: {306}
[162] Literal --> . 'null'
	Preceding states: {306}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {306}
[164] TupleExpression --> . TupleProjection
	Preceding states: {306}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {306}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {306}
[179] OperatorExpression --> . Operator
	Preceding states: {306}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {306}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {306}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {306}
[191] Location --> . 'ID'
	Preceding states: {306}
[192] Location --> . TupleProjection
	Preceding states: {306}
[193] Location --> . ArraySlotExpression
	Preceding states: {306}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {306}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {306}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {306}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {306}
-----------------------------
With Expression, go to state 307
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 307
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R149, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R149, 	on input '!'
Resolved   S/R conflict: choosing S166	over R149, 	on input '.'
Resolved   S/R conflict: choosing S167	over R149, 	on input '['
Resolved   S/R conflict: choosing S170	over R149, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R149, S168],1:[R149, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {306}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {306}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {306}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[149] UntypedExpression --> Location '=' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {306}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {306}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {306}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {306}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {307}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {306}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 308
=============================
[121] Parameter --> . 'ID' Typing_opt
	Preceding states: {308}
[148] UntypedExpression --> 'let' Locals . 'in' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[189] Locals --> Locals . Local ';'
	Preceding states: {31}
	Follow set: {';'}
[190] Local --> . Parameter Initialization_opt
	Preceding states: {308}
-----------------------------
With 'in', go to state 313
With Local, go to state 314
With 'ID', go to state 199
With Parameter, go to state 310

=============================
STATE NUMBER: 309
=============================
[188] Locals --> Local . ';'
	Preceding states: {31}
-----------------------------
With ';', go to state 312

=============================
STATE NUMBER: 310
=============================
[107] Initialization_opt --> .
	Preceding states: {310}
	Lookahead set: {';'}
[108] Initialization_opt --> . '=' Expression
	Preceding states: {310}
[190] Local --> Parameter . Initialization_opt
	Preceding states: {31, 308}
	Follow set: {';'}
-----------------------------
With Initialization_opt, go to state 311
With '=', go to state 161

=============================
STATE NUMBER: 311
=============================
[190] Local --> Parameter Initialization_opt .
	Preceding states: {31, 308}
	Lookahead set: {';'}
-----------------------------

=============================
STATE NUMBER: 312
=============================
[188] Locals --> Local ';' .
	Preceding states: {31}
	Lookahead set: {'ID', 'in'}
-----------------------------

=============================
STATE NUMBER: 313
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {313}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {313}
[5] Operator --> . '_OPERATOR'
	Preceding states: {313}
[40] Operator --> . 'ID'
	Preceding states: {313}
[82] CollectionKind --> . SetKind
	Preceding states: {313}
[83] CollectionKind --> . NonSetKind
	Preceding states: {313}
[84] SetKind --> . 'set'
	Preceding states: {313}
[85] NonSetKind --> . 'bag'
	Preceding states: {313}
[86] NonSetKind --> . 'list'
	Preceding states: {313}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {313}
[125] Expression --> . Allocation
	Preceding states: {313}
[126] Expression --> . Expression 'as' Type
	Preceding states: {313}
[127] Expression --> . '$' Expression
	Preceding states: {313}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {313}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {313}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {313}
[136] UntypedExpression --> . Literal
	Preceding states: {313}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {313}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {313}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {313}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {313}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {313}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {313}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {313}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {313}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {313}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {313}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {313}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {313}
[148] UntypedExpression --> 'let' Locals 'in' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {313}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {313}
[151] UntypedExpression --> . Sequence
	Preceding states: {313}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {313}
[153] UntypedExpression --> . Comprehension
	Preceding states: {313}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {313}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {313}
[156] Literal --> . 'INT'
	Preceding states: {313}
[157] Literal --> . 'CHAR'
	Preceding states: {313}
[158] Literal --> . 'REAL'
	Preceding states: {313}
[159] Literal --> . 'STRING'
	Preceding states: {313}
[160] Literal --> . 'true'
	Preceding states: {313}
[161] Literal --> . 'false'
	Preceding states: {313}
[162] Literal --> . 'null'
	Preceding states: {313}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {313}
[164] TupleExpression --> . TupleProjection
	Preceding states: {313}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {313}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {313}
[179] OperatorExpression --> . Operator
	Preceding states: {313}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {313}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {313}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {313}
[191] Location --> . 'ID'
	Preceding states: {313}
[192] Location --> . TupleProjection
	Preceding states: {313}
[193] Location --> . ArraySlotExpression
	Preceding states: {313}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {313}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {313}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {313}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {313}
-----------------------------
With Expression, go to state 316
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 314
=============================
[189] Locals --> Locals Local . ';'
	Preceding states: {31}
-----------------------------
With ';', go to state 315

=============================
STATE NUMBER: 315
=============================
[189] Locals --> Locals Local ';' .
	Preceding states: {31}
	Lookahead set: {'ID', 'in'}
-----------------------------

=============================
STATE NUMBER: 316
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R148, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R148, 	on input '!'
Resolved   S/R conflict: choosing S166	over R148, 	on input '.'
Resolved   S/R conflict: choosing S167	over R148, 	on input '['
Resolved   S/R conflict: choosing S170	over R148, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R148, S168],1:[R148, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {313}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {313}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {313}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[148] UntypedExpression --> 'let' Locals 'in' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {313}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {313}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {313}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {313}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {316}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {313}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 317
=============================
[41] Typing_opt --> .
	Preceding states: {317}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[42] Typing_opt --> . Typing
	Preceding states: {317}
[43] Typing --> . ':' Type
	Preceding states: {317}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {30}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[147] UntypedExpression --> 'while' UntypedExpression . 'do' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {30}
-----------------------------
With Typing_opt, go to state 319
With 'do', go to state 320
With '@', go to state 321
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 318
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {29, 30, 339, 359, 365}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {29, 30, 339, 359, 365}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {29, 30, 339, 359, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', ']', '(', ':', '!', 'then', 'do'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {29, 30, 339, 359, 365}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {29, 30, 339, 359, 365}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {29, 30, 339, 359, 365}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {29, 30, 339, 359, 365}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {318}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {29, 30, 339, 359, 365}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 319
=============================
[124] Expression --> UntypedExpression Typing_opt .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 320
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {320}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {320}
[5] Operator --> . '_OPERATOR'
	Preceding states: {320}
[40] Operator --> . 'ID'
	Preceding states: {320}
[82] CollectionKind --> . SetKind
	Preceding states: {320}
[83] CollectionKind --> . NonSetKind
	Preceding states: {320}
[84] SetKind --> . 'set'
	Preceding states: {320}
[85] NonSetKind --> . 'bag'
	Preceding states: {320}
[86] NonSetKind --> . 'list'
	Preceding states: {320}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {320}
[125] Expression --> . Allocation
	Preceding states: {320}
[126] Expression --> . Expression 'as' Type
	Preceding states: {320}
[127] Expression --> . '$' Expression
	Preceding states: {320}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {320}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {320}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {320}
[136] UntypedExpression --> . Literal
	Preceding states: {320}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {320}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {320}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {320}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {320}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {320}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {320}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {320}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {320}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {320}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {320}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {320}
[147] UntypedExpression --> 'while' UntypedExpression 'do' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {320}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {320}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {320}
[151] UntypedExpression --> . Sequence
	Preceding states: {320}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {320}
[153] UntypedExpression --> . Comprehension
	Preceding states: {320}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {320}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {320}
[156] Literal --> . 'INT'
	Preceding states: {320}
[157] Literal --> . 'CHAR'
	Preceding states: {320}
[158] Literal --> . 'REAL'
	Preceding states: {320}
[159] Literal --> . 'STRING'
	Preceding states: {320}
[160] Literal --> . 'true'
	Preceding states: {320}
[161] Literal --> . 'false'
	Preceding states: {320}
[162] Literal --> . 'null'
	Preceding states: {320}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {320}
[164] TupleExpression --> . TupleProjection
	Preceding states: {320}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {320}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {320}
[179] OperatorExpression --> . Operator
	Preceding states: {320}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {320}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {320}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {320}
[191] Location --> . 'ID'
	Preceding states: {320}
[192] Location --> . TupleProjection
	Preceding states: {320}
[193] Location --> . ArraySlotExpression
	Preceding states: {320}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {320}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {320}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {320}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {320}
-----------------------------
With Expression, go to state 325
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 321
=============================
[170] TupleProjection --> UntypedExpression '@' . TupleSelector
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[171] TupleSelector --> . 'INT'
	Preceding states: {321}
[172] TupleSelector --> . 'ID'
	Preceding states: {321}
-----------------------------
With TupleSelector, go to state 322
With 'INT', go to state 323
With 'ID', go to state 324

=============================
STATE NUMBER: 322
=============================
[170] TupleProjection --> UntypedExpression '@' TupleSelector .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 323
=============================
[171] TupleSelector --> 'INT' .
	Preceding states: {321}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 324
=============================
[172] TupleSelector --> 'ID' .
	Preceding states: {321}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 325
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R147, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R147, 	on input '!'
Resolved   S/R conflict: choosing S166	over R147, 	on input '.'
Resolved   S/R conflict: choosing S167	over R147, 	on input '['
Resolved   S/R conflict: choosing S170	over R147, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R147, S168],1:[R147, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {320}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {320}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {320}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[147] UntypedExpression --> 'while' UntypedExpression 'do' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {320}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {320}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {320}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {320}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {325}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {320}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 326
=============================
[41] Typing_opt --> .
	Preceding states: {326}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[42] Typing_opt --> . Typing
	Preceding states: {326}
[43] Typing --> . ':' Type
	Preceding states: {326}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {29}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[146] UntypedExpression --> 'if' UntypedExpression . 'then' Expression 'else' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {29}
-----------------------------
With Typing_opt, go to state 319
With 'then', go to state 327
With '@', go to state 321
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 327
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {327}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {327}
[5] Operator --> . '_OPERATOR'
	Preceding states: {327}
[40] Operator --> . 'ID'
	Preceding states: {327}
[82] CollectionKind --> . SetKind
	Preceding states: {327}
[83] CollectionKind --> . NonSetKind
	Preceding states: {327}
[84] SetKind --> . 'set'
	Preceding states: {327}
[85] NonSetKind --> . 'bag'
	Preceding states: {327}
[86] NonSetKind --> . 'list'
	Preceding states: {327}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {327}
[125] Expression --> . Allocation
	Preceding states: {327}
[126] Expression --> . Expression 'as' Type
	Preceding states: {327}
[127] Expression --> . '$' Expression
	Preceding states: {327}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {327}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {327}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {327}
[136] UntypedExpression --> . Literal
	Preceding states: {327}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {327}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {327}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {327}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {327}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {327}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {327}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {327}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {327}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {327}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {327}
[146] UntypedExpression --> 'if' UntypedExpression 'then' . Expression 'else' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'else'}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {327}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {327}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {327}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {327}
[151] UntypedExpression --> . Sequence
	Preceding states: {327}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {327}
[153] UntypedExpression --> . Comprehension
	Preceding states: {327}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {327}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {327}
[156] Literal --> . 'INT'
	Preceding states: {327}
[157] Literal --> . 'CHAR'
	Preceding states: {327}
[158] Literal --> . 'REAL'
	Preceding states: {327}
[159] Literal --> . 'STRING'
	Preceding states: {327}
[160] Literal --> . 'true'
	Preceding states: {327}
[161] Literal --> . 'false'
	Preceding states: {327}
[162] Literal --> . 'null'
	Preceding states: {327}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {327}
[164] TupleExpression --> . TupleProjection
	Preceding states: {327}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {327}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {327}
[179] OperatorExpression --> . Operator
	Preceding states: {327}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {327}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {327}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {327}
[191] Location --> . 'ID'
	Preceding states: {327}
[192] Location --> . TupleProjection
	Preceding states: {327}
[193] Location --> . ArraySlotExpression
	Preceding states: {327}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {327}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {327}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {327}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {327}
-----------------------------
With Expression, go to state 328
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 328
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {327}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {327}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {327}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', '!', 'else'}
[146] UntypedExpression --> 'if' UntypedExpression 'then' Expression . 'else' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {327}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {327}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {327}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {327}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {328}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {327}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With 'else', go to state 329
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 329
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {329}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {329}
[5] Operator --> . '_OPERATOR'
	Preceding states: {329}
[40] Operator --> . 'ID'
	Preceding states: {329}
[82] CollectionKind --> . SetKind
	Preceding states: {329}
[83] CollectionKind --> . NonSetKind
	Preceding states: {329}
[84] SetKind --> . 'set'
	Preceding states: {329}
[85] NonSetKind --> . 'bag'
	Preceding states: {329}
[86] NonSetKind --> . 'list'
	Preceding states: {329}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {329}
[125] Expression --> . Allocation
	Preceding states: {329}
[126] Expression --> . Expression 'as' Type
	Preceding states: {329}
[127] Expression --> . '$' Expression
	Preceding states: {329}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {329}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {329}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {329}
[136] UntypedExpression --> . Literal
	Preceding states: {329}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {329}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {329}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {329}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {329}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {329}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {329}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {329}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {329}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {329}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {329}
[146] UntypedExpression --> 'if' UntypedExpression 'then' Expression 'else' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {329}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {329}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {329}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {329}
[151] UntypedExpression --> . Sequence
	Preceding states: {329}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {329}
[153] UntypedExpression --> . Comprehension
	Preceding states: {329}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {329}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {329}
[156] Literal --> . 'INT'
	Preceding states: {329}
[157] Literal --> . 'CHAR'
	Preceding states: {329}
[158] Literal --> . 'REAL'
	Preceding states: {329}
[159] Literal --> . 'STRING'
	Preceding states: {329}
[160] Literal --> . 'true'
	Preceding states: {329}
[161] Literal --> . 'false'
	Preceding states: {329}
[162] Literal --> . 'null'
	Preceding states: {329}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {329}
[164] TupleExpression --> . TupleProjection
	Preceding states: {329}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {329}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {329}
[179] OperatorExpression --> . Operator
	Preceding states: {329}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {329}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {329}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {329}
[191] Location --> . 'ID'
	Preceding states: {329}
[192] Location --> . TupleProjection
	Preceding states: {329}
[193] Location --> . ArraySlotExpression
	Preceding states: {329}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {329}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {329}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {329}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {329}
-----------------------------
With Expression, go to state 330
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 330
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R146, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R146, 	on input '!'
Resolved   S/R conflict: choosing S166	over R146, 	on input '.'
Resolved   S/R conflict: choosing S167	over R146, 	on input '['
Resolved   S/R conflict: choosing S170	over R146, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R146, S168],1:[R146, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {329}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {329}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {329}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[146] UntypedExpression --> 'if' UntypedExpression 'then' Expression 'else' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {329}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {329}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {329}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {329}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {330}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {329}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 331
=============================
[145] UntypedExpression --> 'return' Expression_opt .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 332
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {332}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {332}
[5] Operator --> . '_OPERATOR'
	Preceding states: {332}
[40] Operator --> . 'ID'
	Preceding states: {332}
[82] CollectionKind --> . SetKind
	Preceding states: {332}
[83] CollectionKind --> . NonSetKind
	Preceding states: {332}
[84] SetKind --> . 'set'
	Preceding states: {332}
[85] NonSetKind --> . 'bag'
	Preceding states: {332}
[86] NonSetKind --> . 'list'
	Preceding states: {332}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {332}
[125] Expression --> . Allocation
	Preceding states: {332}
[126] Expression --> . Expression 'as' Type
	Preceding states: {332}
[127] Expression --> . '$' Expression
	Preceding states: {332}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {332}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {332}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {332}
[136] UntypedExpression --> . Literal
	Preceding states: {332}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {332}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {332}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {332}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {332}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {332}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {332}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {332}
[143] UntypedExpression --> 'function' FunctionParameters . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {332}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {332}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {332}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {332}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {332}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {332}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {332}
[151] UntypedExpression --> . Sequence
	Preceding states: {332}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {332}
[153] UntypedExpression --> . Comprehension
	Preceding states: {332}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {332}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {332}
[156] Literal --> . 'INT'
	Preceding states: {332}
[157] Literal --> . 'CHAR'
	Preceding states: {332}
[158] Literal --> . 'REAL'
	Preceding states: {332}
[159] Literal --> . 'STRING'
	Preceding states: {332}
[160] Literal --> . 'true'
	Preceding states: {332}
[161] Literal --> . 'false'
	Preceding states: {332}
[162] Literal --> . 'null'
	Preceding states: {332}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {332}
[164] TupleExpression --> . TupleProjection
	Preceding states: {332}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {332}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {332}
[179] OperatorExpression --> . Operator
	Preceding states: {332}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {332}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {332}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {332}
[191] Location --> . 'ID'
	Preceding states: {332}
[192] Location --> . TupleProjection
	Preceding states: {332}
[193] Location --> . ArraySlotExpression
	Preceding states: {332}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {332}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {332}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {332}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {332}
-----------------------------
With Expression, go to state 333
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 333
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R143, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R143, 	on input '!'
Resolved   S/R conflict: choosing S166	over R143, 	on input '.'
Resolved   S/R conflict: choosing S167	over R143, 	on input '['
Resolved   S/R conflict: choosing S170	over R143, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R143, S168],1:[R143, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {332}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {332}
[143] UntypedExpression --> 'function' FunctionParameters Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {332}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {332}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {332}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {332}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {332}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {333}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {332}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 334
=============================
[140] UntypedExpression --> '#[' ArrayExtension . ']#'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With ']#', go to state 354

=============================
STATE NUMBER: 335
=============================
[41] Typing_opt --> .
	Preceding states: {335}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', ',', '!', ']#'}
[42] Typing_opt --> . Typing
	Preceding states: {335}
[43] Typing --> . ':' Type
	Preceding states: {335}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {24, 339}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', ',', '!', ']#'}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {24, 339}
[177] IndexedExpression --> UntypedExpression . ':' Expression
	Preceding states: {24, 339}
-----------------------------
With Typing_opt, go to state 319
With '@', go to state 321
With ':', go to state 341
With Typing, go to state 201

=============================
STATE NUMBER: 336
=============================
[173] ArrayExtension --> Expressions .
	Preceding states: {24}
	Lookahead set: {']#'}
[187] Expressions --> Expressions . ',' Expression
	Preceding states: {24}
-----------------------------
With ',', go to state 174

=============================
STATE NUMBER: 337
=============================
[174] ArrayExtension --> IndexedExpressions .
	Preceding states: {24}
	Lookahead set: {']#'}
[176] IndexedExpressions --> IndexedExpressions . ',' IndexedExpression
	Preceding states: {24}
-----------------------------
With ',', go to state 339

=============================
STATE NUMBER: 338
=============================
[175] IndexedExpressions --> IndexedExpression .
	Preceding states: {24}
	Lookahead set: {',', ']#'}
-----------------------------

=============================
STATE NUMBER: 339
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {339}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {339}
[5] Operator --> . '_OPERATOR'
	Preceding states: {339}
[40] Operator --> . 'ID'
	Preceding states: {339}
[82] CollectionKind --> . SetKind
	Preceding states: {339}
[83] CollectionKind --> . NonSetKind
	Preceding states: {339}
[84] SetKind --> . 'set'
	Preceding states: {339}
[85] NonSetKind --> . 'bag'
	Preceding states: {339}
[86] NonSetKind --> . 'list'
	Preceding states: {339}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {339}
[125] Expression --> . Allocation
	Preceding states: {339}
[126] Expression --> . Expression 'as' Type
	Preceding states: {339}
[127] Expression --> . '$' Expression
	Preceding states: {339}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {339}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {339}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {339}
[136] UntypedExpression --> . Literal
	Preceding states: {339}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {339}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {339}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {339}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {339}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {339}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {339}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {339}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {339}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {339}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {339}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {339}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {339}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {339}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {339}
[151] UntypedExpression --> . Sequence
	Preceding states: {339}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {339}
[153] UntypedExpression --> . Comprehension
	Preceding states: {339}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {339}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {339}
[156] Literal --> . 'INT'
	Preceding states: {339}
[157] Literal --> . 'CHAR'
	Preceding states: {339}
[158] Literal --> . 'REAL'
	Preceding states: {339}
[159] Literal --> . 'STRING'
	Preceding states: {339}
[160] Literal --> . 'true'
	Preceding states: {339}
[161] Literal --> . 'false'
	Preceding states: {339}
[162] Literal --> . 'null'
	Preceding states: {339}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {339}
[164] TupleExpression --> . TupleProjection
	Preceding states: {339}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {339}
[176] IndexedExpressions --> IndexedExpressions ',' . IndexedExpression
	Preceding states: {24}
	Follow set: {',', ']#'}
[177] IndexedExpression --> . UntypedExpression ':' Expression
	Preceding states: {339}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {339}
[179] OperatorExpression --> . Operator
	Preceding states: {339}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {339}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {339}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {339}
[191] Location --> . 'ID'
	Preceding states: {339}
[192] Location --> . TupleProjection
	Preceding states: {339}
[193] Location --> . ArraySlotExpression
	Preceding states: {339}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {339}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {339}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {339}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {339}
-----------------------------
With IndexedExpression, go to state 340
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 335
With Allocation, go to state 16
With Expression, go to state 318
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 340
=============================
[176] IndexedExpressions --> IndexedExpressions ',' IndexedExpression .
	Preceding states: {24}
	Lookahead set: {',', ']#'}
-----------------------------

=============================
STATE NUMBER: 341
=============================
This state has conflicts:

Unresolved S/R conflict: choosing S47	over R87, 	on input '{'
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {341}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {341}
[5] Operator --> . '_OPERATOR'
	Preceding states: {341}
[40] Operator --> . 'ID'
	Preceding states: {341}
[43] Typing --> ':' . Type
	Preceding states: {335}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', ',', '!', ']#'}
[46] Type --> . TypeConstant
	Preceding states: {341}
[47] Type --> . FunctionType
	Preceding states: {341}
[48] Type --> . TupleType
	Preceding states: {341}
[49] Type --> . ArrayType
	Preceding states: {341}
[50] Type --> . CollectionType
	Preceding states: {341}
[51] Type --> . IntRangeType
	Preceding states: {341}
[52] Type --> . RealRangeType
	Preceding states: {341}
[53] Type --> . TypeTerm
	Preceding states: {341}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {341}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {341}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {341}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {341}
[59] TypeConstant --> . 'string'
	Preceding states: {341}
[60] PrimitiveType --> . 'void'
	Preceding states: {341}
[61] PrimitiveType --> . 'int'
	Preceding states: {341}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {341}
[63] PrimitiveType --> . 'char'
	Preceding states: {341}
[64] PrimitiveType --> . 'real'
	Preceding states: {341}
[65] FunctionType --> . Type '->' Type
	Preceding states: {341}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {341}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {341}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {341}
[80] CollectionType --> . SetType
	Preceding states: {341}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {341}
[82] CollectionKind --> . SetKind
	Preceding states: {341}
[83] CollectionKind --> . NonSetKind
	Preceding states: {341}
[84] SetKind --> . 'set'
	Preceding states: {341}
[85] NonSetKind --> . 'bag'
	Preceding states: {341}
[86] NonSetKind --> . 'list'
	Preceding states: {341}
[87] SetKind_opt --> .
	Preceding states: {341}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {341}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {341}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {341}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {341}
[92] TypeTerm --> . 'ID'
	Preceding states: {341}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {341}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {341}
[125] Expression --> . Allocation
	Preceding states: {341}
[126] Expression --> . Expression 'as' Type
	Preceding states: {341}
[127] Expression --> . '$' Expression
	Preceding states: {341}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {341}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {341}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {341}
[136] UntypedExpression --> . Literal
	Preceding states: {341}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {341}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {341}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {341}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {341}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {341}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {341}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {341}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {341}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {341}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {341}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {341}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {341}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {341}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {341}
[151] UntypedExpression --> . Sequence
	Preceding states: {341}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {341}
[153] UntypedExpression --> . Comprehension
	Preceding states: {341}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {341}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {341}
[156] Literal --> . 'INT'
	Preceding states: {341}
[157] Literal --> . 'CHAR'
	Preceding states: {341}
[158] Literal --> . 'REAL'
	Preceding states: {341}
[159] Literal --> . 'STRING'
	Preceding states: {341}
[160] Literal --> . 'true'
	Preceding states: {341}
[161] Literal --> . 'false'
	Preceding states: {341}
[162] Literal --> . 'null'
	Preceding states: {341}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {341}
[164] TupleExpression --> . TupleProjection
	Preceding states: {341}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {341}
[177] IndexedExpression --> UntypedExpression ':' . Expression
	Preceding states: {24, 339}
	Follow set: {',', ']#'}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {341}
[179] OperatorExpression --> . Operator
	Preceding states: {341}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {341}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {341}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {341}
[191] Location --> . 'ID'
	Preceding states: {341}
[192] Location --> . TupleProjection
	Preceding states: {341}
[193] Location --> . ArraySlotExpression
	Preceding states: {341}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {341}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {341}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {341}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {341}
-----------------------------
With Type, go to state 80
With Expression, go to state 342
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 343
With '[', go to state 344
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 345
With SetType, go to state 100
With NonSetKind, go to state 346
With SetKind_opt, go to state 102
With SetKind, go to state 347
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 348
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48

=============================
STATE NUMBER: 342
=============================
[126] Expression --> Expression . 'as' Type
	Preceding states: {341}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {341}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {341}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ':', ',', '!', ']#'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {341}
[177] IndexedExpression --> UntypedExpression ':' Expression .
	Preceding states: {24, 339}
	Lookahead set: {',', ']#'}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {341}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {341}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {341}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {342}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {341}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 343
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R44	over R94, 	on input ')'
Unresolved R/R conflict: choosing R44	over R122, 	on input ')'
Unresolved S/R conflict: choosing S47	over R87, 	on input '{'
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {343}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {343}
[5] Operator --> . '_OPERATOR'
	Preceding states: {343}
[40] Operator --> . 'ID'
	Preceding states: {343}
[44] Type_opt --> .
	Preceding states: {343}
	Lookahead set: {')'}
[45] Type_opt --> . Type
	Preceding states: {343}
[46] Type --> . TypeConstant
	Preceding states: {343}
[47] Type --> . FunctionType
	Preceding states: {343}
[48] Type --> . TupleType
	Preceding states: {343}
[49] Type --> . ArrayType
	Preceding states: {343}
[50] Type --> . CollectionType
	Preceding states: {343}
[51] Type --> . IntRangeType
	Preceding states: {343}
[52] Type --> . RealRangeType
	Preceding states: {343}
[53] Type --> . TypeTerm
	Preceding states: {343}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {343}
[54] Type --> '(' . Type_opt ')'
	Preceding states: {341, 343, 345}
	Follow set: {')'}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {343}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {343}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {343}
[59] TypeConstant --> . 'string'
	Preceding states: {343}
[60] PrimitiveType --> . 'void'
	Preceding states: {343}
[61] PrimitiveType --> . 'int'
	Preceding states: {343}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {343}
[63] PrimitiveType --> . 'char'
	Preceding states: {343}
[64] PrimitiveType --> . 'real'
	Preceding states: {343}
[65] FunctionType --> . Type '->' Type
	Preceding states: {343}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {343}
[66] FunctionType --> '(' . Types_opt ')' '->' Type
	Preceding states: {341, 343, 345}
	Follow set: {')'}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {343}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {343}
[80] CollectionType --> . SetType
	Preceding states: {343}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {343}
[82] CollectionKind --> . SetKind
	Preceding states: {343}
[83] CollectionKind --> . NonSetKind
	Preceding states: {343}
[84] SetKind --> . 'set'
	Preceding states: {343}
[85] NonSetKind --> . 'bag'
	Preceding states: {343}
[86] NonSetKind --> . 'list'
	Preceding states: {343}
[87] SetKind_opt --> .
	Preceding states: {343}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {343}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {343}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {343}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {343}
[92] TypeTerm --> . 'ID'
	Preceding states: {343}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {343}
[94] Types_opt --> .
	Preceding states: {343}
	Lookahead set: {')'}
[95] Types_opt --> . Types
	Preceding states: {343}
[96] Types --> . Type
	Preceding states: {343}
[97] Types --> . Types ',' Type
	Preceding states: {343}
[122] Expression_opt --> .
	Preceding states: {343}
	Lookahead set: {')'}
[123] Expression_opt --> . Expression
	Preceding states: {343}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {343}
[125] Expression --> . Allocation
	Preceding states: {343}
[126] Expression --> . Expression 'as' Type
	Preceding states: {343}
[127] Expression --> . '$' Expression
	Preceding states: {343}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {343}
[128] Expression --> '(' . Expression_opt ')'
	Preceding states: {341, 343, 345}
	Follow set: {')'}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {343}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {343}
[136] UntypedExpression --> . Literal
	Preceding states: {343}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {343}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {343}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {343}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {343}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {343}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {343}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {343}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {343}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {343}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {343}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {343}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {343}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {343}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {343}
[151] UntypedExpression --> . Sequence
	Preceding states: {343}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {343}
[152] UntypedExpression --> '(' . UntypedExpression ')'
	Preceding states: {341, 343, 345}
	Follow set: {')'}
[153] UntypedExpression --> . Comprehension
	Preceding states: {343}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {343}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {343}
[156] Literal --> . 'INT'
	Preceding states: {343}
[157] Literal --> . 'CHAR'
	Preceding states: {343}
[158] Literal --> . 'REAL'
	Preceding states: {343}
[159] Literal --> . 'STRING'
	Preceding states: {343}
[160] Literal --> . 'true'
	Preceding states: {343}
[161] Literal --> . 'false'
	Preceding states: {343}
[162] Literal --> . 'null'
	Preceding states: {343}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {343}
[164] TupleExpression --> . TupleProjection
	Preceding states: {343}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {343}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {343}
[179] OperatorExpression --> . Operator
	Preceding states: {343}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {343}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {343}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {343}
[191] Location --> . 'ID'
	Preceding states: {343}
[192] Location --> . TupleProjection
	Preceding states: {343}
[193] Location --> . ArraySlotExpression
	Preceding states: {343}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {343}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {343}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {343}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {343}
-----------------------------
With Type_opt, go to state 151
With Types_opt, go to state 152
With Expression_opt, go to state 350
With UntypedExpression, go to state 351
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 343
With '[', go to state 344
With 'forall', go to state 91
With Type, go to state 153
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With '<', go to state 345
With SetType, go to state 100
With NonSetKind, go to state 346
With SetKind_opt, go to state 102
With SetKind, go to state 347
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'ID', go to state 348
With Types, go to state 134
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With Allocation, go to state 16
With Expression, go to state 305
With '$', go to state 18
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48

=============================
STATE NUMBER: 344
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {344}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {344}
[5] Operator --> . '_OPERATOR'
	Preceding states: {344}
[40] Operator --> . 'ID'
	Preceding states: {344}
[55] Type --> '[' . PrimitiveType ']'
	Preceding states: {341, 343, 345}
	Follow set: {']'}
[60] PrimitiveType --> . 'void'
	Preceding states: {344}
[61] PrimitiveType --> . 'int'
	Preceding states: {344}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {344}
[63] PrimitiveType --> . 'char'
	Preceding states: {344}
[64] PrimitiveType --> . 'real'
	Preceding states: {344}
[82] CollectionKind --> . SetKind
	Preceding states: {344}
[83] CollectionKind --> . NonSetKind
	Preceding states: {344}
[84] SetKind --> . 'set'
	Preceding states: {344}
[85] NonSetKind --> . 'bag'
	Preceding states: {344}
[86] NonSetKind --> . 'list'
	Preceding states: {344}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {344}
[125] Expression --> . Allocation
	Preceding states: {344}
[126] Expression --> . Expression 'as' Type
	Preceding states: {344}
[127] Expression --> . '$' Expression
	Preceding states: {344}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {344}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {344}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {344}
[136] UntypedExpression --> . Literal
	Preceding states: {344}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {344}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {344}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {344}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {344}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {344}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {344}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {344}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {344}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {344}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {344}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {344}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {344}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {344}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {344}
[151] UntypedExpression --> . Sequence
	Preceding states: {344}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {344}
[153] UntypedExpression --> . Comprehension
	Preceding states: {344}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {344}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {344}
[156] Literal --> . 'INT'
	Preceding states: {344}
[157] Literal --> . 'CHAR'
	Preceding states: {344}
[158] Literal --> . 'REAL'
	Preceding states: {344}
[159] Literal --> . 'STRING'
	Preceding states: {344}
[160] Literal --> . 'true'
	Preceding states: {344}
[161] Literal --> . 'false'
	Preceding states: {344}
[162] Literal --> . 'null'
	Preceding states: {344}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {344}
[164] TupleExpression --> . TupleProjection
	Preceding states: {344}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {344}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {344}
[179] OperatorExpression --> . Operator
	Preceding states: {344}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {344}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {344}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {344}
[191] Location --> . 'ID'
	Preceding states: {344}
[192] Location --> . TupleProjection
	Preceding states: {344}
[193] Location --> . ArraySlotExpression
	Preceding states: {344}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {344}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {344}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {344}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {344}
[202] Monoid --> '[' . Expression ',' Expression ']' InPlace_opt
	Preceding states: {341, 343, 345}
	Follow set: {','}
-----------------------------
With PrimitiveType, go to state 147
With Expression, go to state 256
With 'void', go to state 94
With 'int', go to state 148
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 149
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 345
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R94	over R184, 	on input '>'
Unresolved S/R conflict: choosing S47	over R87, 	on input '{'
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {345}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {345}
[5] Operator --> . '_OPERATOR'
	Preceding states: {345}
[40] Operator --> . 'ID'
	Preceding states: {345}
[46] Type --> . TypeConstant
	Preceding states: {345}
[47] Type --> . FunctionType
	Preceding states: {345}
[48] Type --> . TupleType
	Preceding states: {345}
[49] Type --> . ArrayType
	Preceding states: {345}
[50] Type --> . CollectionType
	Preceding states: {345}
[51] Type --> . IntRangeType
	Preceding states: {345}
[52] Type --> . RealRangeType
	Preceding states: {345}
[53] Type --> . TypeTerm
	Preceding states: {345}
[54] Type --> . '(' Type_opt ')'
	Preceding states: {345}
[55] Type --> . '[' PrimitiveType ']'
	Preceding states: {345}
[57] Type --> . 'forall' $ACTION12$ TypeParameters '.' Type
	Preceding states: {345}
[58] TypeConstant --> . PrimitiveType
	Preceding states: {345}
[59] TypeConstant --> . 'string'
	Preceding states: {345}
[60] PrimitiveType --> . 'void'
	Preceding states: {345}
[61] PrimitiveType --> . 'int'
	Preceding states: {345}
[62] PrimitiveType --> . 'boolean'
	Preceding states: {345}
[63] PrimitiveType --> . 'char'
	Preceding states: {345}
[64] PrimitiveType --> . 'real'
	Preceding states: {345}
[65] FunctionType --> . Type '->' Type
	Preceding states: {345}
[66] FunctionType --> . '(' Types_opt ')' '->' Type
	Preceding states: {345}
[67] TupleType --> . '<' TupleTypeComponents '>'
	Preceding states: {345}
[67] TupleType --> '<' . TupleTypeComponents '>'
	Preceding states: {341, 343, 345}
	Follow set: {'>'}
[68] TupleTypeComponents --> . Types_opt
	Preceding states: {345}
[69] TupleTypeComponents --> . NamedTupleTypeComponents
	Preceding states: {345}
[70] NamedTupleTypeComponents --> . NamedTupleTypeComponent
	Preceding states: {345}
[71] NamedTupleTypeComponents --> . NamedTupleTypeComponents ',' NamedTupleTypeComponent
	Preceding states: {345}
[72] NamedTupleTypeComponent --> . 'ID' Typing
	Preceding states: {345}
[73] ArrayType --> . Type '[' IndexType ']'
	Preceding states: {345}
[80] CollectionType --> . SetType
	Preceding states: {345}
[81] CollectionType --> . NonSetKind '{' Type_opt '}'
	Preceding states: {345}
[82] CollectionKind --> . SetKind
	Preceding states: {345}
[83] CollectionKind --> . NonSetKind
	Preceding states: {345}
[84] SetKind --> . 'set'
	Preceding states: {345}
[85] NonSetKind --> . 'bag'
	Preceding states: {345}
[86] NonSetKind --> . 'list'
	Preceding states: {345}
[87] SetKind_opt --> .
	Preceding states: {345}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {345}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {345}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {345}
[91] RealRangeType --> . 'real' '..' 'real'
	Preceding states: {345}
[92] TypeTerm --> . 'ID'
	Preceding states: {345}
[93] TypeTerm --> . 'ID' '(' Types ')'
	Preceding states: {345}
[94] Types_opt --> .
	Preceding states: {345}
	Lookahead set: {'>'}
[95] Types_opt --> . Types
	Preceding states: {345}
[96] Types --> . Type
	Preceding states: {345}
[97] Types --> . Types ',' Type
	Preceding states: {345}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {345}
[125] Expression --> . Allocation
	Preceding states: {345}
[126] Expression --> . Expression 'as' Type
	Preceding states: {345}
[127] Expression --> . '$' Expression
	Preceding states: {345}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {345}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {345}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {345}
[136] UntypedExpression --> . Literal
	Preceding states: {345}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {345}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {345}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {345}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {345}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {345}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {345}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {345}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {345}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {345}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {345}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {345}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {345}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {345}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {345}
[151] UntypedExpression --> . Sequence
	Preceding states: {345}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {345}
[153] UntypedExpression --> . Comprehension
	Preceding states: {345}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {345}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {345}
[156] Literal --> . 'INT'
	Preceding states: {345}
[157] Literal --> . 'CHAR'
	Preceding states: {345}
[158] Literal --> . 'REAL'
	Preceding states: {345}
[159] Literal --> . 'STRING'
	Preceding states: {345}
[160] Literal --> . 'true'
	Preceding states: {345}
[161] Literal --> . 'false'
	Preceding states: {345}
[162] Literal --> . 'null'
	Preceding states: {345}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {345}
[163] TupleExpression --> '<' . TupleComponents '>'
	Preceding states: {341, 343, 345}
	Follow set: {'>'}
[164] TupleExpression --> . TupleProjection
	Preceding states: {345}
[165] TupleComponents --> . Expressions_opt
	Preceding states: {345}
[166] TupleComponents --> . NamedTupleComponents
	Preceding states: {345}
[167] NamedTupleComponents --> . NamedTupleComponent
	Preceding states: {345}
[168] NamedTupleComponents --> . NamedTupleComponents ',' NamedTupleComponent
	Preceding states: {345}
[169] NamedTupleComponent --> . 'ID' ':=' Expression
	Preceding states: {345}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {345}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {345}
[179] OperatorExpression --> . Operator
	Preceding states: {345}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {345}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {345}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {345}
[184] Expressions_opt --> .
	Preceding states: {345}
	Lookahead set: {'>'}
[185] Expressions_opt --> . Expressions
	Preceding states: {345}
[186] Expressions --> . Expression
	Preceding states: {345}
[187] Expressions --> . Expressions ',' Expression
	Preceding states: {345}
[191] Location --> . 'ID'
	Preceding states: {345}
[192] Location --> . TupleProjection
	Preceding states: {345}
[193] Location --> . ArraySlotExpression
	Preceding states: {345}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {345}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {345}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {345}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {345}
-----------------------------
With TupleTypeComponents, go to state 130
With TupleComponents, go to state 281
With TypeConstant, go to state 81
With FunctionType, go to state 82
With TupleType, go to state 83
With ArrayType, go to state 84
With CollectionType, go to state 85
With IntRangeType, go to state 86
With RealRangeType, go to state 87
With TypeTerm, go to state 88
With '(', go to state 343
With '[', go to state 344
With 'forall', go to state 91
With PrimitiveType, go to state 92
With 'string', go to state 93
With 'void', go to state 94
With 'int', go to state 95
With 'boolean', go to state 96
With 'char', go to state 97
With 'real', go to state 98
With Type, go to state 107
With '<', go to state 345
With Types_opt, go to state 131
With NamedTupleTypeComponents, go to state 132
With NamedTupleTypeComponent, go to state 133
With Types, go to state 134
With 'ID', go to state 349
With SetType, go to state 100
With NonSetKind, go to state 346
With SetKind_opt, go to state 102
With SetKind, go to state 347
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 172
With '$', go to state 18
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With TupleProjection, go to state 45
With Expressions_opt, go to state 283
With NamedTupleComponents, go to state 284
With NamedTupleComponent, go to state 285
With Expressions, go to state 173
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48

=============================
STATE NUMBER: 346
=============================
This state has conflicts:

Unresolved S/R conflict: choosing S127	over R83, 	on input '{'
-----------------------------
[81] CollectionType --> NonSetKind . '{' Type_opt '}'
	Preceding states: {341, 343, 345}
[83] CollectionKind --> NonSetKind .
	Preceding states: {341, 343, 345}
	Lookahead set: {'{'}
-----------------------------
With '{', go to state 127

=============================
STATE NUMBER: 347
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R82	over R88, 	on input '{'
-----------------------------
[82] CollectionKind --> SetKind .
	Preceding states: {341, 343, 345, 359}
	Lookahead set: {'{'}
[88] SetKind_opt --> SetKind .
	Preceding states: {341, 343, 345, 359}
	Lookahead set: {'{'}
-----------------------------

=============================
STATE NUMBER: 348
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R40	over R92, 	on input 'as'
Unresolved R/R conflict: choosing R40	over R92, 	on input '.'
Unresolved R/R conflict: choosing R40	over R92, 	on input '['
Unresolved R/R conflict: choosing R40	over R92, 	on input '('
Unresolved R/R conflict: choosing R40	over R92, 	on input ')'
Unresolved R/R conflict: choosing R40	over R92, 	on input ','
Unresolved R/R conflict: choosing R40	over R92, 	on input '!'
Unresolved R/R conflict: choosing R40	over R92, 	on input ']#'
Resolved   S/R conflict: choosing S105	over R40, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R40, R92]}
-----------------------------
[40] Operator --> 'ID' .
	Preceding states: {341, 343}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '.', '[', '(', ')', ':', ',', '!', ']#'}
[92] TypeTerm --> 'ID' .
	Preceding states: {341, 343}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '->', '.', '[', '(', ')', ',', '!', ']#'}
[93] TypeTerm --> 'ID' . '(' Types ')'
	Preceding states: {341, 343}
[191] Location --> 'ID' .
	Preceding states: {341, 343}
	Lookahead set: {'='}
-----------------------------
With '(', go to state 105

=============================
STATE NUMBER: 349
=============================
This state has conflicts:

Unresolved R/R conflict: choosing R40	over R92, 	on input '>'
Unresolved R/R conflict: choosing R40	over R92, 	on input '['
Unresolved R/R conflict: choosing R40	over R92, 	on input ','
Resolved   S/R conflict: choosing S105	over R40, 	on input '('
Resolved   R/S conflict: choosing R40	over S79, 	on input ':'
-----------------------------
[40] Operator --> 'ID' .
	Preceding states: {345}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', '(', ':', ',', '!'}
[43] Typing --> . ':' Type
	Preceding states: {349}
[72] NamedTupleTypeComponent --> 'ID' . Typing
	Preceding states: {345}
	Follow set: {'>', ','}
[92] TypeTerm --> 'ID' .
	Preceding states: {345}
	Lookahead set: {'>', '->', '[', ','}
[93] TypeTerm --> 'ID' . '(' Types ')'
	Preceding states: {345}
[169] NamedTupleComponent --> 'ID' . ':=' Expression
	Preceding states: {345}
[191] Location --> 'ID' .
	Preceding states: {345}
	Lookahead set: {'='}
-----------------------------
With Typing, go to state 136
With '(', go to state 105
With ':=', go to state 289
With ':', go to state 79

=============================
STATE NUMBER: 350
=============================
[128] Expression --> '(' Expression_opt . ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With ')', go to state 353

=============================
STATE NUMBER: 351
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S352	over R41, 	on input ')'
-----------------------------
[41] Typing_opt --> .
	Preceding states: {351}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', ')', '!'}
[42] Typing_opt --> . Typing
	Preceding states: {351}
[43] Typing --> . ':' Type
	Preceding states: {351}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {19, 343}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', ')', '!'}
[152] UntypedExpression --> '(' UntypedExpression . ')'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {19, 343}
-----------------------------
With Typing_opt, go to state 319
With ')', go to state 352
With '@', go to state 321
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 352
=============================
[152] UntypedExpression --> '(' UntypedExpression ')' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 353
=============================
[128] Expression --> '(' Expression_opt ')' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 354
=============================
[140] UntypedExpression --> '#[' ArrayExtension ']#' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 355
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {355}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {355}
[5] Operator --> . '_OPERATOR'
	Preceding states: {355}
[40] Operator --> . 'ID'
	Preceding states: {355}
[82] CollectionKind --> . SetKind
	Preceding states: {355}
[83] CollectionKind --> . NonSetKind
	Preceding states: {355}
[84] SetKind --> . 'set'
	Preceding states: {355}
[85] NonSetKind --> . 'bag'
	Preceding states: {355}
[86] NonSetKind --> . 'list'
	Preceding states: {355}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {355}
[125] Expression --> . Allocation
	Preceding states: {355}
[126] Expression --> . Expression 'as' Type
	Preceding states: {355}
[127] Expression --> . '$' Expression
	Preceding states: {355}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {355}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {355}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {355}
[136] UntypedExpression --> . Literal
	Preceding states: {355}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {355}
[137] UntypedExpression --> CollectionKind '{' . Expressions_opt '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'}'}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {355}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {355}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {355}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {355}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {355}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {355}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {355}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {355}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {355}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {355}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {355}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {355}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {355}
[151] UntypedExpression --> . Sequence
	Preceding states: {355}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {355}
[153] UntypedExpression --> . Comprehension
	Preceding states: {355}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {355}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {355}
[156] Literal --> . 'INT'
	Preceding states: {355}
[157] Literal --> . 'CHAR'
	Preceding states: {355}
[158] Literal --> . 'REAL'
	Preceding states: {355}
[159] Literal --> . 'STRING'
	Preceding states: {355}
[160] Literal --> . 'true'
	Preceding states: {355}
[161] Literal --> . 'false'
	Preceding states: {355}
[162] Literal --> . 'null'
	Preceding states: {355}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {355}
[164] TupleExpression --> . TupleProjection
	Preceding states: {355}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {355}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {355}
[179] OperatorExpression --> . Operator
	Preceding states: {355}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {355}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {355}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {355}
[184] Expressions_opt --> .
	Preceding states: {355}
	Lookahead set: {'}'}
[185] Expressions_opt --> . Expressions
	Preceding states: {355}
[186] Expressions --> . Expression
	Preceding states: {355}
[187] Expressions --> . Expressions ',' Expression
	Preceding states: {355}
[191] Location --> . 'ID'
	Preceding states: {355}
[192] Location --> . TupleProjection
	Preceding states: {355}
[193] Location --> . ArraySlotExpression
	Preceding states: {355}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {355}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {355}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {355}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {355}
-----------------------------
With Expressions_opt, go to state 356
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With Expression, go to state 172
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Expressions, go to state 173
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 356
=============================
[137] UntypedExpression --> CollectionKind '{' Expressions_opt . '}'
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
-----------------------------
With '}', go to state 357

=============================
STATE NUMBER: 357
=============================
[137] UntypedExpression --> CollectionKind '{' Expressions_opt '}' .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 358
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S359	over R131, 	on input '['
-----------------------------
[65] FunctionType --> Type . '->' Type
	Preceding states: {20}
[73] ArrayType --> Type . '[' IndexType ']'
	Preceding states: {20}
[129] Allocation --> 'new' Type . Dimensions_opt
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[130] Allocation --> 'new' Type . Dimensions '=' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'='}
[131] Dimensions_opt --> .
	Preceding states: {358}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[132] Dimensions_opt --> . Dimensions
	Preceding states: {358}
[133] Dimensions --> . Dimension
	Preceding states: {358}
[134] Dimensions --> . Dimensions Dimension
	Preceding states: {358}
[135] Dimension --> . '[' UntypedExpression ']'
	Preceding states: {358}
-----------------------------
With '->', go to state 108
With '[', go to state 359
With Dimensions_opt, go to state 360
With Dimensions, go to state 361
With Dimension, go to state 362

=============================
STATE NUMBER: 359
=============================
This state has conflicts:

Unresolved S/R conflict: choosing S47	over R87, 	on input '{'
-----------------------------
[3] Operator --> . 'OPERATOR_'
	Preceding states: {359}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {359}
[5] Operator --> . '_OPERATOR'
	Preceding states: {359}
[40] Operator --> . 'ID'
	Preceding states: {359}
[73] ArrayType --> Type '[' . IndexType ']'
	Preceding states: {20}
	Follow set: {']'}
[74] IndexType --> . IntType_opt
	Preceding states: {359}
[75] IndexType --> . MapIndexType
	Preceding states: {359}
[76] IntType_opt --> .
	Preceding states: {359}
	Lookahead set: {']'}
[77] IntType_opt --> . 'int'
	Preceding states: {359}
[78] MapIndexType --> . SetType
	Preceding states: {359}
[79] MapIndexType --> . IntRangeType
	Preceding states: {359}
[82] CollectionKind --> . SetKind
	Preceding states: {359}
[83] CollectionKind --> . NonSetKind
	Preceding states: {359}
[84] SetKind --> . 'set'
	Preceding states: {359}
[85] NonSetKind --> . 'bag'
	Preceding states: {359}
[86] NonSetKind --> . 'list'
	Preceding states: {359}
[87] SetKind_opt --> .
	Preceding states: {359}
	Lookahead set: {'{'}
[88] SetKind_opt --> . SetKind
	Preceding states: {359}
[89] SetType --> . SetKind_opt '{' Type_opt '}'
	Preceding states: {359}
[90] IntRangeType --> . 'int' '..' 'int'
	Preceding states: {359}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {359}
[125] Expression --> . Allocation
	Preceding states: {359}
[126] Expression --> . Expression 'as' Type
	Preceding states: {359}
[127] Expression --> . '$' Expression
	Preceding states: {359}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {359}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {359}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {359}
[135] Dimension --> '[' . UntypedExpression ']'
	Preceding states: {358}
	Follow set: {']'}
[136] UntypedExpression --> . Literal
	Preceding states: {359}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {359}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {359}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {359}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {359}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {359}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {359}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {359}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {359}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {359}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {359}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {359}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {359}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {359}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {359}
[151] UntypedExpression --> . Sequence
	Preceding states: {359}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {359}
[153] UntypedExpression --> . Comprehension
	Preceding states: {359}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {359}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {359}
[156] Literal --> . 'INT'
	Preceding states: {359}
[157] Literal --> . 'CHAR'
	Preceding states: {359}
[158] Literal --> . 'REAL'
	Preceding states: {359}
[159] Literal --> . 'STRING'
	Preceding states: {359}
[160] Literal --> . 'true'
	Preceding states: {359}
[161] Literal --> . 'false'
	Preceding states: {359}
[162] Literal --> . 'null'
	Preceding states: {359}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {359}
[164] TupleExpression --> . TupleProjection
	Preceding states: {359}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {359}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {359}
[179] OperatorExpression --> . Operator
	Preceding states: {359}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {359}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {359}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {359}
[191] Location --> . 'ID'
	Preceding states: {359}
[192] Location --> . TupleProjection
	Preceding states: {359}
[193] Location --> . ArraySlotExpression
	Preceding states: {359}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {359}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {359}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {359}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {359}
-----------------------------
With IndexType, go to state 110
With UntypedExpression, go to state 366
With IntType_opt, go to state 111
With MapIndexType, go to state 112
With SetType, go to state 113
With IntRangeType, go to state 114
With SetKind_opt, go to state 102
With SetKind, go to state 347
With 'set', go to state 12
With 'int', go to state 115
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With NonSetKind, go to state 11
With 'bag', go to state 13
With 'list', go to state 14
With Allocation, go to state 16
With Expression, go to state 318
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 360
=============================
[129] Allocation --> 'new' Type Dimensions_opt .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 361
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S365	over R132, 	on input '['
-----------------------------
[130] Allocation --> 'new' Type Dimensions . '=' Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
[132] Dimensions_opt --> Dimensions .
	Preceding states: {358}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[134] Dimensions --> Dimensions . Dimension
	Preceding states: {358}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[135] Dimension --> . '[' UntypedExpression ']'
	Preceding states: {361}
-----------------------------
With '=', go to state 363
With Dimension, go to state 364
With '[', go to state 365

=============================
STATE NUMBER: 362
=============================
[133] Dimensions --> Dimension .
	Preceding states: {358}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 363
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {363}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {363}
[5] Operator --> . '_OPERATOR'
	Preceding states: {363}
[40] Operator --> . 'ID'
	Preceding states: {363}
[82] CollectionKind --> . SetKind
	Preceding states: {363}
[83] CollectionKind --> . NonSetKind
	Preceding states: {363}
[84] SetKind --> . 'set'
	Preceding states: {363}
[85] NonSetKind --> . 'bag'
	Preceding states: {363}
[86] NonSetKind --> . 'list'
	Preceding states: {363}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {363}
[125] Expression --> . Allocation
	Preceding states: {363}
[126] Expression --> . Expression 'as' Type
	Preceding states: {363}
[127] Expression --> . '$' Expression
	Preceding states: {363}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {363}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {363}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {363}
[130] Allocation --> 'new' Type Dimensions '=' . Expression
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[136] UntypedExpression --> . Literal
	Preceding states: {363}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {363}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {363}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {363}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {363}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {363}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {363}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {363}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {363}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {363}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {363}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {363}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {363}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {363}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {363}
[151] UntypedExpression --> . Sequence
	Preceding states: {363}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {363}
[153] UntypedExpression --> . Comprehension
	Preceding states: {363}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {363}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {363}
[156] Literal --> . 'INT'
	Preceding states: {363}
[157] Literal --> . 'CHAR'
	Preceding states: {363}
[158] Literal --> . 'REAL'
	Preceding states: {363}
[159] Literal --> . 'STRING'
	Preceding states: {363}
[160] Literal --> . 'true'
	Preceding states: {363}
[161] Literal --> . 'false'
	Preceding states: {363}
[162] Literal --> . 'null'
	Preceding states: {363}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {363}
[164] TupleExpression --> . TupleProjection
	Preceding states: {363}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {363}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {363}
[179] OperatorExpression --> . Operator
	Preceding states: {363}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {363}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {363}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {363}
[191] Location --> . 'ID'
	Preceding states: {363}
[192] Location --> . TupleProjection
	Preceding states: {363}
[193] Location --> . ArraySlotExpression
	Preceding states: {363}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {363}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {363}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {363}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {363}
-----------------------------
With Expression, go to state 368
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With UntypedExpression, go to state 15
With Allocation, go to state 16
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 364
=============================
[134] Dimensions --> Dimensions Dimension .
	Preceding states: {358}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 365
=============================
[3] Operator --> . 'OPERATOR_'
	Preceding states: {365}
[4] Operator --> . '_OPERATOR_'
	Preceding states: {365}
[5] Operator --> . '_OPERATOR'
	Preceding states: {365}
[40] Operator --> . 'ID'
	Preceding states: {365}
[82] CollectionKind --> . SetKind
	Preceding states: {365}
[83] CollectionKind --> . NonSetKind
	Preceding states: {365}
[84] SetKind --> . 'set'
	Preceding states: {365}
[85] NonSetKind --> . 'bag'
	Preceding states: {365}
[86] NonSetKind --> . 'list'
	Preceding states: {365}
[124] Expression --> . UntypedExpression Typing_opt
	Preceding states: {365}
[125] Expression --> . Allocation
	Preceding states: {365}
[126] Expression --> . Expression 'as' Type
	Preceding states: {365}
[127] Expression --> . '$' Expression
	Preceding states: {365}
[128] Expression --> . '(' Expression_opt ')'
	Preceding states: {365}
[129] Allocation --> . 'new' Type Dimensions_opt
	Preceding states: {365}
[130] Allocation --> . 'new' Type Dimensions '=' Expression
	Preceding states: {365}
[135] Dimension --> '[' . UntypedExpression ']'
	Preceding states: {361}
	Follow set: {']'}
[136] UntypedExpression --> . Literal
	Preceding states: {365}
[137] UntypedExpression --> . CollectionKind '{' Expressions_opt '}'
	Preceding states: {365}
[138] UntypedExpression --> . TupleExpression
	Preceding states: {365}
[139] UntypedExpression --> . Expression '!' Expression
	Preceding states: {365}
[140] UntypedExpression --> . '#[' ArrayExtension ']#'
	Preceding states: {365}
[141] UntypedExpression --> . ArraySlotExpression
	Preceding states: {365}
[142] UntypedExpression --> . OperatorExpression
	Preceding states: {365}
[143] UntypedExpression --> . 'function' FunctionParameters Expression
	Preceding states: {365}
[144] UntypedExpression --> . Expression Arguments
	Preceding states: {365}
[145] UntypedExpression --> . 'return' Expression_opt
	Preceding states: {365}
[146] UntypedExpression --> . 'if' UntypedExpression 'then' Expression 'else' Expression
	Preceding states: {365}
[147] UntypedExpression --> . 'while' UntypedExpression 'do' Expression
	Preceding states: {365}
[148] UntypedExpression --> . 'let' Locals 'in' Expression
	Preceding states: {365}
[149] UntypedExpression --> . Location '=' Expression
	Preceding states: {365}
[150] UntypedExpression --> . Expression '.' Member
	Preceding states: {365}
[151] UntypedExpression --> . Sequence
	Preceding states: {365}
[152] UntypedExpression --> . '(' UntypedExpression ')'
	Preceding states: {365}
[153] UntypedExpression --> . Comprehension
	Preceding states: {365}
[154] UntypedExpression --> . 'foreach' '(' Qualifiers_opt ')' Expression_opt
	Preceding states: {365}
[155] UntypedExpression --> . 'hom' '(' Expression ',' Expression ',' Expression ',' Expression ')'
	Preceding states: {365}
[156] Literal --> . 'INT'
	Preceding states: {365}
[157] Literal --> . 'CHAR'
	Preceding states: {365}
[158] Literal --> . 'REAL'
	Preceding states: {365}
[159] Literal --> . 'STRING'
	Preceding states: {365}
[160] Literal --> . 'true'
	Preceding states: {365}
[161] Literal --> . 'false'
	Preceding states: {365}
[162] Literal --> . 'null'
	Preceding states: {365}
[163] TupleExpression --> . '<' TupleComponents '>'
	Preceding states: {365}
[164] TupleExpression --> . TupleProjection
	Preceding states: {365}
[170] TupleProjection --> . UntypedExpression '@' TupleSelector
	Preceding states: {365}
[178] ArraySlotExpression --> . Expression '[' Expression ']'
	Preceding states: {365}
[179] OperatorExpression --> . Operator
	Preceding states: {365}
[180] OperatorExpression --> . 'OPERATOR_' Expression
	Preceding states: {365}
[181] OperatorExpression --> . Expression '_OPERATOR'
	Preceding states: {365}
[182] OperatorExpression --> . Expression '_OPERATOR_' Expression
	Preceding states: {365}
[191] Location --> . 'ID'
	Preceding states: {365}
[192] Location --> . TupleProjection
	Preceding states: {365}
[193] Location --> . ArraySlotExpression
	Preceding states: {365}
[194] Location --> . Expression '.' 'ID'
	Preceding states: {365}
[197] Sequence --> . '{' ExpressionSequence_opt '}'
	Preceding states: {365}
[201] Comprehension --> . Monoid '{' Expression '|' Qualifiers_opt '}'
	Preceding states: {365}
[202] Monoid --> . '[' Expression ',' Expression ']' InPlace_opt
	Preceding states: {365}
-----------------------------
With UntypedExpression, go to state 366
With 'OPERATOR_', go to state 6
With '_OPERATOR_', go to state 7
With '_OPERATOR', go to state 8
With 'ID', go to state 9
With SetKind, go to state 10
With NonSetKind, go to state 11
With 'set', go to state 12
With 'bag', go to state 13
With 'list', go to state 14
With Allocation, go to state 16
With Expression, go to state 318
With '$', go to state 18
With '(', go to state 19
With 'new', go to state 20
With Literal, go to state 21
With CollectionKind, go to state 22
With TupleExpression, go to state 23
With '#[', go to state 24
With ArraySlotExpression, go to state 25
With OperatorExpression, go to state 26
With 'function', go to state 27
With 'return', go to state 28
With 'if', go to state 29
With 'while', go to state 30
With 'let', go to state 31
With Location, go to state 32
With Sequence, go to state 33
With Comprehension, go to state 34
With 'foreach', go to state 35
With 'hom', go to state 36
With 'INT', go to state 37
With 'CHAR', go to state 38
With 'REAL', go to state 39
With 'STRING', go to state 40
With 'true', go to state 41
With 'false', go to state 42
With 'null', go to state 43
With '<', go to state 44
With TupleProjection, go to state 45
With Operator, go to state 46
With '{', go to state 47
With Monoid, go to state 48
With '[', go to state 49

=============================
STATE NUMBER: 366
=============================
[41] Typing_opt --> .
	Preceding states: {366}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[42] Typing_opt --> . Typing
	Preceding states: {366}
[43] Typing --> . ':' Type
	Preceding states: {366}
[124] Expression --> UntypedExpression . Typing_opt
	Preceding states: {359, 365}
	Follow set: {'_OPERATOR_', '_OPERATOR', 'as', '.', '[', '(', '!'}
[135] Dimension --> '[' UntypedExpression . ']'
	Preceding states: {358, 361}
[170] TupleProjection --> UntypedExpression . '@' TupleSelector
	Preceding states: {359, 365}
-----------------------------
With Typing_opt, go to state 319
With ']', go to state 367
With '@', go to state 321
With Typing, go to state 201
With ':', go to state 79

=============================
STATE NUMBER: 367
=============================
[135] Dimension --> '[' UntypedExpression ']' .
	Preceding states: {358, 361}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '=', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
-----------------------------

=============================
STATE NUMBER: 368
=============================
This state has conflicts:

Resolved   S/R conflict: choosing S163	over R130, 	on input 'as'
Unresolved S/R conflict: choosing S164	over R130, 	on input '!'
Resolved   S/R conflict: choosing S166	over R130, 	on input '.'
Resolved   S/R conflict: choosing S167	over R130, 	on input '['
Resolved   S/R conflict: choosing S170	over R130, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R130, S168],1:[R130, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {363}
[130] Allocation --> 'new' Type Dimensions '=' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {363}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {363}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {363}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {363}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {363}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {363}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {368}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {363}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 369
=============================
This state has conflicts:

Resolved   R/S conflict: choosing R127	over S163, 	on input 'as'
Resolved   R/S conflict: choosing R127	over S164, 	on input '!'
Resolved   R/S conflict: choosing R127	over S166, 	on input '.'
Resolved   S/R conflict: choosing S167	over R127, 	on input '['
Resolved   S/R conflict: choosing S170	over R127, 	on input '('
-----------------------------
This state has dynamic actions:
	
{0:[R127, S168],1:[R127, S169]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {18}
[127] Expression --> '$' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {18}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {18}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {18}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {18}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {18}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {18}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {369}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {18}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170

=============================
STATE NUMBER: 370
=============================
[14] Statement --> Expression $ACTION2$ . EOS
	Preceding states: {2, 4}
	Follow set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
[38] $ACTION11$ --> .
	Preceding states: {370}
	Lookahead set: {';'}
[39] EOS --> . $ACTION11$ ';'
	Preceding states: {370}
-----------------------------
With EOS, go to state 371
With $ACTION11$, go to state 243

=============================
STATE NUMBER: 371
=============================
[14] Statement --> Expression $ACTION2$ EOS .
	Preceding states: {2, 4}
	Lookahead set: {'$E_O_I$', 'error', 'OPERATOR_', '_OPERATOR_', '_OPERATOR', 'INT', 'REAL', 'CHAR', 'STRING', 'ID', '<', '$', '[', '(', '#', '?', ';', 'define', 'structure', '{', 'class', 'set', 'bag', 'list', 'new', '#[', 'function', 'return', 'if', 'while', 'let', 'foreach', 'hom', 'true', 'false', 'null'}
-----------------------------

=============================
STATE NUMBER: 372
=============================
This state has dynamic actions:
	
{0:[S163, R180],1:[S166, R180],2:[S167, R180],3:[S164, R180],4:[R180, S168],5:[R180, S169],6:[R180, S170]}
-----------------------------
[126] Expression --> Expression . 'as' Type
	Preceding states: {6}
[139] UntypedExpression --> Expression . '!' Expression
	Preceding states: {6}
[144] UntypedExpression --> Expression . Arguments
	Preceding states: {6}
	Follow set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[150] UntypedExpression --> Expression . '.' Member
	Preceding states: {6}
[178] ArraySlotExpression --> Expression . '[' Expression ']'
	Preceding states: {6}
[180] OperatorExpression --> 'OPERATOR_' Expression .
	Preceding states: {2, 4, 6, 18, 19, 24, 28, 29, 30, 44, 47, 49, 52, 161, 164, 167, 169, 170, 174, 206, 257, 263, 265, 270, 272, 275, 289, 292, 294, 296, 298, 301, 303, 306, 313, 320, 327, 329, 332, 339, 341, 343, 344, 345, 355, 359, 363, 365}
	Lookahead set: {'_OPERATOR_', '_OPERATOR', '@', 'as', '>', '.', '[', ']', '(', ')', ';', '}', ':', ',', '!', ']#', 'then', 'else', 'do', '|', '<-'}
[181] OperatorExpression --> Expression . '_OPERATOR'
	Preceding states: {6}
[182] OperatorExpression --> Expression . '_OPERATOR_' Expression
	Preceding states: {6}
[183] Arguments --> . '(' Expressions_opt ')'
	Preceding states: {372}
[194] Location --> Expression . '.' 'ID'
	Preceding states: {6}
-----------------------------
With 'as', go to state 163
With '!', go to state 164
With Arguments, go to state 165
With '.', go to state 166
With '[', go to state 167
With '_OPERATOR', go to state 168
With '_OPERATOR_', go to state 169
With '(', go to state 170
!!! WARNING: unresolved conflicts: 30 shift/reduce; 18 reduce/reduce
*** Compressing parsing tables ... 
***	58 rows eliminated in action table
***	247 rows eliminated in goto table
*** Table compression completed in 10 ms


ACTION TABLE:

	[1]	[2]	[3]	[4]	[5]	[6]	[7]	[8]	[9]	[10]	[11]	[12]	[13]	[14]	[15]	[16]	[17]	[18]	[19]	[20]	[21]	[22]	[23]	[24]	[25]	[26]	[27]	[28]	[29]	[30]	[31]	[32]	[33]	[34]	[35]	[36]	[37]	[38]	[39]	[40]	[41]	[42]	[43]	[44]	[45]	[46]	[47]	[48]	[49]	[50]	[51]	[52]	[53]	[54]	[55]	[56]	[57]	[58]	[59]	[60]	[61]	[62]	[63]	[64]	[65]	[66]	[67]	[68]	[69]	[70]	[71]	[72]	[73]
	
[0]	 R6	 R6	 - 	 S3	 R6	 R6	 R6	 - 	 - 	 R6	 R6	 R6	 R6	 R6	 - 	 R6	 - 	 - 	 - 	 R6	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 R6	 - 	 - 	 - 	 - 	 - 	 - 	 R6	 R6	 - 	 R6	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R6	 R6	 R6	 - 	 - 	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 - 	 - 	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 R6	 R6	 - 	 - 	 - 
[1]	 A	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[2]	 R1	 S53	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 S50	 S52	 S54	 S55	 - 	 - 	 - 	 - 	 - 	 - 	 S57	 S47	 - 	 S58	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[3]	 R6	 R6	 - 	 - 	 R6	 R6	 R6	 - 	 - 	 R6	 R6	 R6	 R6	 R6	 - 	 R6	 - 	 - 	 - 	 R6	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 R6	 - 	 - 	 - 	 - 	 - 	 - 	 R6	 R6	 - 	 R6	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R6	 R6	 R6	 - 	 - 	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 - 	 - 	 R6	 - 	 R6	 - 	 R6	 R6	 R6	 R6	 R6	 - 	 - 	 - 
[4]	 R2	 S53	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 S50	 S52	 S54	 S55	 - 	 - 	 - 	 - 	 - 	 - 	 S57	 S47	 - 	 S58	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[5]	 R7	 R7	 - 	 - 	 R7	 R7	 R7	 - 	 - 	 R7	 R7	 R7	 R7	 R7	 - 	 R7	 - 	 - 	 - 	 R7	 R7	 - 	 R7	 - 	 R7	 R7	 R7	 R7	 - 	 - 	 - 	 - 	 - 	 - 	 R7	 R7	 - 	 R7	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R7	 R7	 R7	 - 	 - 	 R7	 - 	 R7	 - 	 R7	 R7	 R7	 - 	 - 	 R7	 - 	 R7	 - 	 R7	 R7	 R7	 R7	 R7	 - 	 - 	 - 
[6]	 - 	 - 	 - 	 - 	 S6	 D0	 D1	 R3	 R3	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 R3	 - 	 R3	 S18	 D3	 R3	 D2	 R3	 - 	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R3	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R3	 S12	 S13	 S14	 - 	 - 	 S20	 R3	 S24	 R3	 S27	 S28	 S29	 R3	 R3	 S30	 R3	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 R3	 R3
[7]	 - 	 - 	 - 	 - 	 - 	 R4	 R4	 R4	 R4	 - 	 - 	 - 	 - 	 - 	 R4	 - 	 R4	 - 	 R4	 - 	 R4	 R4	 R4	 R4	 - 	 - 	 R4	 - 	 - 	 - 	 - 	 R4	 - 	 - 	 - 	 - 	 R4	 - 	 R4	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R4	 - 	 - 	 - 	 - 	 - 	 - 	 R4	 - 	 R4	 - 	 - 	 - 	 R4	 R4	 - 	 R4	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R4	 R4
[8]	 - 	 - 	 - 	 - 	 - 	 R5	 R5	 R5	 R5	 - 	 - 	 - 	 - 	 - 	 R5	 - 	 R5	 - 	 R5	 - 	 R5	 R5	 R5	 R5	 - 	 - 	 R5	 - 	 - 	 - 	 - 	 R5	 - 	 - 	 - 	 - 	 R5	 - 	 R5	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R5	 - 	 - 	 - 	 - 	 - 	 - 	 R5	 - 	 R5	 - 	 - 	 - 	 R5	 R5	 - 	 R5	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R5	 R5
[9]	 - 	 - 	 - 	 - 	 - 	 R40	 R40	 R40	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 R40	 - 	 R40	 R40	 R40	 R40	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 R191	 - 	 - 	 - 	 - 	 R40	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 R40	 - 	 - 	 - 	 R40	 R40	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 R40
[10]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R82	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[11]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R83	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[12]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R84	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[13]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R85	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[14]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R86	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[15]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 R41	 R41	 R41	 R41	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 - 	 - 	 R41	 R41	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 R41
[16]	 - 	 - 	 - 	 - 	 - 	 R125	 R125	 R125	 R125	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R125	 - 	 R125	 - 	 R125	 R125	 R125	 R125	 - 	 - 	 R125	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R125	 - 	 R125	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R125	 - 	 - 	 - 	 - 	 - 	 - 	 R125	 - 	 R125	 - 	 - 	 - 	 R125	 R125	 - 	 R125	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R125	 R125
[17]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 R13	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[18]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[19]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 R122	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[20]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[21]	 - 	 - 	 - 	 - 	 - 	 R136	 R136	 R136	 R136	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R136	 - 	 R136	 - 	 R136	 R136	 R136	 R136	 - 	 - 	 R136	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R136	 - 	 R136	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R136	 - 	 - 	 - 	 - 	 - 	 - 	 R136	 - 	 R136	 - 	 - 	 - 	 R136	 R136	 - 	 R136	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R136	 R136
[22]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S355	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[23]	 - 	 - 	 - 	 - 	 - 	 R138	 R138	 R138	 R138	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R138	 - 	 R138	 - 	 R138	 R138	 R138	 R138	 - 	 - 	 R138	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R138	 - 	 R138	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R138	 - 	 - 	 - 	 - 	 - 	 - 	 R138	 - 	 R138	 - 	 - 	 - 	 R138	 R138	 - 	 R138	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R138	 R138
[24]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[25]	 - 	 - 	 - 	 - 	 - 	 R141	 R141	 R141	 R141	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R141	 - 	 R141	 - 	 R141	 R141	 R141	 R141	 - 	 - 	 R141	 - 	 - 	 - 	 - 	 R193	 - 	 - 	 - 	 - 	 R141	 - 	 R141	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R141	 - 	 - 	 - 	 - 	 - 	 - 	 R141	 - 	 R141	 - 	 - 	 - 	 R141	 R141	 - 	 R141	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R141	 R141
[26]	 - 	 - 	 - 	 - 	 - 	 R142	 R142	 R142	 R142	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R142	 - 	 R142	 - 	 R142	 R142	 R142	 R142	 - 	 - 	 R142	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R142	 - 	 R142	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R142	 - 	 - 	 - 	 - 	 - 	 - 	 R142	 - 	 R142	 - 	 - 	 - 	 R142	 R142	 - 	 R142	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R142	 R142
[27]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S195	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[28]	 - 	 - 	 - 	 - 	 S6	 D0	 D1	 R122	 R122	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 R122	 - 	 R122	 S18	 S49	 R122	 S19	 R122	 - 	 - 	 R122	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R122	 - 	 R122	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R122	 S12	 S13	 S14	 - 	 - 	 S20	 R122	 S24	 R122	 S27	 S28	 S29	 R122	 R122	 S30	 R122	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 R122	 R122
[29]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[30]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[31]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[32]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S306	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[33]	 - 	 - 	 - 	 - 	 - 	 R151	 R151	 R151	 R151	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R151	 - 	 R151	 - 	 R151	 R151	 R151	 R151	 - 	 - 	 R151	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R151	 - 	 R151	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R151	 - 	 - 	 - 	 - 	 - 	 - 	 R151	 - 	 R151	 - 	 - 	 - 	 R151	 R151	 - 	 R151	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R151	 R151
[34]	 - 	 - 	 - 	 - 	 - 	 R153	 R153	 R153	 R153	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R153	 - 	 R153	 - 	 R153	 R153	 R153	 R153	 - 	 - 	 R153	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R153	 - 	 R153	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R153	 - 	 - 	 - 	 - 	 - 	 - 	 R153	 - 	 R153	 - 	 - 	 - 	 R153	 R153	 - 	 R153	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R153	 R153
[35]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S301	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[36]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S292	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[37]	 - 	 - 	 - 	 - 	 - 	 R156	 R156	 R156	 R156	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R156	 - 	 R156	 - 	 R156	 R156	 R156	 R156	 - 	 - 	 R156	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R156	 - 	 R156	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R156	 - 	 - 	 - 	 - 	 - 	 - 	 R156	 - 	 R156	 - 	 - 	 - 	 R156	 R156	 - 	 R156	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R156	 R156
[38]	 - 	 - 	 - 	 - 	 - 	 R157	 R157	 R157	 R157	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R157	 - 	 R157	 - 	 R157	 R157	 R157	 R157	 - 	 - 	 R157	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R157	 - 	 R157	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R157	 - 	 - 	 - 	 - 	 - 	 - 	 R157	 - 	 R157	 - 	 - 	 - 	 R157	 R157	 - 	 R157	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R157	 R157
[39]	 - 	 - 	 - 	 - 	 - 	 R158	 R158	 R158	 R158	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R158	 - 	 R158	 - 	 R158	 R158	 R158	 R158	 - 	 - 	 R158	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R158	 - 	 R158	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R158	 - 	 - 	 - 	 - 	 - 	 - 	 R158	 - 	 R158	 - 	 - 	 - 	 R158	 R158	 - 	 R158	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R158	 R158
[40]	 - 	 - 	 - 	 - 	 - 	 R159	 R159	 R159	 R159	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R159	 - 	 R159	 - 	 R159	 R159	 R159	 R159	 - 	 - 	 R159	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R159	 - 	 R159	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R159	 - 	 - 	 - 	 - 	 - 	 - 	 R159	 - 	 R159	 - 	 - 	 - 	 R159	 R159	 - 	 R159	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R159	 R159
[41]	 - 	 - 	 - 	 - 	 - 	 R160	 R160	 R160	 R160	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R160	 - 	 R160	 - 	 R160	 R160	 R160	 R160	 - 	 - 	 R160	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R160	 - 	 R160	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R160	 - 	 - 	 - 	 - 	 - 	 - 	 R160	 - 	 R160	 - 	 - 	 - 	 R160	 R160	 - 	 R160	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R160	 R160
[42]	 - 	 - 	 - 	 - 	 - 	 R161	 R161	 R161	 R161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R161	 - 	 R161	 - 	 R161	 R161	 R161	 R161	 - 	 - 	 R161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R161	 - 	 R161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R161	 - 	 - 	 - 	 - 	 - 	 - 	 R161	 - 	 R161	 - 	 - 	 - 	 R161	 R161	 - 	 R161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R161	 R161
[43]	 - 	 - 	 - 	 - 	 - 	 R162	 R162	 R162	 R162	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R162	 - 	 R162	 - 	 R162	 R162	 R162	 R162	 - 	 - 	 R162	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R162	 - 	 R162	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R162	 - 	 - 	 - 	 - 	 - 	 - 	 R162	 - 	 R162	 - 	 - 	 - 	 R162	 R162	 - 	 R162	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R162	 R162
[44]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S282	 - 	 S44	 R184	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[45]	 - 	 - 	 - 	 - 	 - 	 R164	 R164	 R164	 R164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R164	 - 	 R164	 - 	 R164	 R164	 R164	 R164	 - 	 - 	 R164	 - 	 - 	 - 	 - 	 R192	 - 	 - 	 - 	 - 	 R164	 - 	 R164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R164	 - 	 - 	 - 	 - 	 - 	 - 	 R164	 - 	 R164	 - 	 - 	 - 	 R164	 R164	 - 	 R164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R164	 R164
[46]	 - 	 - 	 - 	 - 	 - 	 R179	 R179	 R179	 R179	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R179	 - 	 R179	 - 	 R179	 R179	 R179	 R179	 - 	 - 	 R179	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R179	 - 	 R179	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R179	 - 	 - 	 - 	 - 	 - 	 - 	 R179	 - 	 R179	 - 	 - 	 - 	 R179	 R179	 - 	 R179	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R179	 R179
[47]	 - 	 - 	 - 	 - 	 D0	 D1	 D2	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R198	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[48]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S263	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[49]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[50]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S251	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[51]	 R10	 R10	 - 	 - 	 R10	 R10	 R10	 - 	 - 	 R10	 R10	 R10	 R10	 R10	 - 	 R10	 - 	 - 	 - 	 R10	 R10	 - 	 R10	 - 	 R10	 R10	 R10	 R10	 - 	 - 	 - 	 - 	 - 	 - 	 R10	 R10	 - 	 R10	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R10	 R10	 R10	 - 	 - 	 R10	 - 	 R10	 - 	 R10	 R10	 R10	 - 	 - 	 R10	 - 	 R10	 - 	 R10	 R10	 R10	 R10	 R10	 - 	 - 	 - 
[52]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[53]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R15	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[54]	 R17	 R17	 - 	 - 	 R17	 R17	 R17	 - 	 - 	 R17	 R17	 R17	 R17	 R17	 - 	 R17	 - 	 - 	 - 	 R17	 R17	 - 	 R17	 - 	 R17	 R17	 R17	 R17	 - 	 - 	 - 	 - 	 - 	 - 	 R17	 R17	 - 	 R17	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R17	 R17	 R17	 - 	 - 	 R17	 - 	 R17	 - 	 R17	 R17	 R17	 - 	 - 	 R17	 - 	 R17	 - 	 R17	 R17	 R17	 R17	 R17	 - 	 - 	 - 
[55]	 - 	 - 	 S217	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S218	 S219	 - 	 - 	 - 	 S220	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[56]	 R19	 R19	 - 	 - 	 R19	 R19	 R19	 - 	 - 	 R19	 R19	 R19	 R19	 R19	 - 	 R19	 - 	 - 	 - 	 R19	 R19	 - 	 R19	 - 	 R19	 R19	 R19	 R19	 - 	 - 	 - 	 - 	 - 	 - 	 R19	 R19	 - 	 R19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R19	 R19	 R19	 - 	 - 	 R19	 - 	 R19	 - 	 R19	 R19	 R19	 - 	 - 	 R19	 - 	 R19	 - 	 R19	 R19	 R19	 R19	 R19	 - 	 - 	 - 
[57]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R30	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[58]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S59	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[59]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R33	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R33	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[60]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R98	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[61]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S69	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[62]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[63]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S65	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S66	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[64]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R100	 - 	 - 	 - 	 - 	 R100	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R100	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[65]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R99	 - 	 - 	 - 	 R99	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[66]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S67	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[67]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R101	 - 	 - 	 - 	 - 	 R101	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R101	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[68]	 R109	 R109	 - 	 - 	 R109	 R109	 R109	 - 	 - 	 R109	 R109	 R109	 R109	 R109	 - 	 R109	 - 	 - 	 - 	 R109	 R109	 - 	 R109	 - 	 R109	 R109	 R109	 R109	 - 	 - 	 - 	 - 	 - 	 - 	 R109	 S188	 - 	 R109	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R109	 R109	 R109	 - 	 - 	 R109	 - 	 R109	 - 	 R109	 R109	 R109	 - 	 - 	 R109	 - 	 R109	 - 	 R109	 R109	 R109	 R109	 R109	 - 	 - 	 - 
[69]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R103	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R103	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R103	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[70]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S73	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S71	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S74	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[71]	 R102	 R102	 - 	 - 	 R102	 R102	 R102	 - 	 - 	 R102	 R102	 R102	 R102	 R102	 - 	 R102	 - 	 - 	 - 	 R102	 R102	 - 	 R102	 - 	 R102	 R102	 R102	 R102	 - 	 - 	 - 	 - 	 - 	 - 	 R102	 R102	 - 	 R102	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R102	 R102	 R102	 - 	 - 	 R102	 - 	 R102	 - 	 R102	 R102	 R102	 - 	 - 	 R102	 - 	 R102	 - 	 R102	 R102	 R102	 R102	 R102	 - 	 - 	 - 
[72]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R104	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R104	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R104	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[73]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[74]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[75]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[76]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 R3	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[77]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[78]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S158	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[79]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[80]	 - 	 - 	 - 	 - 	 - 	 R43	 R43	 R43	 R43	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R43	 S108	 R43	 - 	 S109	 R43	 R43	 R43	 - 	 - 	 R43	 - 	 - 	 - 	 - 	 R43	 - 	 - 	 - 	 - 	 R43	 - 	 R43	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R43	 - 	 - 	 - 	 - 	 - 	 - 	 R43	 - 	 R43	 - 	 - 	 - 	 R43	 R43	 - 	 R43	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R43	 R43
[81]	 - 	 - 	 - 	 - 	 - 	 R46	 R46	 R46	 R46	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R46	 R46	 R46	 - 	 R46	 R46	 R46	 R46	 - 	 - 	 R46	 - 	 - 	 - 	 - 	 R46	 - 	 - 	 - 	 - 	 R46	 - 	 R46	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R46	 - 	 - 	 - 	 - 	 - 	 - 	 R46	 - 	 R46	 - 	 - 	 - 	 R46	 R46	 - 	 R46	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R46	 R46
[82]	 - 	 - 	 - 	 - 	 - 	 R47	 R47	 R47	 R47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R47	 R47	 R47	 - 	 R47	 R47	 R47	 R47	 - 	 - 	 R47	 - 	 - 	 - 	 - 	 R47	 - 	 - 	 - 	 - 	 R47	 - 	 R47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R47	 - 	 - 	 - 	 - 	 - 	 - 	 R47	 - 	 R47	 - 	 - 	 - 	 R47	 R47	 - 	 R47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R47	 R47
[83]	 - 	 - 	 - 	 - 	 - 	 R48	 R48	 R48	 R48	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R48	 R48	 R48	 - 	 R48	 R48	 R48	 R48	 - 	 - 	 R48	 - 	 - 	 - 	 - 	 R48	 - 	 - 	 - 	 - 	 R48	 - 	 R48	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R48	 - 	 - 	 - 	 - 	 - 	 - 	 R48	 - 	 R48	 - 	 - 	 - 	 R48	 R48	 - 	 R48	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R48	 R48
[84]	 - 	 - 	 - 	 - 	 - 	 R49	 R49	 R49	 R49	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R49	 R49	 R49	 - 	 R49	 R49	 R49	 R49	 - 	 - 	 R49	 - 	 - 	 - 	 - 	 R49	 - 	 - 	 - 	 - 	 R49	 - 	 R49	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R49	 - 	 - 	 - 	 - 	 - 	 - 	 R49	 - 	 R49	 - 	 - 	 - 	 R49	 R49	 - 	 R49	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R49	 R49
[85]	 - 	 - 	 - 	 - 	 - 	 R50	 R50	 R50	 R50	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R50	 R50	 R50	 - 	 R50	 R50	 R50	 R50	 - 	 - 	 R50	 - 	 - 	 - 	 - 	 R50	 - 	 - 	 - 	 - 	 R50	 - 	 R50	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R50	 - 	 - 	 - 	 - 	 - 	 - 	 R50	 - 	 R50	 - 	 - 	 - 	 R50	 R50	 - 	 R50	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R50	 R50
[86]	 - 	 - 	 - 	 - 	 - 	 R51	 R51	 R51	 R51	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R51	 R51	 R51	 - 	 R51	 R51	 R51	 R51	 - 	 - 	 R51	 - 	 - 	 - 	 - 	 R51	 - 	 - 	 - 	 - 	 R51	 - 	 R51	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R51	 - 	 - 	 - 	 - 	 - 	 - 	 R51	 - 	 R51	 - 	 - 	 - 	 R51	 R51	 - 	 R51	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R51	 R51
[87]	 - 	 - 	 - 	 - 	 - 	 R52	 R52	 R52	 R52	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R52	 R52	 R52	 - 	 R52	 R52	 R52	 R52	 - 	 - 	 R52	 - 	 - 	 - 	 - 	 R52	 - 	 - 	 - 	 - 	 R52	 - 	 R52	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R52	 - 	 - 	 - 	 - 	 - 	 - 	 R52	 - 	 R52	 - 	 - 	 - 	 R52	 R52	 - 	 R52	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R52	 R52
[88]	 - 	 - 	 - 	 - 	 - 	 R53	 R53	 R53	 R53	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R53	 R53	 R53	 - 	 R53	 R53	 R53	 R53	 - 	 - 	 R53	 - 	 - 	 - 	 - 	 R53	 - 	 - 	 - 	 - 	 R53	 - 	 R53	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R53	 - 	 - 	 - 	 - 	 - 	 - 	 R53	 - 	 R53	 - 	 - 	 - 	 R53	 R53	 - 	 R53	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R53	 R53
[89]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 R44	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[90]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S94	 S148	 S96	 S97	 S149	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[91]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R56	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[92]	 - 	 - 	 - 	 - 	 - 	 R58	 R58	 R58	 R58	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R58	 R58	 R58	 - 	 R58	 R58	 R58	 R58	 - 	 - 	 R58	 - 	 - 	 - 	 - 	 R58	 - 	 - 	 - 	 - 	 R58	 - 	 R58	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R58	 - 	 - 	 - 	 - 	 - 	 - 	 R58	 - 	 R58	 - 	 - 	 - 	 R58	 R58	 - 	 R58	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R58	 R58
[93]	 - 	 - 	 - 	 - 	 - 	 R59	 R59	 R59	 R59	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R59	 R59	 R59	 - 	 R59	 R59	 R59	 R59	 - 	 - 	 R59	 - 	 - 	 - 	 - 	 R59	 - 	 - 	 - 	 - 	 R59	 - 	 R59	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R59	 - 	 - 	 - 	 - 	 - 	 - 	 R59	 - 	 R59	 - 	 - 	 - 	 R59	 R59	 - 	 R59	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R59	 R59
[94]	 - 	 - 	 - 	 - 	 - 	 R60	 R60	 R60	 R60	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R60	 R60	 R60	 - 	 R60	 R60	 R60	 R60	 - 	 - 	 R60	 - 	 - 	 - 	 - 	 R60	 - 	 - 	 - 	 - 	 R60	 - 	 R60	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R60	 - 	 - 	 - 	 - 	 - 	 - 	 R60	 - 	 R60	 - 	 - 	 - 	 R60	 R60	 - 	 R60	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R60	 R60
[95]	 - 	 - 	 - 	 - 	 - 	 R61	 R61	 R61	 R61	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R61	 R61	 R61	 - 	 R61	 R61	 R61	 R61	 - 	 - 	 R61	 - 	 - 	 - 	 - 	 R61	 - 	 - 	 - 	 - 	 R61	 - 	 R61	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R61	 - 	 - 	 - 	 S116	 - 	 - 	 R61	 - 	 R61	 - 	 - 	 - 	 R61	 R61	 - 	 R61	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R61	 R61
[96]	 - 	 - 	 - 	 - 	 - 	 R62	 R62	 R62	 R62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R62	 R62	 R62	 - 	 R62	 R62	 R62	 R62	 - 	 - 	 R62	 - 	 - 	 - 	 - 	 R62	 - 	 - 	 - 	 - 	 R62	 - 	 R62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R62	 - 	 - 	 - 	 - 	 - 	 - 	 R62	 - 	 R62	 - 	 - 	 - 	 R62	 R62	 - 	 R62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R62	 R62
[97]	 - 	 - 	 - 	 - 	 - 	 R63	 R63	 R63	 R63	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R63	 R63	 R63	 - 	 R63	 R63	 R63	 R63	 - 	 - 	 R63	 - 	 - 	 - 	 - 	 R63	 - 	 - 	 - 	 - 	 R63	 - 	 R63	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R63	 - 	 - 	 - 	 - 	 - 	 - 	 R63	 - 	 R63	 - 	 - 	 - 	 R63	 R63	 - 	 R63	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R63	 R63
[98]	 - 	 - 	 - 	 - 	 - 	 R64	 R64	 R64	 R64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R64	 R64	 R64	 - 	 R64	 R64	 R64	 R64	 - 	 - 	 R64	 - 	 - 	 - 	 - 	 R64	 - 	 - 	 - 	 - 	 R64	 - 	 R64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R64	 - 	 - 	 - 	 S141	 - 	 - 	 R64	 - 	 R64	 - 	 - 	 - 	 R64	 R64	 - 	 R64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R64	 R64
[99]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S135	 - 	 S99	 R94	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[100]	 - 	 - 	 - 	 - 	 - 	 R80	 R80	 R80	 R80	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R80	 R80	 R80	 - 	 R80	 R80	 R80	 R80	 - 	 - 	 R80	 - 	 - 	 - 	 - 	 R80	 - 	 - 	 - 	 - 	 R80	 - 	 R80	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R80	 - 	 - 	 - 	 - 	 - 	 - 	 R80	 - 	 R80	 - 	 - 	 - 	 R80	 R80	 - 	 R80	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R80	 R80
[101]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[102]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S123	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[103]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R88	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[104]	 - 	 - 	 - 	 - 	 - 	 R92	 R92	 R92	 R92	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 R92	 R92	 - 	 R92	 R92	 S105	 R92	 - 	 - 	 R92	 - 	 - 	 - 	 - 	 R92	 - 	 - 	 - 	 - 	 R92	 - 	 R92	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 - 	 R92	 - 	 - 	 - 	 R92	 R92	 - 	 R92	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 R92
[105]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[106]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S120	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S121	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[107]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R96	 S108	 - 	 - 	 S109	 - 	 - 	 R96	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R96	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[108]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[109]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R76	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 - 	 - 	 - 	 S115	 - 	 - 	 - 	 - 	 S12	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[110]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S118	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[111]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R74	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[112]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R75	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[113]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R78	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[114]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[115]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S116	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[116]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S117	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[117]	 - 	 - 	 - 	 - 	 - 	 R90	 R90	 R90	 R90	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R90	 R90	 R90	 - 	 R90	 R90	 R90	 R90	 - 	 - 	 R90	 - 	 - 	 - 	 - 	 R90	 - 	 - 	 - 	 - 	 R90	 - 	 R90	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R90	 - 	 - 	 - 	 - 	 - 	 - 	 R90	 - 	 R90	 - 	 - 	 - 	 R90	 R90	 - 	 R90	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R90	 R90
[118]	 - 	 - 	 - 	 - 	 - 	 R73	 R73	 R73	 R73	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R73	 R73	 R73	 - 	 R73	 R73	 R73	 R73	 - 	 - 	 R73	 - 	 - 	 - 	 - 	 R73	 - 	 - 	 - 	 - 	 R73	 - 	 R73	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R73	 - 	 - 	 - 	 - 	 - 	 - 	 R73	 - 	 R73	 - 	 - 	 - 	 R73	 R73	 - 	 R73	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R73	 R73
[119]	 - 	 - 	 - 	 - 	 - 	 R65	 R65	 R65	 R65	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R65	 S108	 R65	 - 	 S109	 R65	 R65	 R65	 - 	 - 	 R65	 - 	 - 	 - 	 - 	 R65	 - 	 - 	 - 	 - 	 R65	 - 	 R65	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R65	 - 	 - 	 - 	 - 	 - 	 - 	 R65	 - 	 R65	 - 	 - 	 - 	 R65	 R65	 - 	 R65	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R65	 R65
[120]	 - 	 - 	 - 	 - 	 - 	 R93	 R93	 R93	 R93	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R93	 R93	 R93	 - 	 R93	 R93	 R93	 R93	 - 	 - 	 R93	 - 	 - 	 - 	 - 	 R93	 - 	 - 	 - 	 - 	 R93	 - 	 R93	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R93	 - 	 - 	 - 	 - 	 - 	 - 	 R93	 - 	 R93	 - 	 - 	 - 	 R93	 R93	 - 	 R93	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R93	 R93
[121]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[122]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R97	 S108	 - 	 - 	 S109	 - 	 - 	 R97	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R97	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[123]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 R44	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[124]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S126	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[125]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S108	 - 	 - 	 S109	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R45	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[126]	 - 	 - 	 - 	 - 	 - 	 R89	 R89	 R89	 R89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R89	 R89	 R89	 - 	 R89	 R89	 R89	 R89	 - 	 - 	 R89	 - 	 - 	 - 	 - 	 R89	 - 	 - 	 - 	 - 	 R89	 - 	 R89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R89	 - 	 - 	 - 	 - 	 - 	 - 	 R89	 - 	 R89	 - 	 - 	 - 	 R89	 R89	 - 	 R89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R89	 R89
[127]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 R44	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[128]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S129	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[129]	 - 	 - 	 - 	 - 	 - 	 R81	 R81	 R81	 R81	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R81	 R81	 R81	 - 	 R81	 R81	 R81	 R81	 - 	 - 	 R81	 - 	 - 	 - 	 - 	 R81	 - 	 - 	 - 	 - 	 R81	 - 	 R81	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R81	 - 	 - 	 - 	 - 	 - 	 - 	 R81	 - 	 R81	 - 	 - 	 - 	 R81	 R81	 - 	 R81	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R81	 R81
[130]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S140	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[131]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R68	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[132]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R69	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[133]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R70	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R70	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R70	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[134]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R95	 - 	 - 	 - 	 - 	 - 	 - 	 R95	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S121	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[135]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 R92	 - 	 - 	 R92	 - 	 S105	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[136]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R72	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R72	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R72	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[137]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S139	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[138]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R71	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R71	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R71	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[139]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[140]	 - 	 - 	 - 	 - 	 - 	 R67	 R67	 R67	 R67	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R67	 R67	 R67	 - 	 R67	 R67	 R67	 R67	 - 	 - 	 R67	 - 	 - 	 - 	 - 	 R67	 - 	 - 	 - 	 - 	 R67	 - 	 R67	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R67	 - 	 - 	 - 	 - 	 - 	 - 	 R67	 - 	 R67	 - 	 - 	 - 	 R67	 R67	 - 	 R67	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R67	 R67
[141]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S142	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[142]	 - 	 - 	 - 	 - 	 - 	 R91	 R91	 R91	 R91	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R91	 R91	 R91	 - 	 R91	 R91	 R91	 R91	 - 	 - 	 R91	 - 	 - 	 - 	 - 	 R91	 - 	 - 	 - 	 - 	 R91	 - 	 R91	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R91	 - 	 - 	 - 	 - 	 - 	 - 	 R91	 - 	 R91	 - 	 - 	 - 	 R91	 R91	 - 	 R91	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R91	 R91
[143]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[144]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S145	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S66	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[145]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[146]	 - 	 - 	 - 	 - 	 - 	 R57	 R57	 R57	 R57	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R57	 R57	 R57	 - 	 S109	 R57	 R57	 R57	 - 	 - 	 R57	 - 	 - 	 - 	 - 	 R57	 - 	 - 	 - 	 - 	 R57	 - 	 R57	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R57	 - 	 - 	 - 	 - 	 - 	 - 	 R57	 - 	 R57	 - 	 - 	 - 	 R57	 R57	 - 	 R57	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R57	 R57
[147]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S150	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[148]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R61	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[149]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R64	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[150]	 - 	 - 	 - 	 - 	 - 	 R55	 R55	 R55	 R55	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R55	 R55	 R55	 - 	 R55	 R55	 R55	 R55	 - 	 - 	 R55	 - 	 - 	 - 	 - 	 R55	 - 	 - 	 - 	 - 	 R55	 - 	 R55	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R55	 - 	 - 	 - 	 - 	 - 	 - 	 R55	 - 	 R55	 - 	 - 	 - 	 R55	 R55	 - 	 R55	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R55	 R55
[151]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S157	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[152]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S154	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[153]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S108	 - 	 - 	 S109	 - 	 - 	 R45	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R96	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[154]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S155	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[155]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[156]	 - 	 - 	 - 	 - 	 - 	 R66	 R66	 R66	 R66	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R66	 S108	 R66	 - 	 S109	 R66	 R66	 R66	 - 	 - 	 R66	 - 	 - 	 - 	 - 	 R66	 - 	 - 	 - 	 - 	 R66	 - 	 R66	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R66	 - 	 - 	 - 	 - 	 - 	 - 	 R66	 - 	 R66	 - 	 - 	 - 	 R66	 R66	 - 	 R66	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R66	 R66
[157]	 - 	 - 	 - 	 - 	 - 	 R54	 R54	 R54	 R54	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R54	 R54	 R54	 - 	 R54	 R54	 R54	 R54	 - 	 - 	 R54	 - 	 - 	 - 	 - 	 R54	 - 	 - 	 - 	 - 	 R54	 - 	 R54	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R54	 - 	 - 	 - 	 - 	 - 	 - 	 R54	 - 	 R54	 - 	 - 	 - 	 R54	 R54	 - 	 R54	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R54	 R54
[158]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R106	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R106	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R106	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[159]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R107	 - 	 - 	 - 	 - 	 S161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[160]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S186	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[161]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[162]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 R108	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[163]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[164]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[165]	 - 	 - 	 - 	 - 	 - 	 R144	 R144	 R144	 R144	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R144	 - 	 R144	 - 	 R144	 R144	 R144	 R144	 - 	 - 	 R144	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R144	 - 	 R144	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R144	 - 	 - 	 - 	 - 	 - 	 - 	 R144	 - 	 R144	 - 	 - 	 - 	 R144	 R144	 - 	 R144	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R144	 R144
[166]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S181	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[167]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[168]	 - 	 - 	 - 	 - 	 - 	 R181	 R181	 R181	 R181	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R181	 - 	 R181	 - 	 R181	 R181	 R181	 R181	 - 	 - 	 R181	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R181	 - 	 R181	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R181	 - 	 - 	 - 	 - 	 - 	 - 	 R181	 - 	 R181	 - 	 - 	 - 	 R181	 R181	 - 	 R181	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R181	 R181
[169]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[170]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 R184	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[171]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S176	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[172]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R186	 - 	 S166	 - 	 S167	 - 	 S170	 R186	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R186	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R186	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R186	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[173]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R185	 - 	 - 	 - 	 - 	 - 	 - 	 R185	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R185	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S174	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[174]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[175]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R187	 - 	 S166	 - 	 S167	 - 	 S170	 R187	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R187	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R187	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R187	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[176]	 - 	 - 	 - 	 - 	 - 	 R183	 R183	 R183	 R183	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R183	 - 	 R183	 - 	 R183	 R183	 R183	 R183	 - 	 - 	 R183	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R183	 - 	 R183	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R183	 - 	 - 	 - 	 - 	 - 	 - 	 R183	 - 	 R183	 - 	 - 	 - 	 R183	 R183	 - 	 R183	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R183	 R183
[177]	 - 	 - 	 - 	 - 	 - 	 D0	 D1	 R182	 D2	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R182	 - 	 D3	 - 	 D4	 R182	 D6	 R182	 - 	 - 	 R182	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R182	 - 	 R182	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R182	 - 	 - 	 - 	 - 	 - 	 - 	 D5	 - 	 R182	 - 	 - 	 - 	 R182	 R182	 - 	 R182	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R182	 R182
[178]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 S179	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[179]	 - 	 - 	 - 	 - 	 - 	 R178	 R178	 R178	 R178	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R178	 - 	 R178	 - 	 R178	 R178	 R178	 R178	 - 	 - 	 R178	 - 	 - 	 - 	 - 	 R178	 - 	 - 	 - 	 - 	 R178	 - 	 R178	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R178	 - 	 - 	 - 	 - 	 - 	 - 	 R178	 - 	 R178	 - 	 - 	 - 	 R178	 R178	 - 	 R178	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R178	 R178
[180]	 - 	 - 	 - 	 - 	 - 	 R150	 R150	 R150	 R150	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R150	 - 	 R150	 - 	 R150	 R150	 R150	 R150	 - 	 - 	 R150	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R150	 - 	 R150	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R150	 - 	 - 	 - 	 - 	 - 	 - 	 R150	 - 	 R150	 - 	 - 	 - 	 R150	 R150	 - 	 R150	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R150	 R150
[181]	 - 	 - 	 - 	 - 	 - 	 R195	 R195	 R195	 R195	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R195	 - 	 R195	 - 	 R195	 R195	 R40	 R195	 - 	 - 	 R195	 - 	 - 	 - 	 - 	 R194	 - 	 - 	 - 	 - 	 R195	 - 	 R195	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R195	 - 	 - 	 - 	 - 	 - 	 - 	 R195	 - 	 R195	 - 	 - 	 - 	 R195	 R195	 - 	 R195	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R195	 R195
[182]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[183]	 - 	 - 	 - 	 - 	 - 	 R196	 R196	 R196	 R196	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R196	 - 	 R196	 - 	 R196	 R196	 R196	 R196	 - 	 - 	 R196	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R196	 - 	 R196	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R196	 - 	 - 	 - 	 - 	 - 	 - 	 R196	 - 	 R196	 - 	 - 	 - 	 R196	 R196	 - 	 R196	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R196	 R196
[184]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R139	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R139	 - 	 S166	 - 	 S167	 R139	 S170	 R139	 - 	 - 	 R139	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R139	 - 	 R139	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R139	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R139	 - 	 - 	 - 	 R139	 R139	 - 	 R139	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R139	 R139
[185]	 - 	 - 	 - 	 - 	 - 	 R126	 R126	 R126	 R126	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R126	 S108	 R126	 - 	 S109	 R126	 R126	 R126	 - 	 - 	 R126	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R126	 - 	 R126	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R126	 - 	 - 	 - 	 - 	 - 	 - 	 R126	 - 	 R126	 - 	 - 	 - 	 R126	 R126	 - 	 R126	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R126	 R126
[186]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R105	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R105	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R105	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[187]	 R34	 R34	 - 	 - 	 R34	 R34	 R34	 - 	 - 	 R34	 R34	 R34	 R34	 R34	 - 	 R34	 - 	 - 	 - 	 R34	 R34	 - 	 R34	 - 	 R34	 R34	 R34	 R34	 - 	 - 	 - 	 - 	 - 	 - 	 R34	 R34	 - 	 R34	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R34	 R34	 R34	 - 	 - 	 R34	 - 	 R34	 - 	 R34	 R34	 R34	 - 	 - 	 R34	 - 	 R34	 - 	 R34	 R34	 R34	 R34	 R34	 - 	 - 	 - 
[188]	 - 	 - 	 - 	 - 	 R111	 R111	 R111	 - 	 - 	 - 	 - 	 - 	 - 	 R111	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R111	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[189]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S190	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[190]	 R110	 R110	 - 	 - 	 R110	 R110	 R110	 - 	 - 	 R110	 R110	 R110	 R110	 R110	 - 	 R110	 - 	 - 	 - 	 R110	 R110	 - 	 R110	 - 	 R110	 R110	 R110	 R110	 - 	 - 	 - 	 - 	 - 	 - 	 R110	 R110	 - 	 R110	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R110	 R110	 R110	 - 	 - 	 R110	 - 	 R110	 - 	 R110	 R110	 R110	 - 	 - 	 R110	 - 	 R110	 - 	 R110	 R110	 R110	 R110	 R110	 - 	 - 	 - 
[191]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S208	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[192]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S195	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R114	 - 	 - 	 - 	 - 	 - 	 - 	 R114	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[193]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[194]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R115	 - 	 - 	 - 	 - 	 - 	 - 	 R115	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[195]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R117	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[196]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S204	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[197]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R118	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S202	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[198]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R119	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R119	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[199]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[200]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R121	 - 	 - 	 R121	 - 	 - 	 - 	 - 	 R121	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R121	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[201]	 - 	 - 	 - 	 - 	 - 	 R42	 R42	 R42	 R42	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R42	 - 	 R42	 - 	 R42	 R42	 R42	 R42	 - 	 - 	 R42	 - 	 - 	 - 	 - 	 R42	 - 	 - 	 - 	 - 	 R42	 - 	 R42	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R42	 - 	 - 	 - 	 - 	 - 	 - 	 R42	 - 	 R42	 - 	 - 	 - 	 R42	 R42	 - 	 R42	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R42	 R42
[202]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[203]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R120	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R120	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[204]	 - 	 - 	 - 	 - 	 R116	 R116	 R116	 - 	 - 	 R116	 R116	 R116	 R116	 R116	 - 	 R116	 - 	 - 	 - 	 R116	 R116	 - 	 R116	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R116	 - 	 - 	 - 	 R116	 - 	 - 	 R116	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R116	 R116	 R116	 - 	 - 	 R116	 - 	 R116	 - 	 R116	 R116	 R116	 - 	 - 	 R116	 - 	 R116	 - 	 R116	 R116	 R116	 R116	 R116	 - 	 - 	 - 
[205]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S206	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[206]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[207]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 R113	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[208]	 - 	 - 	 - 	 - 	 R112	 R112	 R112	 - 	 - 	 - 	 - 	 - 	 - 	 R112	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R112	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[209]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S210	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[210]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R31	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R31	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[211]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R98	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[212]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S213	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[213]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S139	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[214]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S215	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[215]	 R32	 R32	 - 	 - 	 R32	 R32	 R32	 - 	 - 	 R32	 R32	 R32	 R32	 R32	 - 	 R32	 - 	 - 	 - 	 R32	 R32	 - 	 R32	 - 	 R32	 R32	 R32	 R32	 - 	 - 	 - 	 - 	 - 	 - 	 R32	 R32	 - 	 R32	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R32	 R32	 R32	 - 	 - 	 R32	 - 	 R32	 - 	 R32	 R32	 R32	 - 	 - 	 R32	 - 	 R32	 - 	 R32	 R32	 R32	 R32	 R32	 - 	 - 	 - 
[216]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R38	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[217]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[218]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[219]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R22	 - 	 R25	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[220]	 - 	 - 	 - 	 - 	 S76	 S7	 S8	 - 	 - 	 - 	 - 	 - 	 - 	 S77	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[221]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R29	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[222]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R28	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[223]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S231	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[224]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S225	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[225]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S226	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[226]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R26	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R26	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[227]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R98	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[228]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S229	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[229]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[230]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S108	 - 	 - 	 S109	 - 	 - 	 - 	 - 	 - 	 R27	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[231]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S232	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[232]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R23	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R23	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[233]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S62	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R98	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[234]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S235	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[235]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S104	 - 	 S99	 - 	 - 	 - 	 - 	 S90	 - 	 S89	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R87	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[236]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S108	 - 	 - 	 S109	 - 	 - 	 - 	 - 	 - 	 R24	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[237]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[238]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R21	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[239]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S240	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[240]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S241	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[241]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R20	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[242]	 R18	 R18	 - 	 - 	 R18	 R18	 R18	 - 	 - 	 R18	 R18	 R18	 R18	 R18	 - 	 R18	 - 	 - 	 - 	 R18	 R18	 - 	 R18	 - 	 R18	 R18	 R18	 R18	 - 	 - 	 - 	 - 	 - 	 - 	 R18	 R18	 - 	 R18	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R18	 R18	 R18	 - 	 - 	 R18	 - 	 R18	 - 	 R18	 R18	 R18	 - 	 - 	 R18	 - 	 R18	 - 	 R18	 R18	 R18	 R18	 R18	 - 	 - 	 - 
[243]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S244	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[244]	 R39	 R39	 - 	 - 	 R39	 R39	 R39	 - 	 - 	 R39	 R39	 R39	 R39	 R39	 - 	 R39	 - 	 - 	 - 	 R39	 R39	 - 	 R39	 - 	 R39	 R39	 R39	 R39	 - 	 - 	 - 	 - 	 - 	 - 	 R39	 R39	 - 	 R39	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R39	 R39	 R39	 - 	 - 	 R39	 - 	 R39	 - 	 R39	 R39	 R39	 - 	 - 	 R39	 - 	 R39	 - 	 R39	 R39	 R39	 R39	 R39	 - 	 - 	 - 
[245]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R38	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[246]	 R16	 R16	 - 	 - 	 R16	 R16	 R16	 - 	 - 	 R16	 R16	 R16	 R16	 R16	 - 	 R16	 - 	 - 	 - 	 R16	 R16	 - 	 R16	 - 	 R16	 R16	 R16	 R16	 - 	 - 	 - 	 - 	 - 	 - 	 R16	 R16	 - 	 R16	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R16	 R16	 R16	 - 	 - 	 R16	 - 	 R16	 - 	 R16	 R16	 R16	 - 	 - 	 R16	 - 	 R16	 - 	 R16	 R16	 R16	 R16	 R16	 - 	 - 	 - 
[247]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 R11	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[248]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R38	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[249]	 R12	 R12	 - 	 - 	 R12	 R12	 R12	 - 	 - 	 R12	 R12	 R12	 R12	 R12	 - 	 R12	 - 	 - 	 - 	 R12	 R12	 - 	 R12	 - 	 R12	 R12	 R12	 R12	 - 	 - 	 - 	 - 	 - 	 - 	 R12	 R12	 - 	 R12	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R12	 R12	 R12	 - 	 - 	 R12	 - 	 R12	 - 	 R12	 R12	 R12	 - 	 - 	 R12	 - 	 R12	 - 	 R12	 R12	 R12	 R12	 R12	 - 	 - 	 - 
[250]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S253	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R36	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[251]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R35	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R35	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[252]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R8	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[253]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R37	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[254]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R38	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[255]	 R9	 R9	 - 	 - 	 R9	 R9	 R9	 - 	 - 	 R9	 R9	 R9	 R9	 R9	 - 	 R9	 - 	 - 	 - 	 R9	 R9	 - 	 R9	 - 	 R9	 R9	 R9	 R9	 - 	 - 	 - 	 - 	 - 	 - 	 R9	 R9	 - 	 R9	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R9	 R9	 R9	 - 	 - 	 R9	 - 	 R9	 - 	 R9	 R9	 R9	 - 	 - 	 R9	 - 	 R9	 - 	 R9	 R9	 R9	 R9	 R9	 - 	 - 	 - 
[256]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S257	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[257]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[258]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 S259	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[259]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S261	 S262	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R203	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[260]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R202	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[261]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R204	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[262]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R205	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[263]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[264]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S265	 - 
[265]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R206	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[266]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S274	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[267]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 R210	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R210	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R210	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S272
[268]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R207	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R207	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S270	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[269]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R208	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R208	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R208	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[270]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[271]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R209	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R209	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R209	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[272]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[273]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 R211	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R211	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R211	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[274]	 - 	 - 	 - 	 - 	 - 	 R201	 R201	 R201	 R201	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R201	 - 	 R201	 - 	 R201	 R201	 R201	 R201	 - 	 - 	 R201	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R201	 - 	 R201	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R201	 - 	 - 	 - 	 - 	 - 	 - 	 R201	 - 	 R201	 - 	 - 	 - 	 R201	 R201	 - 	 R201	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R201	 R201
[275]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 S278	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[276]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 S277	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[277]	 - 	 - 	 - 	 - 	 R199	 R199	 R199	 - 	 - 	 R199	 R199	 R199	 R199	 R199	 - 	 R199	 - 	 - 	 - 	 R199	 R199	 - 	 R199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R199	 R199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R199	 R199	 R199	 - 	 - 	 R199	 - 	 R199	 - 	 R199	 R199	 R199	 - 	 - 	 R199	 - 	 R199	 - 	 R199	 R199	 R199	 R199	 R199	 - 	 - 	 - 
[278]	 - 	 - 	 - 	 - 	 - 	 R197	 R197	 R197	 R197	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R197	 - 	 R197	 - 	 R197	 R197	 R197	 R197	 - 	 - 	 R197	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R197	 - 	 R197	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R197	 - 	 - 	 - 	 - 	 - 	 - 	 R197	 - 	 R197	 - 	 - 	 - 	 R197	 R197	 - 	 R197	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R197	 R197
[279]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 S280	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[280]	 - 	 - 	 - 	 - 	 R200	 R200	 R200	 - 	 - 	 R200	 R200	 R200	 R200	 R200	 - 	 R200	 - 	 - 	 - 	 R200	 R200	 - 	 R200	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R200	 R200	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R200	 R200	 R200	 - 	 - 	 R200	 - 	 R200	 - 	 R200	 R200	 R200	 - 	 - 	 R200	 - 	 R200	 - 	 R200	 R200	 R200	 R200	 R200	 - 	 - 	 - 
[281]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S291	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[282]	 - 	 - 	 - 	 - 	 - 	 R40	 R40	 R40	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 R40	 - 	 R40	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R191	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S289	 - 	 - 
[283]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R165	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[284]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R166	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S286	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[285]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R167	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R167	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[286]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S288	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[287]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R168	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R168	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[288]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S289	 - 	 - 
[289]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[290]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R169	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R169	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[291]	 - 	 - 	 - 	 - 	 - 	 R163	 R163	 R163	 R163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R163	 - 	 R163	 - 	 R163	 R163	 R163	 R163	 - 	 - 	 R163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R163	 - 	 R163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R163	 - 	 - 	 - 	 - 	 - 	 - 	 R163	 - 	 R163	 - 	 - 	 - 	 R163	 R163	 - 	 R163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R163	 R163
[292]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[293]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S294	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[294]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[295]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S296	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[296]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[297]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S298	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[298]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[299]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 S300	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[300]	 - 	 - 	 - 	 - 	 - 	 R155	 R155	 R155	 R155	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R155	 - 	 R155	 - 	 R155	 R155	 R155	 R155	 - 	 - 	 R155	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R155	 - 	 R155	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R155	 - 	 - 	 - 	 - 	 - 	 - 	 R155	 - 	 R155	 - 	 - 	 - 	 R155	 R155	 - 	 R155	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R155	 R155
[301]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 R206	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[302]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S303	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[303]	 - 	 - 	 - 	 - 	 S6	 D0	 D1	 R122	 R122	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 R122	 - 	 R122	 S18	 S49	 R122	 S19	 R122	 - 	 - 	 R122	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R122	 - 	 R122	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R122	 S12	 S13	 S14	 - 	 - 	 S20	 R122	 S24	 R122	 S27	 S28	 S29	 R122	 R122	 S30	 R122	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 R122	 R122
[304]	 - 	 - 	 - 	 - 	 - 	 R154	 R154	 R154	 R154	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R154	 - 	 R154	 - 	 R154	 R154	 R154	 R154	 - 	 - 	 R154	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R154	 - 	 R154	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R154	 - 	 - 	 - 	 - 	 - 	 - 	 R154	 - 	 R154	 - 	 - 	 - 	 R154	 R154	 - 	 R154	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R154	 R154
[305]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R123	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R123	 - 	 S166	 - 	 S167	 R123	 S170	 R123	 - 	 - 	 R123	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R123	 - 	 R123	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R123	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R123	 - 	 - 	 - 	 R123	 R123	 - 	 R123	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R123	 R123
[306]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[307]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R149	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R149	 - 	 S166	 - 	 S167	 R149	 S170	 R149	 - 	 - 	 R149	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R149	 - 	 R149	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R149	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R149	 - 	 - 	 - 	 R149	 R149	 - 	 R149	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R149	 R149
[308]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S199	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S313	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[309]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S312	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[310]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R107	 - 	 - 	 - 	 - 	 S161	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[311]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R190	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[312]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R188	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R188	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[313]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[314]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S315	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[315]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R189	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R189	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[316]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R148	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R148	 - 	 S166	 - 	 S167	 R148	 S170	 R148	 - 	 - 	 R148	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R148	 - 	 R148	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R148	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R148	 - 	 - 	 - 	 R148	 R148	 - 	 R148	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R148	 R148
[317]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S320	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[318]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[319]	 - 	 - 	 - 	 - 	 - 	 R124	 R124	 R124	 R124	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R124	 - 	 R124	 - 	 R124	 R124	 R124	 R124	 - 	 - 	 R124	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R124	 - 	 R124	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R124	 - 	 - 	 - 	 - 	 - 	 - 	 R124	 - 	 R124	 - 	 - 	 - 	 R124	 R124	 - 	 R124	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R124	 R124
[320]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[321]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S323	 - 	 - 	 - 	 S324	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[322]	 - 	 - 	 - 	 - 	 - 	 R170	 R170	 R170	 R170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R170	 - 	 R170	 - 	 R170	 R170	 R170	 R170	 - 	 - 	 R170	 - 	 - 	 - 	 - 	 R170	 - 	 - 	 - 	 - 	 R170	 - 	 R170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R170	 - 	 - 	 - 	 - 	 - 	 - 	 R170	 - 	 R170	 - 	 - 	 - 	 R170	 R170	 - 	 R170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R170	 R170
[323]	 - 	 - 	 - 	 - 	 - 	 R171	 R171	 R171	 R171	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R171	 - 	 R171	 - 	 R171	 R171	 R171	 R171	 - 	 - 	 R171	 - 	 - 	 - 	 - 	 R171	 - 	 - 	 - 	 - 	 R171	 - 	 R171	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R171	 - 	 - 	 - 	 - 	 - 	 - 	 R171	 - 	 R171	 - 	 - 	 - 	 R171	 R171	 - 	 R171	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R171	 R171
[324]	 - 	 - 	 - 	 - 	 - 	 R172	 R172	 R172	 R172	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R172	 - 	 R172	 - 	 R172	 R172	 R172	 R172	 - 	 - 	 R172	 - 	 - 	 - 	 - 	 R172	 - 	 - 	 - 	 - 	 R172	 - 	 R172	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R172	 - 	 - 	 - 	 - 	 - 	 - 	 R172	 - 	 R172	 - 	 - 	 - 	 R172	 R172	 - 	 R172	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R172	 R172
[325]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R147	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R147	 - 	 S166	 - 	 S167	 R147	 S170	 R147	 - 	 - 	 R147	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R147	 - 	 R147	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R147	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R147	 - 	 - 	 - 	 R147	 R147	 - 	 R147	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R147	 R147
[326]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 S327	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[327]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[328]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 - 	 - 	 - 	 - 	 - 	 S329	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[329]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[330]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R146	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R146	 - 	 S166	 - 	 S167	 R146	 S170	 R146	 - 	 - 	 R146	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R146	 - 	 R146	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R146	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R146	 - 	 - 	 - 	 R146	 R146	 - 	 R146	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R146	 R146
[331]	 - 	 - 	 - 	 - 	 - 	 R145	 R145	 R145	 R145	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R145	 - 	 R145	 - 	 R145	 R145	 R145	 R145	 - 	 - 	 R145	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R145	 - 	 R145	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R145	 - 	 - 	 - 	 - 	 - 	 - 	 R145	 - 	 R145	 - 	 - 	 - 	 R145	 R145	 - 	 R145	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R145	 R145
[332]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[333]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R143	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R143	 - 	 S166	 - 	 S167	 R143	 S170	 R143	 - 	 - 	 R143	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R143	 - 	 R143	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R143	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R143	 - 	 - 	 - 	 R143	 R143	 - 	 R143	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R143	 R143
[334]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S354	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[335]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S341	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[336]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S174	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R173	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[337]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S339	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R174	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[338]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R175	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R175	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[339]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[340]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R176	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R176	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[341]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S348	 - 	 S345	 - 	 - 	 - 	 S18	 S344	 - 	 S343	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[342]	 - 	 - 	 - 	 - 	 - 	 S169	 S168	 - 	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S166	 - 	 S167	 - 	 S170	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R177	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R177	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[343]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S348	 - 	 S345	 - 	 - 	 - 	 S18	 S344	 - 	 S343	 R44	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[344]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 S94	 S148	 S96	 S97	 S149	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[345]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S349	 - 	 S345	 R94	 - 	 - 	 S18	 S344	 - 	 S343	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 S91	 S93	 S94	 S95	 S96	 S97	 S98	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[346]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[347]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R82	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[348]	 - 	 - 	 - 	 - 	 - 	 D0	 D0	 R40	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R92	 R40	 - 	 R40	 - 	 S105	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R191	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[349]	 - 	 - 	 - 	 - 	 - 	 R40	 R40	 R40	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 R92	 R40	 - 	 R40	 - 	 S105	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R191	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 R40	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S289	 - 	 - 
[350]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S353	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[351]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 - 	 R41	 S352	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[352]	 - 	 - 	 - 	 - 	 - 	 R152	 R152	 R152	 R152	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R152	 - 	 R152	 - 	 R152	 R152	 R152	 R152	 - 	 - 	 R152	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R152	 - 	 R152	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R152	 - 	 - 	 - 	 - 	 - 	 - 	 R152	 - 	 R152	 - 	 - 	 - 	 R152	 R152	 - 	 R152	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R152	 R152
[353]	 - 	 - 	 - 	 - 	 - 	 R128	 R128	 R128	 R128	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R128	 - 	 R128	 - 	 R128	 R128	 R128	 R128	 - 	 - 	 R128	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R128	 - 	 R128	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R128	 - 	 - 	 - 	 - 	 - 	 - 	 R128	 - 	 R128	 - 	 - 	 - 	 R128	 R128	 - 	 R128	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R128	 R128
[354]	 - 	 - 	 - 	 - 	 - 	 R140	 R140	 R140	 R140	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R140	 - 	 R140	 - 	 R140	 R140	 R140	 R140	 - 	 - 	 R140	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R140	 - 	 R140	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R140	 - 	 - 	 - 	 - 	 - 	 - 	 R140	 - 	 R140	 - 	 - 	 - 	 R140	 R140	 - 	 R140	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R140	 R140
[355]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 R184	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[356]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S357	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[357]	 - 	 - 	 - 	 - 	 - 	 R137	 R137	 R137	 R137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R137	 - 	 R137	 - 	 R137	 R137	 R137	 R137	 - 	 - 	 R137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R137	 - 	 R137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R137	 - 	 - 	 - 	 - 	 - 	 - 	 R137	 - 	 R137	 - 	 - 	 - 	 R137	 R137	 - 	 R137	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R137	 R137
[358]	 - 	 - 	 - 	 - 	 - 	 R131	 R131	 R131	 R131	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R131	 S108	 R131	 - 	 S359	 R131	 R131	 R131	 - 	 - 	 R131	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R131	 - 	 R131	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R131	 - 	 - 	 - 	 - 	 - 	 - 	 R131	 - 	 R131	 - 	 - 	 - 	 R131	 R131	 - 	 R131	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R131	 R131
[359]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 R76	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 S115	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[360]	 - 	 - 	 - 	 - 	 - 	 R129	 R129	 R129	 R129	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R129	 - 	 R129	 - 	 R129	 R129	 R129	 R129	 - 	 - 	 R129	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R129	 - 	 R129	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R129	 - 	 - 	 - 	 - 	 - 	 - 	 R129	 - 	 R129	 - 	 - 	 - 	 R129	 R129	 - 	 R129	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R129	 R129
[361]	 - 	 - 	 - 	 - 	 - 	 R132	 R132	 R132	 R132	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R132	 - 	 R132	 - 	 S365	 R132	 R132	 R132	 - 	 - 	 R132	 - 	 - 	 - 	 - 	 S363	 - 	 - 	 - 	 - 	 R132	 - 	 R132	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R132	 - 	 - 	 - 	 - 	 - 	 - 	 R132	 - 	 R132	 - 	 - 	 - 	 R132	 R132	 - 	 R132	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R132	 R132
[362]	 - 	 - 	 - 	 - 	 - 	 R133	 R133	 R133	 R133	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R133	 - 	 R133	 - 	 R133	 R133	 R133	 R133	 - 	 - 	 R133	 - 	 - 	 - 	 - 	 R133	 - 	 - 	 - 	 - 	 R133	 - 	 R133	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R133	 - 	 - 	 - 	 - 	 - 	 - 	 R133	 - 	 R133	 - 	 - 	 - 	 R133	 R133	 - 	 R133	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R133	 R133
[363]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[364]	 - 	 - 	 - 	 - 	 - 	 R134	 R134	 R134	 R134	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R134	 - 	 R134	 - 	 R134	 R134	 R134	 R134	 - 	 - 	 R134	 - 	 - 	 - 	 - 	 R134	 - 	 - 	 - 	 - 	 R134	 - 	 R134	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R134	 - 	 - 	 - 	 - 	 - 	 - 	 R134	 - 	 R134	 - 	 - 	 - 	 R134	 R134	 - 	 R134	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R134	 R134
[365]	 - 	 - 	 - 	 - 	 S6	 S7	 S8	 - 	 - 	 S37	 S39	 S38	 S40	 S9	 - 	 S44	 - 	 - 	 - 	 S18	 S49	 - 	 S19	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S47	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S12	 S13	 S14	 - 	 - 	 S20	 - 	 S24	 - 	 S27	 S28	 S29	 - 	 - 	 S30	 - 	 S31	 - 	 S35	 S36	 S41	 S42	 S43	 - 	 - 	 - 
[366]	 - 	 - 	 - 	 - 	 - 	 R41	 R41	 S321	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 R41	 S367	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 S79	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R41	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[367]	 - 	 - 	 - 	 - 	 - 	 R135	 R135	 R135	 R135	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R135	 - 	 R135	 - 	 R135	 R135	 R135	 R135	 - 	 - 	 R135	 - 	 - 	 - 	 - 	 R135	 - 	 - 	 - 	 - 	 R135	 - 	 R135	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R135	 - 	 - 	 - 	 - 	 - 	 - 	 R135	 - 	 R135	 - 	 - 	 - 	 R135	 R135	 - 	 R135	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R135	 R135
[368]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R130	 S163	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R130	 - 	 S166	 - 	 S167	 R130	 S170	 R130	 - 	 - 	 R130	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R130	 - 	 R130	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R130	 - 	 - 	 - 	 - 	 - 	 - 	 S164	 - 	 R130	 - 	 - 	 - 	 R130	 R130	 - 	 R130	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R130	 R130
[369]	 - 	 - 	 - 	 - 	 - 	 D1	 D0	 R127	 R127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R127	 - 	 R127	 - 	 S167	 R127	 S170	 R127	 - 	 - 	 R127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R127	 - 	 R127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R127	 - 	 - 	 - 	 - 	 - 	 - 	 R127	 - 	 R127	 - 	 - 	 - 	 R127	 R127	 - 	 R127	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R127	 R127
[370]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R38	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[371]	 R14	 R14	 - 	 - 	 R14	 R14	 R14	 - 	 - 	 R14	 R14	 R14	 R14	 R14	 - 	 R14	 - 	 - 	 - 	 R14	 R14	 - 	 R14	 - 	 R14	 R14	 R14	 R14	 - 	 - 	 - 	 - 	 - 	 - 	 R14	 R14	 - 	 R14	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R14	 R14	 R14	 - 	 - 	 R14	 - 	 R14	 - 	 R14	 R14	 R14	 - 	 - 	 R14	 - 	 R14	 - 	 R14	 R14	 R14	 R14	 R14	 - 	 - 	 - 
[372]	 - 	 - 	 - 	 - 	 - 	 D5	 D4	 R180	 D0	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R180	 - 	 D1	 - 	 D2	 R180	 D6	 R180	 - 	 - 	 R180	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R180	 - 	 R180	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R180	 - 	 - 	 - 	 - 	 - 	 - 	 D3	 - 	 R180	 - 	 - 	 - 	 R180	 R180	 - 	 R180	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 R180	 R180


DYNAMIC ACTIONS:

[6]	D0 -> { R3, S7 }
	D1 -> { R3, S8 }
	D2 -> { R3, S19 }
	D3 -> { R3, S49 }
[28]	D0 -> { S7, R122 }
	D1 -> { S8, R122 }
[47]	D0 -> { S6, R198 }
	D1 -> { S7, R198 }
	D2 -> { S8, R198 }
[177]	D0 -> { S169, R182 }
	D1 -> { S168, R182 }
	D2 -> { S163, R182 }
	D3 -> { S166, R182 }
	D4 -> { S167, R182 }
	D5 -> { S164, R182 }
	D6 -> { R182, S170 }
[184]	D0 -> { R139, S168 }
	D1 -> { R139, S169 }
[303]	D0 -> { S7, R122 }
	D1 -> { S8, R122 }
[305]	D0 -> { R123, S168 }
	D1 -> { R123, S169 }
[307]	D0 -> { R149, S168 }
	D1 -> { R149, S169 }
[316]	D0 -> { R148, S168 }
	D1 -> { R148, S169 }
[325]	D0 -> { R147, S168 }
	D1 -> { R147, S169 }
[330]	D0 -> { R146, S168 }
	D1 -> { R146, S169 }
[333]	D0 -> { R143, S168 }
	D1 -> { R143, S169 }
[348]	D0 -> { R40, R92 }
[368]	D0 -> { R130, S168 }
	D1 -> { R130, S169 }
[369]	D0 -> { R127, S168 }
	D1 -> { R127, S169 }
[372]	D0 -> { S163, R180 }
	D1 -> { S166, R180 }
	D2 -> { S167, R180 }
	D3 -> { S164, R180 }
	D4 -> { R180, S168 }
	D5 -> { R180, S169 }
	D6 -> { R180, S170 }


GOTO TABLE:

	[1]	[2]	[3]	[4]	[5]	[6]	[7]	[8]	[9]	[10]	[11]	[12]	[13]	[14]	[15]	[16]	[17]	[18]	[19]	[20]	[21]	[22]	[23]	[24]	[25]	[26]	[27]	[28]	[29]	[30]	[31]	[32]	[33]	[34]	[35]	[36]	[37]	[38]	[39]	[40]	[41]	[42]	[43]	[44]	[45]	[46]	[47]	[48]	[49]	[50]	[51]	[52]	[53]	[54]	[55]	[56]	[57]	[58]	[59]	[60]	[61]	[62]	[63]	[64]	[65]	[66]	[67]	[68]	[69]	[70]	[71]	[72]	[73]	[74]	[75]	[76]	[77]	[78]	[79]	[80]	[81]	[82]	[83]	[84]	[85]	[86]	[87]	[88]	[89]	[90]	[91]	[92]	[93]	[94]	[95]	[96]	[97]
	
[0]	 1 	 2 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[1]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[2]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 17 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 5 	 - 	 - 	 - 	 - 	 51 	 - 	 - 	 - 	 - 	 56 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[3]	 - 	 4 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[4]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 17 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 5 	 - 	 - 	 - 	 - 	 51 	 - 	 - 	 - 	 - 	 56 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[5]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[6]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 372 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[7]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[8]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[9]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[10]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[11]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[12]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[13]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[14]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[15]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[16]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[17]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 370 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[18]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 369 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[19]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 305 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 350 	 16 	 351 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[20]	 - 	 - 	 - 	 - 	 - 	 358 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[21]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[22]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[23]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[24]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 172 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 335 	 21 	 23 	 - 	 - 	 336 	 - 	 45 	 - 	 334 	 337 	 338 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[25]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[26]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[27]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 332 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[28]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 305 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 331 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[29]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 318 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 326 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[30]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 318 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 317 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[31]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 310 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 308 	 309 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[32]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[33]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[34]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[35]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[36]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[37]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[38]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[39]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[40]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[41]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[42]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[43]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[44]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 172 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 281 	 284 	 173 	 285 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 283 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[45]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[46]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[47]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 276 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 275 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[48]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[49]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 256 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[50]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 250 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[51]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[52]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 247 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[53]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 245 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[54]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[55]	 - 	 - 	 192 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 221 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 216 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[56]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[57]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 209 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[58]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[59]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 60 	 - 	 - 	 - 	 - 	 - 
[60]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 61 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[61]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 68 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[62]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 63 	 - 	 - 	 - 
[63]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[64]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[65]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[66]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[67]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[68]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 187 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[69]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 70 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[70]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 72 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[71]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[72]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[73]	 - 	 - 	 - 	 - 	 159 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[74]	 - 	 - 	 75 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[75]	 - 	 - 	 - 	 - 	 78 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[76]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[77]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[78]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[79]	 - 	 - 	 - 	 - 	 - 	 80 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[80]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[81]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[82]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[83]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[84]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[85]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[86]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[87]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[88]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[89]	 - 	 - 	 - 	 - 	 - 	 153 	 151 	 81 	 92 	 82 	 83 	 - 	 - 	 134 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 152 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[90]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 147 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[91]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 143 	 - 	 - 
[92]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[93]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[94]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[95]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[96]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[97]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[98]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[99]	 - 	 - 	 - 	 - 	 - 	 107 	 - 	 81 	 92 	 82 	 83 	 130 	 132 	 134 	 133 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 131 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[100]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[101]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[102]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[103]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[104]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[105]	 - 	 - 	 - 	 - 	 - 	 107 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 106 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[106]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[107]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[108]	 - 	 - 	 - 	 - 	 - 	 119 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[109]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 110 	 112 	 - 	 113 	 102 	 - 	 103 	 - 	 114 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 111 	 - 
[110]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[111]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[112]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[113]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[114]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[115]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[116]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[117]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[118]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[119]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[120]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[121]	 - 	 - 	 - 	 - 	 - 	 122 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[122]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[123]	 - 	 - 	 - 	 - 	 - 	 125 	 124 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[124]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[125]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[126]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[127]	 - 	 - 	 - 	 - 	 - 	 125 	 128 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[128]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[129]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[130]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[131]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[132]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[133]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[134]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[135]	 - 	 - 	 - 	 - 	 136 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[136]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[137]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 138 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[138]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[139]	 - 	 - 	 - 	 - 	 136 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[140]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[141]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[142]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[143]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 144 	 - 	 - 	 - 
[144]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[145]	 - 	 - 	 - 	 - 	 - 	 146 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[146]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[147]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[148]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[149]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[150]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[151]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[152]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[153]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[154]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[155]	 - 	 - 	 - 	 - 	 - 	 156 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[156]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[157]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[158]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[159]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 160 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[160]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[161]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 162 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[162]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[163]	 - 	 - 	 - 	 - 	 - 	 185 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[164]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 184 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[165]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[166]	 - 	 - 	 182 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 180 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[167]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 178 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[168]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[169]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 177 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[170]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 172 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 173 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 171 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[171]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[172]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[173]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[174]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 175 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[175]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[176]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[177]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[178]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[179]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[180]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[181]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[182]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 183 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[183]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[184]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[185]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[186]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[187]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[188]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 189 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[189]	 - 	 - 	 192 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 191 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[190]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[191]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[192]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 193 	 194 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[193]	 - 	 - 	 - 	 205 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[194]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[195]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 196 	 197 	 198 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[196]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[197]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[198]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[199]	 - 	 - 	 - 	 200 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[200]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[201]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[202]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 203 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[203]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[204]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[205]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[206]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 207 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[207]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[208]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[209]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[210]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 211 	 - 	 - 	 - 	 - 	 - 	 - 
[211]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 212 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[212]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[213]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 214 	 - 	 133 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[214]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[215]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[216]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 242 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 243 	 - 	 - 	 - 	 - 
[217]	 - 	 - 	 239 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[218]	 - 	 - 	 237 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[219]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 223 	 - 	 - 	 224 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[220]	 - 	 - 	 192 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 222 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[221]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[222]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[223]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[224]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[225]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[226]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 227 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[227]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 228 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[228]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[229]	 - 	 - 	 - 	 - 	 - 	 230 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[230]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[231]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[232]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 233 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[233]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 234 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[234]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[235]	 - 	 - 	 - 	 - 	 - 	 236 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 - 	 103 	 101 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[236]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[237]	 - 	 - 	 - 	 - 	 238 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[238]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[239]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[240]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[241]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[242]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[243]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[244]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[245]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 246 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 243 	 - 	 - 	 - 	 - 
[246]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[247]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 248 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[248]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 249 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 243 	 - 	 - 	 - 	 - 
[249]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[250]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 252 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[251]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[252]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 254 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[253]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[254]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 255 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 243 	 - 	 - 	 - 	 - 
[255]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[256]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[257]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 258 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[258]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[259]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 260 
[260]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[261]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[262]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[263]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 264 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[264]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[265]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 267 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 266 	 268 	 269 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[266]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[267]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[268]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[269]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[270]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 267 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 271 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[271]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[272]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 273 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[273]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[274]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[275]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 279 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[276]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[277]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[278]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[279]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[280]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[281]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[282]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[283]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[284]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[285]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[286]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 287 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[287]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[288]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[289]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 290 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[290]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[291]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[292]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 293 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[293]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[294]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 295 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[295]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[296]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 297 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[297]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[298]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 299 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[299]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[300]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[301]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 267 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 302 	 268 	 269 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[302]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[303]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 305 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 304 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[304]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[305]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[306]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 307 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[307]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[308]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 310 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 314 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[309]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[310]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 311 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[311]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[312]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[313]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 316 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[314]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[315]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[316]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[317]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[318]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[319]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[320]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 325 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[321]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 322 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[322]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[323]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[324]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[325]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[326]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[327]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 328 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[328]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[329]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 330 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[330]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[331]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[332]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 333 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[333]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[334]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[335]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[336]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[337]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[338]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[339]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 318 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 335 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 340 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[340]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[341]	 - 	 - 	 46 	 - 	 - 	 80 	 - 	 81 	 92 	 82 	 83 	 - 	 - 	 - 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 22 	 347 	 346 	 86 	 87 	 88 	 - 	 - 	 - 	 - 	 - 	 342 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[342]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[343]	 - 	 - 	 46 	 - 	 - 	 153 	 151 	 81 	 92 	 82 	 83 	 - 	 - 	 134 	 - 	 84 	 - 	 - 	 85 	 100 	 102 	 22 	 347 	 346 	 86 	 87 	 88 	 152 	 - 	 - 	 - 	 - 	 305 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 350 	 16 	 351 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[344]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 147 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 256 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[345]	 - 	 - 	 46 	 - 	 - 	 107 	 - 	 81 	 92 	 82 	 83 	 130 	 132 	 134 	 133 	 84 	 - 	 - 	 85 	 100 	 102 	 22 	 347 	 346 	 86 	 87 	 88 	 131 	 - 	 - 	 - 	 - 	 172 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 281 	 284 	 173 	 285 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 283 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[346]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[347]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[348]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[349]	 - 	 - 	 - 	 - 	 136 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[350]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[351]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[352]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[353]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[354]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[355]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 172 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 173 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 356 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[356]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[357]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[358]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 361 	 360 	 362 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[359]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 110 	 112 	 - 	 113 	 102 	 22 	 347 	 11 	 114 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 318 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 366 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 111 	 - 
[360]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[361]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 364 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[362]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[363]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 368 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 15 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[364]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[365]	 - 	 - 	 46 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 22 	 10 	 11 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 318 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 16 	 366 	 21 	 23 	 - 	 - 	 - 	 - 	 45 	 - 	 - 	 - 	 - 	 25 	 26 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 32 	 - 	 33 	 - 	 34 	 48 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[366]	 - 	 - 	 - 	 319 	 201 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[367]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[368]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[369]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[370]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 371 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 243 	 - 	 - 	 - 	 - 
[371]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 
[372]	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 165 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 	 - 

